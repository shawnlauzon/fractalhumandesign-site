{
  "openapi": "3.1.0",
  "info": {
    "title": "V3",
    "version": "unknown"
  },
  "servers": [
    {
      "url": "https://{youraccountname}.api-us1.com/api/3",
      "variables": {
        "youraccountname": {
          "default": "youraccountname"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "name": "Api-Token",
        "in": "header",
        "x-default": ""
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "paths": {
    "/ecomOrders": {
      "post": {
        "summary": "Create an order",
        "description": "Create a new e-commerce order resource.",
        "operationId": "create-order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ecomOrder": {
                    "properties": {
                      "externalid": {
                        "type": "string",
                        "description": "The id of the order in the external service. ONLY REQUIRED IF EXTERNALCHECKOUTID NOT INCLUDED."
                      },
                      "externalcheckoutid": {
                        "type": "string",
                        "description": "The id of the cart in the external service. ONLY REQUIRED IF EXTERNALID IS NOT INCLUDED."
                      },
                      "source": {
                        "type": "integer",
                        "description": "The order source code. 0 - historical, 1 - real-time. Only real-time orders (source = 1) will show up on your Ecommerce Dashboard and trigger the “Makes a purchase” automation start, abandoned cart actions, customer conversions, or revenue attributions.",
                        "format": "int32"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address of the customer who placed the order."
                      },
                      "orderProducts": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the product"
                          },
                          "price": {
                            "type": "integer",
                            "description": "The price of the product, in cents. (i.e. $456.78 => 45678). Must be greater than or equal to zero.",
                            "format": "int32"
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity ordered.",
                            "format": "int32"
                          },
                          "externalid": {
                            "type": "string",
                            "description": "The id of the product in the external service."
                          },
                          "category": {
                            "type": "string",
                            "description": "The category of the product."
                          },
                          "sku": {
                            "type": "string",
                            "description": "The SKU for the product"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the product"
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "An Image URL that displays an image of the product"
                          },
                          "productUrl": {
                            "type": "string",
                            "description": "A URL linking to the product in your store"
                          }
                        },
                        "required": [
                          "name",
                          "price",
                          "quantity",
                          "externalid"
                        ],
                        "type": "object"
                      },
                      "totalPrice": {
                        "type": "integer",
                        "description": "The total price of the order in cents, including tax and shipping charges. (i.e. $456.78 => 45678). Must be greater than or equal to zero.",
                        "format": "int32"
                      },
                      "shippingAmount": {
                        "type": "integer",
                        "description": "The total shipping amount in cents for the order",
                        "format": "int32"
                      },
                      "taxAmount": {
                        "type": "integer",
                        "description": "The total tax amount for the order in cents",
                        "format": "int32"
                      },
                      "discountAmount": {
                        "type": "integer",
                        "description": "The total discount amount for the order in cents",
                        "format": "int32"
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency of the order (3-digit ISO code, e.g., 'USD')."
                      },
                      "connectionid": {
                        "type": "integer",
                        "description": "The id of the connection from which this order originated.",
                        "format": "int32"
                      },
                      "customerid": {
                        "type": "integer",
                        "description": "The id of the customer associated with this order.",
                        "format": "int32"
                      },
                      "orderUrl": {
                        "type": "string",
                        "description": "The URL for the order in the external service."
                      },
                      "externalCreatedDate": {
                        "type": "string",
                        "description": "The date the order was placed.",
                        "format": "date"
                      },
                      "externalUpdatedDate": {
                        "type": "string",
                        "description": "The date the order was updated."
                      },
                      "abandonedDate": {
                        "type": "string",
                        "description": "The date the cart was abandoned. REQUIRED ONLY IF INCLUDING EXTERNALCHECKOUTID."
                      },
                      "shippingMethod": {
                        "type": "string",
                        "description": "The shipping method of the order."
                      },
                      "orderNumber": {
                        "type": "string",
                        "description": "The order number. This can be different than the externalid."
                      },
                      "orderDiscounts": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The discount code or name of the discount"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of discount, either 'order' for discount on the order, or 'shipping' for free shipping."
                          },
                          "discountAmount": {
                            "type": "integer",
                            "description": "The amount of the discount in cents.",
                            "format": "int32"
                          }
                        },
                        "required": [],
                        "type": "object"
                      }
                    },
                    "required": [
                      "externalid",
                      "externalcheckoutid",
                      "source",
                      "email",
                      "totalPrice",
                      "currency",
                      "connectionid",
                      "customerid",
                      "externalCreatedDate",
                      "abandonedDate"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "ecomOrder": {
                      "externalid": "3246315233",
                      "source": "1",
                      "email": "alice@example.com",
                      "orderProducts": [
                        {
                          "externalid": "PROD12345",
                          "name": "Pogo Stick",
                          "price": 4900,
                          "quantity": 1,
                          "category": "Toys",
                          "sku": "POGO-12",
                          "description": "lorem ipsum...",
                          "imageUrl": "https://example.com/product.jpg",
                          "productUrl": "https://store.example.com/product12345"
                        },
                        {
                          "externalid": "PROD23456",
                          "name": "Skateboard",
                          "price": 3000,
                          "quantity": 1,
                          "category": "Toys",
                          "sku": "SK8BOARD145",
                          "description": "lorem ipsum...",
                          "imageUrl": "https://example.com/product.jpg",
                          "productUrl": "https://store.example.com/product45678"
                        }
                      ],
                      "orderDiscounts": [
                        {
                          "name": "1OFF",
                          "type": "order",
                          "discountAmount": 100
                        }
                      ],
                      "orderUrl": "https://example.com/orders/3246315233",
                      "externalCreatedDate": "2016-09-13T17:41:39-04:00",
                      "externalUpdatedDate": "2016-09-14T17:41:39-04:00",
                      "shippingMethod": "UPS Ground",
                      "totalPrice": 9111,
                      "shippingAmount": 200,
                      "taxAmount": 500,
                      "discountAmount": 100,
                      "currency": "USD",
                      "orderNumber": "myorder-123",
                      "connectionid": "1",
                      "customerid": "1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"connections\": [\n        {\n            \"service\": \"example\",\n            \"externalid\": \"examplestore\",\n            \"name\": \"My Example Store\",\n            \"isInternal\": \"0\",\n            \"connectionType\": \"ecommerce\",\n            \"status\": \"1\",\n            \"syncStatus\": \"0\",\n            \"sync_request_time\": null,\n            \"sync_start_time\": null,\n            \"lastSync\": null,\n            \"logoUrl\": \"https://myexamplestore.com/images/logo.jpg\",\n            \"linkUrl\": \"https://myexamplestore.com\",\n            \"cdate\": \"2018-01-12T13:13:53-06:00\",\n            \"udate\": \"2018-01-12T13:13:53-06:00\",\n            \"credentialExpiration\": null,\n            \"links\": {\n                \"options\": \"https://exampleaccount.api-us1.com/api/3/connections/1/options\",\n                \"customers\": \"https://exampleaccount.api-us1.com.api-us1.com/api/3/connections/1/customers\"\n            },\n            \"id\": \"1\",\n            \"serviceName\": \"shopify\"\n        }\n    ],\n    \"ecomOrderProducts\": [\n        {\n            \"externalid\": \"PROD12345\",\n            \"name\": \"Pogo Stick\",\n            \"price\": 4900,\n            \"quantity\": 1,\n            \"category\": \"Toys\",\n            \"sku\": \"POGO-12\",\n            \"description\": \"lorem ipsum...\",\n            \"imageUrl\": \"https://example.com/product.jpg\",\n            \"productUrl\": \"https://store.example.com/product12345\"\n        },\n        {\n            \"externalid\": \"PROD23456\",\n            \"name\": \"Skateboard\",\n            \"price\": 3000,\n            \"quantity\": 1,\n            \"category\": \"Toys\",\n            \"sku\": \"SK8BOARD145\",\n            \"description\": \"lorem ipsum...\",\n            \"imageUrl\": \"https://example.com/product.jpg\",\n            \"productUrl\": \"https://store.example.com/product45678\"\n        }\n    ],\n    \"ecomOrderDiscounts\": [\n        {\n            \"name\": \"1OFF\",\n            \"type\": \"order\",\n            \"orderid\": \"5355\",\n            \"discountAmount\": \"100\",\n            \"id\": \"1\",\n            \"createdDate\": \"2019-09-05T12:16:18-05:00\",\n            \"updatedDate\": \"2019-09-05T12:16:18-05:00\"\n        }\n    ],\n    \"ecomOrder\": {\n        \"externalid\": \"3246315234\",\n        \"source\": \"1\",\n        \"email\": \"alice@example.com\",\n        \"currency\": \"USD\",\n        \"connectionid\": \"1\",\n        \"customerid\": \"1\",\n        \"orderUrl\": \"https://example.com/orders/3246315233\",\n        \"shippingMethod\": \"UPS Ground\",\n        \"totalPrice\": 9111,\n        \"shippingAmount\": 200,\n        \"taxAmount\": 500,\n        \"discountAmount\": 100,\n        \"externalCreatedDate\": \"2016-09-13T16:41:39-05:00\",\n        \"totalProducts\": 2,\n        \"createdDate\": \"2019-09-05T12:16:18-05:00\",\n        \"updatedDate\": \"2019-09-05T12:16:18-05:00\",\n        \"state\": 1,\n        \"connection\": \"1\",\n        \"orderProducts\": [\n            \"1\",\n            \"2\"\n        ],\n        \"orderDiscounts\": [\n            \"1\"\n        ],\n        \"customer\": \"1\",\n        \"orderDate\": \"2016-09-13T16:41:39-05:00\",\n        \"tstamp\": \"2019-09-05T12:16:18-05:00\",\n        \"links\": {\n            \"connection\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/connection\",\n            \"customer\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/customer\",\n            \"orderProducts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderProducts\",\n            \"orderDiscounts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderDiscounts\",\n            \"orderActivities\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderActivities\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "connections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "example": "example"
                          },
                          "externalid": {
                            "type": "string",
                            "example": "examplestore"
                          },
                          "name": {
                            "type": "string",
                            "example": "My Example Store"
                          },
                          "isInternal": {
                            "type": "string",
                            "example": "0"
                          },
                          "connectionType": {
                            "type": "string",
                            "example": "ecommerce"
                          },
                          "status": {
                            "type": "string",
                            "example": "1"
                          },
                          "syncStatus": {
                            "type": "string",
                            "example": "0"
                          },
                          "sync_request_time": {},
                          "sync_start_time": {},
                          "lastSync": {},
                          "logoUrl": {
                            "type": "string",
                            "example": "https://myexamplestore.com/images/logo.jpg"
                          },
                          "linkUrl": {
                            "type": "string",
                            "example": "https://myexamplestore.com"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-01-12T13:13:53-06:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2018-01-12T13:13:53-06:00"
                          },
                          "credentialExpiration": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "type": "string",
                                "example": "https://exampleaccount.api-us1.com/api/3/connections/1/options"
                              },
                              "customers": {
                                "type": "string",
                                "example": "https://exampleaccount.api-us1.com.api-us1.com/api/3/connections/1/customers"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "serviceName": {
                            "type": "string",
                            "example": "shopify"
                          }
                        }
                      }
                    },
                    "ecomOrderProducts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "externalid": {
                            "type": "string",
                            "example": "PROD12345"
                          },
                          "name": {
                            "type": "string",
                            "example": "Pogo Stick"
                          },
                          "price": {
                            "type": "integer",
                            "example": 4900,
                            "default": 0
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "category": {
                            "type": "string",
                            "example": "Toys"
                          },
                          "sku": {
                            "type": "string",
                            "example": "POGO-12"
                          },
                          "description": {
                            "type": "string",
                            "example": "lorem ipsum..."
                          },
                          "imageUrl": {
                            "type": "string",
                            "example": "https://example.com/product.jpg"
                          },
                          "productUrl": {
                            "type": "string",
                            "example": "https://store.example.com/product12345"
                          }
                        }
                      }
                    },
                    "ecomOrderDiscounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "1OFF"
                          },
                          "type": {
                            "type": "string",
                            "example": "order"
                          },
                          "orderid": {
                            "type": "string",
                            "example": "5355"
                          },
                          "discountAmount": {
                            "type": "string",
                            "example": "100"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "createdDate": {
                            "type": "string",
                            "example": "2019-09-05T12:16:18-05:00"
                          },
                          "updatedDate": {
                            "type": "string",
                            "example": "2019-09-05T12:16:18-05:00"
                          }
                        }
                      }
                    },
                    "ecomOrder": {
                      "type": "object",
                      "properties": {
                        "externalid": {
                          "type": "string",
                          "example": "3246315234"
                        },
                        "source": {
                          "type": "string",
                          "example": "1"
                        },
                        "email": {
                          "type": "string",
                          "example": "alice@example.com"
                        },
                        "currency": {
                          "type": "string",
                          "example": "USD"
                        },
                        "connectionid": {
                          "type": "string",
                          "example": "1"
                        },
                        "customerid": {
                          "type": "string",
                          "example": "1"
                        },
                        "orderUrl": {
                          "type": "string",
                          "example": "https://example.com/orders/3246315233"
                        },
                        "shippingMethod": {
                          "type": "string",
                          "example": "UPS Ground"
                        },
                        "totalPrice": {
                          "type": "integer",
                          "example": 9111,
                          "default": 0
                        },
                        "shippingAmount": {
                          "type": "integer",
                          "example": 200,
                          "default": 0
                        },
                        "taxAmount": {
                          "type": "integer",
                          "example": 500,
                          "default": 0
                        },
                        "discountAmount": {
                          "type": "integer",
                          "example": 100,
                          "default": 0
                        },
                        "externalCreatedDate": {
                          "type": "string",
                          "example": "2016-09-13T16:41:39-05:00"
                        },
                        "totalProducts": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "createdDate": {
                          "type": "string",
                          "example": "2019-09-05T12:16:18-05:00"
                        },
                        "updatedDate": {
                          "type": "string",
                          "example": "2019-09-05T12:16:18-05:00"
                        },
                        "state": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "connection": {
                          "type": "string",
                          "example": "1"
                        },
                        "orderProducts": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "orderDiscounts": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "customer": {
                          "type": "string",
                          "example": "1"
                        },
                        "orderDate": {
                          "type": "string",
                          "example": "2016-09-13T16:41:39-05:00"
                        },
                        "tstamp": {
                          "type": "string",
                          "example": "2019-09-05T12:16:18-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "connection": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/connection"
                            },
                            "customer": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/customer"
                            },
                            "orderProducts": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderProducts"
                            },
                            "orderDiscounts": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderDiscounts"
                            },
                            "orderActivities": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderActivities"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all orders",
        "description": "List all existing e-commerce order resources.",
        "operationId": "list-all-orders",
        "parameters": [
          {
            "name": "filters[connectionid]",
            "in": "query",
            "description": "Filter by the connection id. Must be greater than 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[externalid]",
            "in": "query",
            "description": "Filter by the external id of the order.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[externalcheckoutid]",
            "in": "query",
            "description": "Filter by the external checkout id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[email]",
            "in": "query",
            "description": "Filter by the customer email address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[state]",
            "in": "query",
            "description": "Filter by the state of the order. 0 = Pending, 1 = Completed, 2 = Abandoned, 3 = Recovered, 4 = Waiting (Customer checked out but payment is not yet completed)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[customerid]",
            "in": "query",
            "description": "Filter by the customer id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[external_created_date]",
            "in": "query",
            "description": "Filter by the external created date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "orders[connectionid]",
            "in": "query",
            "description": "Order by connection ID. Accepted values are ASC or DESC.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orders[externalid]",
            "in": "query",
            "description": "Order by external ID. Accepted values are ASC or DESC.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orders[externalcheckoutid]",
            "in": "query",
            "description": "Order by external checkout ID. Accepted values are ASC or DESC.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[email]",
            "in": "query",
            "description": "Order by email. Accepted values are ASC or DESC.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[state]",
            "in": "query",
            "description": "Order by state. Accepted values are ASC or DESC.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orders[customerid]",
            "in": "query",
            "description": "Order by customer ID. Accepted values are ASC or DESC.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[external_created_date]",
            "in": "query",
            "description": "Order by external created date. Accepted values are ASC or DESC.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"ecomOrders\": [\n    {\n      \"externalid\": \"3246315234\",\n      \"source\": \"1\",\n      \"email\": \"alice@example.com\",\n      \"currency\": \"USD\",\n      \"connectionid\": \"1\",\n      \"customerid\": \"1\",\n      \"orderUrl\": \"https://example.com/orders/3246315233\",\n      \"shippingMethod\": \"UPS Ground\",\n      \"totalPrice\": 9111,\n      \"shippingAmount\": 200,\n      \"taxAmount\": 500,\n      \"discountAmount\": 100,\n      \"externalCreatedDate\": \"2016-09-13T16:41:39-05:00\",\n      \"totalProducts\": 2,\n      \"createdDate\": \"2019-09-05T12:16:18-05:00\",\n      \"updatedDate\": \"2019-09-05T12:16:18-05:00\",\n      \"state\": 1,\n      \"connection\": \"1\",\n      \"orderProducts\": [\n        \"1\",\n        \"2\"\n      ],\n      \"customer\": \"1\",\n      \"orderDate\": \"2016-09-13T16:41:39-05:00\",\n      \"tstamp\": \"2019-09-05T12:16:18-05:00\",\n      \"links\": {\n        \"connection\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/connection\",\n        \"customer\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/customer\",\n        \"orderProducts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderProducts\",\n        \"orderDiscounts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderDiscounts\",\n        \"orderActivities\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderActivities\"\n      },\n      \"id\": \"1\"\n    },\n    {\n      \"externalid\": \"47856739866\",\n      \"source\": \"1\",\n      \"email\": \"example@example.com\",\n      \"currency\": \"USD\",\n      \"connectionid\": \"1\",\n      \"customerid\": \"2\",\n      \"orderUrl\": \"https://example.com/orders/47856739866\",\n      \"shippingMethod\": \"UPS Ground\",\n      \"totalPrice\": 3450,\n      \"shippingAmount\": 100,\n      \"taxAmount\": 0,\n      \"discountAmount\": 0,\n      \"externalCreatedDate\": \"2019-09-06T2:10:00-05:00\",\n      \"totalProducts\": 2,\n      \"createdDate\": \"2019-09-06T2:10:00-05:00\",\n      \"updatedDate\": \"2019-09-06T2:10:00-05:00\",\n      \"state\": 1,\n      \"connection\": \"1\",\n      \"orderProducts\": [\n        \"3\"\n      ],\n      \"customer\": \"2\",\n      \"orderDate\": \"2019-09-06T2:10:00-05:00\",\n      \"tstamp\": \"2019-09-06T2:10:00-05:00\",\n      \"links\": {\n        \"connection\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/2/connection\",\n        \"customer\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/2/customer\",\n        \"orderProducts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/2/orderProducts\",\n        \"orderDiscounts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/2/orderDiscounts\",\n        \"orderActivities\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/2/orderActivities\"\n      },\n      \"id\": \"2\"\n    },\n  ],\n  \"meta\": {\n    \"total\": \"2\"\n  }\n}"
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks": {
      "post": {
        "summary": "Create a webhook",
        "description": "Create a new webhook",
        "operationId": "create-webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhook": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "A name (or label) to give this webhook."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL where the webhook will send the POST request when the event occurs. Note that for https endpoints, we only can send webhooks on port 443, the default https port."
                      },
                      "events": {
                        "type": "array",
                        "description": "The [event(s)](#section-events) that will trigger the webhook to fire.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sources": {
                        "type": "array",
                        "description": "The [source(s)](#section-sources) causing an event to occur.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "listid": {
                        "type": "integer",
                        "description": "The id of a list associated with an event. If set, only events happening on this list id will trigger the webhook. This parameter has no effect on the following webhook events:     \"subscriber_note\",    \"contact_tag_added\",    \"contact_tag_removed\",    \"contact_task_add\",    \"list_add\",    \"sms_sent\",    \"sms_reply\",    \"sms_unsub\",    \"deal_add\",    \"deal_update\",    \"deal_note_add\",    \"deal_pipeline_add\",    \"deal_stage_add\",    \"deal_task_add\",    \"deal_tasktype_add\",    \"deal_task_complete\",    \"account_add\",    \"account_update\",    \"account_contact_add\",    \"account_contact_update\",",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "name",
                      "url",
                      "events",
                      "sources"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "JSON": {
                  "value": {
                    "webhook": {
                      "name": "My Hook",
                      "url": "http://example.com/my-hook",
                      "events": [
                        "subscribe",
                        "unsubscribe",
                        "sent"
                      ],
                      "sources": [
                        "public",
                        "system"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"webhook\": {\n    \"cdate\": \"2016-01-01T12:00:00-00:00\",\n    \"listid\": \"0\",\n    \"name\": \"My Hook\",\n    \"url\": \"http://example.com/my-hook\",\n    \"events\": [\n      \"subscribe\",\n      \"unsubscribe\",\n      \"sent\"\n    ],\n    \"sources\": [\n      \"public\",\n      \"system\"\n    ],\n    \"links\": [],\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhook": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2016-01-01T12:00:00-00:00"
                        },
                        "listid": {
                          "type": "string",
                          "example": "0"
                        },
                        "name": {
                          "type": "string",
                          "example": "My Hook"
                        },
                        "url": {
                          "type": "string",
                          "example": "http://example.com/my-hook"
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "subscribe"
                          }
                        },
                        "sources": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "public"
                          }
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all webhooks",
        "description": "List all existing webhooks",
        "operationId": "get-a-list-of-webhooks",
        "parameters": [
          {
            "name": "filters[name]",
            "in": "query",
            "description": "Filter by webhook name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[url]",
            "in": "query",
            "description": "Filter by webhook url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[listid]",
            "in": "query",
            "description": "Filter by webhook's associated list",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"webhooks\": [\n    {\n      \"cdate\": \"2016-01-01T12:00:00-00:00\",\n      \"listid\": \"0\",\n      \"name\": \"My Hook\",\n      \"url\": \"http://example.com/my-hook\",\n      \"events\": [\n        \"subscribe\",\n        \"unsubscribe\",\n        \"sent\"\n      ],\n      \"sources\": [\n        \"public\",\n        \"system\"\n      ],\n      \"links\": [],\n      \"id\": \"1\"\n    },\n    {\n      \"cdate\": \"2016-01-01T12:00:00-00:00\",\n      \"listid\": \"0\",\n      \"name\": \"My Hook 2\",\n      \"url\": \"http://example.com/my-hook-2\",\n      \"events\": [\n        \"subscribe\"\n      ],\n      \"sources\": [\n        \"admin\"\n      ],\n      \"links\": [],\n      \"id\": \"2\"\n    },\n  ],\n  \"meta\": {\n    \"total\": \"2\"\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ecomOrders/{ecomOrderId}": {
      "get": {
        "summary": "Retrieve an order",
        "description": "Retrieve an existing e-commerce order resource.",
        "operationId": "get-order",
        "parameters": [
          {
            "name": "ecomOrderId",
            "in": "path",
            "description": "The id of the order to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"ecomOrder\": {\n        \"customerid\": \"1\",\n        \"connectionid\": \"1\",\n        \"state\": \"1\",\n        \"source\": \"1\",\n        \"externalid\": \"1233456789\",\n        \"externalcheckoutid\": null,\n        \"orderNumber\": \"123456789\",\n        \"email\": \"alice@example.com\",\n        \"totalPrice\": \"1000\",\n        \"discountAmount\": \"100\",\n        \"shippingAmount\": \"120\",\n        \"taxAmount\": \"120\",\n        \"totalProducts\": \"1\",\n        \"currency\": \"usd\",\n        \"shippingMethod\": \"ground shipping\",\n        \"orderUrl\": \"https://examplestore.com/orders/123456789\",\n        \"externalCreatedDate\": \"2019-06-29T14:44:49-05:00\",\n        \"externalUpdatedDate\": \"2019-06-29T14:44:49-05:00\",\n        \"abandonedDate\": null,\n        \"createdDate\": \"2019-06-29T14:44:51-05:00\",\n        \"updatedDate\": \"2019-06-29T14:44:51-05:00\",\n        \"orderDate\": \"2019-06-29T14:44:49-05:00\",\n        \"tstamp\": \"2019-06-29T14:44:51-05:00\",\n        \"links\": {\n            \"connection\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/connection\",\n            \"customer\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/customer\",\n            \"orderProducts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderProducts\",\n            \"orderDiscounts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderDiscounts\",\n            \"orderActivities\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderActivities\"\n        },\n        \"id\": \"1\",\n        \"connection\": \"1\",\n        \"customer\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomOrder": {
                      "type": "object",
                      "properties": {
                        "customerid": {
                          "type": "string",
                          "example": "1"
                        },
                        "connectionid": {
                          "type": "string",
                          "example": "1"
                        },
                        "state": {
                          "type": "string",
                          "example": "1"
                        },
                        "source": {
                          "type": "string",
                          "example": "1"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "1233456789"
                        },
                        "externalcheckoutid": {},
                        "orderNumber": {
                          "type": "string",
                          "example": "123456789"
                        },
                        "email": {
                          "type": "string",
                          "example": "alice@example.com"
                        },
                        "totalPrice": {
                          "type": "string",
                          "example": "1000"
                        },
                        "discountAmount": {
                          "type": "string",
                          "example": "100"
                        },
                        "shippingAmount": {
                          "type": "string",
                          "example": "120"
                        },
                        "taxAmount": {
                          "type": "string",
                          "example": "120"
                        },
                        "totalProducts": {
                          "type": "string",
                          "example": "1"
                        },
                        "currency": {
                          "type": "string",
                          "example": "usd"
                        },
                        "shippingMethod": {
                          "type": "string",
                          "example": "ground shipping"
                        },
                        "orderUrl": {
                          "type": "string",
                          "example": "https://examplestore.com/orders/123456789"
                        },
                        "externalCreatedDate": {
                          "type": "string",
                          "example": "2019-06-29T14:44:49-05:00"
                        },
                        "externalUpdatedDate": {
                          "type": "string",
                          "example": "2019-06-29T14:44:49-05:00"
                        },
                        "abandonedDate": {},
                        "createdDate": {
                          "type": "string",
                          "example": "2019-06-29T14:44:51-05:00"
                        },
                        "updatedDate": {
                          "type": "string",
                          "example": "2019-06-29T14:44:51-05:00"
                        },
                        "orderDate": {
                          "type": "string",
                          "example": "2019-06-29T14:44:49-05:00"
                        },
                        "tstamp": {
                          "type": "string",
                          "example": "2019-06-29T14:44:51-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "connection": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/connection"
                            },
                            "customer": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/customer"
                            },
                            "orderProducts": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderProducts"
                            },
                            "orderDiscounts": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderDiscounts"
                            },
                            "orderActivities": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderActivities"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "connection": {
                          "type": "string",
                          "example": "1"
                        },
                        "customer": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete an order",
        "description": "Delete an existing e-commerce order resource.",
        "operationId": "delete-order",
        "parameters": [
          {
            "name": "ecomOrderId",
            "in": "path",
            "description": "The id of the order to delete.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/connections/{id}": {
      "get": {
        "summary": "Retrieve a connection",
        "description": "Retrieve an existing connection resource.",
        "operationId": "get-connection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the connection to retrieve",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"connection\": {\n    \"isInternal\": 0,\n    \"service\": \"fooCommerce\",\n    \"externalid\": \"toystore123\",\n    \"name\": \"Toystore, Inc.\",\n    \"logoUrl\": \"http://example.com/i/foo.png\",\n    \"linkUrl\": \"http://example.com/foo/\",\n    \"cdate\": \"2017-02-02T14:56:05-06:00\",\n    \"udate\": \"2017-02-02T14:56:05-06:00\",\n    \"links\": {\n      \"customers\": \"/connections/1/customers\"\n    },\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "type": "object",
                      "properties": {
                        "isInternal": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "service": {
                          "type": "string",
                          "example": "fooCommerce"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "toystore123"
                        },
                        "name": {
                          "type": "string",
                          "example": "Toystore, Inc."
                        },
                        "logoUrl": {
                          "type": "string",
                          "example": "http://example.com/i/foo.png"
                        },
                        "linkUrl": {
                          "type": "string",
                          "example": "http://example.com/foo/"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-02-02T14:56:05-06:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-02-02T14:56:05-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "customers": {
                              "type": "string",
                              "example": "/connections/1/customers"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a connection",
        "description": "Delete an existing connection resource.",
        "operationId": "delete-connection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the connection to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a connection",
        "description": "Update an existing connection resource.",
        "operationId": "update-connection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the connection to update",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connection": {
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "The name of the service."
                      },
                      "externalid": {
                        "type": "string",
                        "description": "The id of the account in the external service."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name associated with the account in the external service."
                      },
                      "logoUrl": {
                        "type": "string",
                        "description": "The URL to a logo image for the third-party service."
                      },
                      "linkUrl": {
                        "type": "string",
                        "description": "The link to the third-party integrator's site."
                      },
                      "status": {
                        "type": "integer",
                        "description": "The status of the connection (0 = error; 1 = connected)",
                        "format": "int32"
                      },
                      "syncStatus": {
                        "type": "integer",
                        "description": "The status of a sync triggered on the connection (0 = sync stopped; 1 = sync running).",
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "JSON": {
                  "value": {
                    "connection": {
                      "externalid": "johndoe@example.com",
                      "name": "Acme, Inc."
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"connection\": {\n    \"service\": \"fooCommerce\",\n    \"externalid\": \"johndoe@example.com\",\n    \"name\": \"Acme, Inc.\",\n    \"isInternal\": \"0\",\n    \"status\": \"1\",\n    \"syncStatus\": \"0\",\n    \"logoUrl\": \"http://foocorp.net/i/path3523.png\",\n    \"linkUrl\": \"http://example.com/\",\n    \"cdate\": \"2017-02-02T14:56:05-06:00\",\n    \"udate\": \"2017-02-03T15:54:51-06:00\",\n    \"links\": {\n      \"customers\": \"/api/3/connections/2/customers\"\n    },\n    \"id\": \"2\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "type": "object",
                      "properties": {
                        "service": {
                          "type": "string",
                          "example": "fooCommerce"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "Acme, Inc."
                        },
                        "isInternal": {
                          "type": "string",
                          "example": "0"
                        },
                        "status": {
                          "type": "string",
                          "example": "1"
                        },
                        "syncStatus": {
                          "type": "string",
                          "example": "0"
                        },
                        "logoUrl": {
                          "type": "string",
                          "example": "http://foocorp.net/i/path3523.png"
                        },
                        "linkUrl": {
                          "type": "string",
                          "example": "http://example.com/"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-02-02T14:56:05-06:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-02-03T15:54:51-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "customers": {
                              "type": "string",
                              "example": "/api/3/connections/2/customers"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ecomCustomers/{id}": {
      "put": {
        "summary": "Update a customer",
        "description": "Update an existing e-commerce customer resource.",
        "operationId": "update-customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the customer to update",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ecomCustomer": {
                    "properties": {
                      "externalid": {
                        "type": "string",
                        "description": "The id of the customer in the external service."
                      },
                      "connectionid": {
                        "type": "string",
                        "description": "The id of the connection object for the service where the customer originates."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address of the customer."
                      },
                      "acceptsMarketing": {
                        "type": "string",
                        "description": "Indication of whether customer has opt-ed in to marketing communications. 0 = not opted-in, 1 = opted-in. A value of 0 means the contact will match the \"Has not opted in to marketing\" segment condition and a value of 1 means the contact will match the \"Has opted in to marketing\" segment condition."
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "JSON": {
                  "value": {
                    "ecomCustomer": {
                      "externalid": "98765"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"ecomCustomer\": {\n    \"connectionid\": \"1\",\n    \"externalid\": \"98765\",\n    \"email\": \"alice@example.com\",\n    \"totalRevenue\": \"3280\",\n    \"totalOrders\": \"2\",\n    \"totalProducts\": \"2\",\n    \"avgRevenuePerOrder\": \"2285\",\n    \"avgProductCategory\": \"Electronics\",\n    \"tstamp\": \"2017-02-06T14:05:31-06:00\",\n    \"links\": {\n      \"connection\": \"/api/3/ecomCustomers/1/connection\",\n      \"orders\": \"/api/3/ecomCustomers/1/orders\"\n    },\n    \"id\": \"1\",\n    \"connection\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomCustomer": {
                      "type": "object",
                      "properties": {
                        "connectionid": {
                          "type": "string",
                          "example": "1"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "98765"
                        },
                        "email": {
                          "type": "string",
                          "example": "alice@example.com"
                        },
                        "totalRevenue": {
                          "type": "string",
                          "example": "3280"
                        },
                        "totalOrders": {
                          "type": "string",
                          "example": "2"
                        },
                        "totalProducts": {
                          "type": "string",
                          "example": "2"
                        },
                        "avgRevenuePerOrder": {
                          "type": "string",
                          "example": "2285"
                        },
                        "avgProductCategory": {
                          "type": "string",
                          "example": "Electronics"
                        },
                        "tstamp": {
                          "type": "string",
                          "example": "2017-02-06T14:05:31-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "connection": {
                              "type": "string",
                              "example": "/api/3/ecomCustomers/1/connection"
                            },
                            "orders": {
                              "type": "string",
                              "example": "/api/3/ecomCustomers/1/orders"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "connection": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a customer",
        "description": "Retrieve an existing e-commerce customer resource.",
        "operationId": "get-customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the customer to retrieve",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"ecomCustomer\": {\n        \"connectionid\": \"3\",\n        \"externalid\": \"1440117293120\",\n        \"email\": \"john.doe@example.com\",\n        \"totalRevenue\": \"150761\",\n        \"totalOrders\": \"1\",\n        \"totalProducts\": \"3\",\n        \"avgRevenuePerOrder\": \"150761\",\n        \"avgProductCategory\": \"Musical Instrument\",\n        \"tstamp\": \"2019-01-01T10:23:22-06:00\",\n        \"acceptsMarketing\": \"0\",\n        \"links\": {\n            \"connection\": \"https://:account.api-us1.com/api/:version/ecomCustomers/15/connection\",\n            \"orders\": \"https://:account.api-us1.com/api/:version/ecomCustomers/15/orders\"\n        },\n        \"id\": \"15\",\n        \"connection\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomCustomer": {
                      "type": "object",
                      "properties": {
                        "connectionid": {
                          "type": "string",
                          "example": "3"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "1440117293120"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "totalRevenue": {
                          "type": "string",
                          "example": "150761"
                        },
                        "totalOrders": {
                          "type": "string",
                          "example": "1"
                        },
                        "totalProducts": {
                          "type": "string",
                          "example": "3"
                        },
                        "avgRevenuePerOrder": {
                          "type": "string",
                          "example": "150761"
                        },
                        "avgProductCategory": {
                          "type": "string",
                          "example": "Musical Instrument"
                        },
                        "tstamp": {
                          "type": "string",
                          "example": "2019-01-01T10:23:22-06:00"
                        },
                        "acceptsMarketing": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "connection": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/ecomCustomers/15/connection"
                            },
                            "orders": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/ecomCustomers/15/orders"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "15"
                        },
                        "connection": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a customer",
        "description": "Delete an existing e-commerce customer resource.",
        "operationId": "delete-customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the customer to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ecomCustomers": {
      "get": {
        "summary": "List all customers",
        "description": "List all e-commerce customer resources.",
        "operationId": "list-all-customers",
        "parameters": [
          {
            "name": "filters[email]",
            "in": "query",
            "description": "Filter by the email address of a customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[externalid]",
            "in": "query",
            "description": "Filter by the id of the customer in the external service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[connectionid]",
            "in": "query",
            "description": "Filter by the id of the connection object for the service where the customer originates.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "GET /ecomCustomers (Example RESPONSE)": {
                    "value": "{\n  \"ecomCustomers\": [\n    {\n      \"connectionid\": \"1\",\n      \"externalid\": \"56789\",\n      \"email\": \"alice@example.com\",\n      \"totalRevenue\": \"3280\",\n      \"totalOrders\": \"2\",\n      \"totalProducts\": \"2\",\n      \"avgRevenuePerOrder\": \"2285\",\n      \"avgProductCategory\": \"Electronics\",\n      \"tstamp\": \"2017-02-06T14:05:31-06:00\",\n      \"links\": {\n        \"connection\": \"/api/3/ecomCustomers/1/connection\",\n        \"orders\": \"/api/3/ecomCustomers/1/orders\"\n      },\n      \"id\": \"1\",\n      \"connection\": \"1\"\n    },\n    {\n      \"connectionid\": \"2\",\n      \"externalid\": \"44322\",\n      \"email\": \"alice@example.com\",\n      \"totalRevenue\": \"7599\",\n      \"totalOrders\": \"1\",\n      \"totalProducts\": \"1\",\n      \"avgRevenuePerOrder\": \"7599\",\n      \"avgProductCategory\": \"Books\",\n      \"tstamp\": \"2016-12-13T18:02:07-06:00\",\n      \"links\": {\n        \"connection\": \"/api/3/ecomCustomers/3/connection\",\n        \"orders\": \"/api/3/ecomCustomers/3/orders\"\n      },\n      \"id\": \"3\",\n      \"connection\": \"2\"\n    },\n    {\n      \"connectionid\": \"0\",\n      \"externalid\": \"0\",\n      \"email\": \"alice@example.com\",\n      \"totalRevenue\": \"10879\",\n      \"totalOrders\": \"3\",\n      \"totalProducts\": \"3\",\n      \"avgRevenuePerOrder\": \"3626\",\n      \"avgProductCategory\": \"Electronics\",\n      \"tstamp\": \"2017-02-06T14:05:31-06:00\",\n      \"links\": {\n        \"connection\": \"/api/3/ecomCustomers/2/connection\",\n        \"orders\": \"/api/3/ecomCustomers/2/orders\"\n      },\n      \"id\": \"2\",\n      \"connection\": null\n    }\n  ],\n  \"meta\": {\n    \"total\": \"3\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomCustomers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "connectionid": {
                            "type": "string",
                            "example": "1"
                          },
                          "externalid": {
                            "type": "string",
                            "example": "56789"
                          },
                          "email": {
                            "type": "string",
                            "example": "alice@example.com"
                          },
                          "totalRevenue": {
                            "type": "string",
                            "example": "3280"
                          },
                          "totalOrders": {
                            "type": "string",
                            "example": "2"
                          },
                          "totalProducts": {
                            "type": "string",
                            "example": "2"
                          },
                          "avgRevenuePerOrder": {
                            "type": "string",
                            "example": "2285"
                          },
                          "avgProductCategory": {
                            "type": "string",
                            "example": "Electronics"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "2017-02-06T14:05:31-06:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "connection": {
                                "type": "string",
                                "example": "/api/3/ecomCustomers/1/connection"
                              },
                              "orders": {
                                "type": "string",
                                "example": "/api/3/ecomCustomers/1/orders"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "connection": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a customer",
        "description": "Create a new e-commerce customer resource.",
        "operationId": "create-customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ecomCustomer": {
                    "properties": {
                      "connectionid": {
                        "type": "string",
                        "description": "The id of the connection object for the service where the customer originates."
                      },
                      "externalid": {
                        "type": "string",
                        "description": "The id of the customer in the external service."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address of the customer."
                      },
                      "acceptsMarketing": {
                        "type": "string",
                        "description": "Indication of whether customer has opt-ed in to marketing communications. 0 = not opted-in, 1 = opted-in. A value of 0 means the contact will match the \"Has not opted in to marketing\" segment condition and a value of 1 means the contact will match the \"Has opted in to marketing\" segment condition."
                      }
                    },
                    "required": [
                      "connectionid",
                      "externalid",
                      "email"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "JSON": {
                  "value": {
                    "ecomCustomer": {
                      "connectionid": "1",
                      "externalid": "56789",
                      "email": "alice@example.com",
                      "acceptsMarketing": "1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"ecomCustomer\": {\n    \"connectionid\": \"1\",\n    \"externalid\": \"56789\",\n    \"email\": \"alice@example.com\",\n    \"links\": {\n      \"connection\": \"/api/3/ecomCustomers/1/connection\",\n      \"orders\": \"/api/3/ecomCustomers/1/orders\"\n    },\n    \"id\": \"1\",\n    \"connection\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomCustomer": {
                      "type": "object",
                      "properties": {
                        "connectionid": {
                          "type": "string",
                          "example": "1"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "56789"
                        },
                        "email": {
                          "type": "string",
                          "example": "alice@example.com"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "connection": {
                              "type": "string",
                              "example": "/api/3/ecomCustomers/1/connection"
                            },
                            "orders": {
                              "type": "string",
                              "example": "/api/3/ecomCustomers/1/orders"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "connection": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhook/events": {
      "get": {
        "summary": "List all webhook events",
        "description": "List all available webhook events",
        "operationId": "get-a-list-of-webhook-events",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"webhookEvents\": [\n    \"bounce\",\n    \"click\",\n    \"contact_tag_added\",\n    \"contact_tag_removed\",\n    \"deal_add\",\n    \"deal_note_add\",\n    \"deal_pipeline_add\",\n    \"deal_stage_add\",\n    \"deal_task_add\",\n    \"deal_task_complete\",\n    \"deal_tasktype_add\",\n    \"deal_update\",\n    \"forward\",\n    \"list_add\",\n    \"open\",\n    \"reply\",\n    \"sent\",\n    \"share\",\n    \"sms_reply\",\n    \"sms_sent\",\n    \"sms_unsub\",\n    \"subscribe\",\n    \"subscriber_note\",\n    \"unsubscribe\",\n    \"update\"\n  ],\n  \"meta\": {\n    \"total\": 25\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhookEvents": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "bounce"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 25,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/{id}": {
      "get": {
        "summary": "Retrieve a webhook",
        "description": "Retrieve an existing webhook",
        "operationId": "get-webhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"webhook\": {\n    \"cdate\": \"2016-01-01T12:00:00-00:00\",\n    \"listid\": \"0\",\n    \"name\": \"My hook\",\n    \"url\": \"http://example.com/my-hook\",\n    \"events\": [\n      \"subscribe\",\n      \"unsubscribe\",\n      \"sent\"\n    ],\n    \"sources\": [\n      \"admin\",\n      \"api\",\n      \"system\"\n    ],\n    \"links\": [],\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhook": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2016-01-01T12:00:00-00:00"
                        },
                        "listid": {
                          "type": "string",
                          "example": "0"
                        },
                        "name": {
                          "type": "string",
                          "example": "My hook"
                        },
                        "url": {
                          "type": "string",
                          "example": "http://example.com/my-hook"
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "subscribe"
                          }
                        },
                        "sources": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "admin"
                          }
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a webhook",
        "description": "Update an existing webhook",
        "operationId": "update-webhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The webhook id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhook": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "A name (or label) to give the webhook."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL where the webhook will send the POST request when the event occurs."
                      },
                      "events": {
                        "type": "array",
                        "description": "The The [event(s)](#section-events) that will trigger the webhook to fire. that will trigger the webhook to fire.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sources": {
                        "type": "array",
                        "description": "The [source(s)](#section-sources) causing an event to occur.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "listid": {
                        "type": "integer",
                        "description": "The id of a list associated with an event (required for some events).",
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "webhook": {
                      "name": "My Hook",
                      "url": "http://example.com/my-hook",
                      "events": [
                        "subscribe",
                        "unsubscribe",
                        "sent"
                      ],
                      "sources": [
                        "public",
                        "system"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"webhook\": {\n    \"cdate\": \"2016-01-01T12:00:00-00:00\",\n    \"listid\": \"0\",\n    \"name\": \"My Hook\",\n    \"url\": \"http://example.com/my-hook\",\n    \"events\": [\n      \"subscribe\",\n      \"unsubscribe\",\n      \"sent\"\n    ],\n    \"sources\": [\n      \"public\",\n      \"system\"\n    ],\n    \"links\": [],\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhook": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2016-01-01T12:00:00-00:00"
                        },
                        "listid": {
                          "type": "string",
                          "example": "0"
                        },
                        "name": {
                          "type": "string",
                          "example": "My Hook"
                        },
                        "url": {
                          "type": "string",
                          "example": "http://example.com/my-hook"
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "subscribe"
                          }
                        },
                        "sources": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "public"
                          }
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a webhook",
        "description": "Delete an existing webhook",
        "operationId": "delete-webhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The webhook id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/connections": {
      "get": {
        "summary": "List all connections",
        "description": "List all existing connection resources.",
        "operationId": "list-all-connections",
        "parameters": [
          {
            "name": "filters[service]",
            "in": "query",
            "description": "Filter by the external service name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[externalid]",
            "in": "query",
            "description": "Filter by the external id associated with a connection.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"connections\": [\n    {\n      \"service\": \"shopify\",\n      \"externalid\": \"foo.myshopify.com\",\n      \"name\": \"Foo, Inc.\",\n      \"isInternal\": \"1\",\n      \"status\": \"1\",\n      \"syncStatus\": \"0\",\n      \"lastSync\": \"2017-02-02T13:09:07-06:00\",\n      \"logoUrl\": \"\",\n      \"linkUrl\": \"\",\n      \"cdate\": \"2017-02-02T13:09:07-06:00\",\n      \"udate\": \"2017-02-02T13:09:12-06:00\",\n      \"links\": {\n        \"customers\": \"/api/3/connections/1/customers\"\n      },\n      \"id\": \"1\"\n    },\n    {\n      \"service\": \"fooCommerce\",\n      \"externalid\": \"johndoe@example.com\",\n      \"name\": \"Acme, Inc.\",\n      \"isInternal\": \"0\",\n      \"status\": \"1\",\n      \"syncStatus\": \"0\",\n      \"lastSync\": null,\n      \"logoUrl\": \"http://example.com/i/foo.png\",\n      \"linkUrl\": \"http://example.com/foo/\",\n      \"cdate\": \"2017-02-02T14:56:05-06:00\",\n      \"udate\": \"2017-02-03T15:54:51-06:00\",\n      \"links\": {\n        \"customers\": \"/api/3/connections/2/customers\"\n      },\n      \"id\": \"2\"\n    }\n  ],\n  \"meta\": {\n    \"total\": \"2\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "connections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "example": "shopify"
                          },
                          "externalid": {
                            "type": "string",
                            "example": "foo.myshopify.com"
                          },
                          "name": {
                            "type": "string",
                            "example": "Foo, Inc."
                          },
                          "isInternal": {
                            "type": "string",
                            "example": "1"
                          },
                          "status": {
                            "type": "string",
                            "example": "1"
                          },
                          "syncStatus": {
                            "type": "string",
                            "example": "0"
                          },
                          "lastSync": {
                            "type": "string",
                            "example": "2017-02-02T13:09:07-06:00"
                          },
                          "logoUrl": {
                            "type": "string",
                            "example": ""
                          },
                          "linkUrl": {
                            "type": "string",
                            "example": ""
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-02-02T13:09:07-06:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2017-02-02T13:09:12-06:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "customers": {
                                "type": "string",
                                "example": "/api/3/connections/1/customers"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a connection",
        "description": "Create a new connection resource.",
        "operationId": "create-connection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connection": {
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "The name of the service."
                      },
                      "externalid": {
                        "type": "string",
                        "description": "The id of the account in the external service."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name associated with the account in the external service. Often this will be a company name (e.g., 'My Toystore, Inc.')."
                      },
                      "logoUrl": {
                        "type": "string",
                        "description": "The URL to a logo image for the external service."
                      },
                      "linkUrl": {
                        "type": "string",
                        "description": "The URL to a page where the integration with the external service can be managed in the third-party's website."
                      }
                    },
                    "required": [
                      "service",
                      "externalid",
                      "name",
                      "logoUrl",
                      "linkUrl"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "JSON": {
                  "value": {
                    "connection": {
                      "service": "fooCommerce",
                      "externalid": "toystore123",
                      "name": "Toystore, Inc.",
                      "logoUrl": "http://example.com/i/foo.png",
                      "linkUrl": "http://example.com/foo/"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"connection\": {\n    \"isInternal\": 0,\n    \"service\": \"fooCommerce\",\n    \"externalid\": \"toystore123\",\n    \"name\": \"Toystore, Inc.\",\n    \"logoUrl\": \"http://example.com/i/foo.png\",\n    \"linkUrl\": \"http://example.com/foo/\",\n    \"cdate\": \"2017-02-02T14:56:05-06:00\",\n    \"udate\": \"2017-02-02T14:56:05-06:00\",\n    \"links\": {\n      \"customers\": \"/connections/1/customers\"\n    },\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "type": "object",
                      "properties": {
                        "isInternal": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "service": {
                          "type": "string",
                          "example": "fooCommerce"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "toystore123"
                        },
                        "name": {
                          "type": "string",
                          "example": "Toystore, Inc."
                        },
                        "logoUrl": {
                          "type": "string",
                          "example": "http://example.com/i/foo.png"
                        },
                        "linkUrl": {
                          "type": "string",
                          "example": "http://example.com/foo/"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-02-02T14:56:05-06:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-02-02T14:56:05-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "customers": {
                              "type": "string",
                              "example": "/connections/1/customers"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/brandings/{id}": {
      "get": {
        "summary": "Retrieve a branding",
        "description": "Retrieve an existing branding resource",
        "operationId": "get-branding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"branding\": {\n\t\t\"groupid\": \"3\",\n\t\t\"siteName\": \"ActiveCampaign Email Marketing\",\n\t\t\"siteLogo\": \"http:\\/\\/mysite.com\\/logo.jpg\",\n\t\t\"siteLogoSmall\": \"http:\\/\\/mysite.com\\/logo_small.jpg\",\n\t\t\"headerTextValue\": \"my custom text header\",\n\t\t\"headerHtmlValue\": \"<p>my custom HTML header<\\/p>\",\n\t\t\"footerTextValue\": \"my custom text footer\",\n\t\t\"footerHtmlValue\": \"<p>my custom HTML footer<\\/p>\",\n\t\t\"copyright\": \"1\",\n\t\t\"version\": \"1\",\n\t\t\"license\": \"1\",\n\t\t\"links\": \"1\",\n\t\t\"help\": \"1\",\n\t\t\"adminTemplateHtm\": \"\",\n\t\t\"adminTemplateCss\": \"\",\n\t\t\"publicTemplateHtm\": \"\",\n\t\t\"publicTemplateCss\": \"\",\n\t\t\"favicon\": null,\n\t\t\"id\": \"1\"\n\t}\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "branding": {
                      "type": "object",
                      "properties": {
                        "groupid": {
                          "type": "string",
                          "example": "3"
                        },
                        "siteName": {
                          "type": "string",
                          "example": "ActiveCampaign Email Marketing"
                        },
                        "siteLogo": {
                          "type": "string",
                          "example": "http://mysite.com/logo.jpg"
                        },
                        "siteLogoSmall": {
                          "type": "string",
                          "example": "http://mysite.com/logo_small.jpg"
                        },
                        "headerTextValue": {
                          "type": "string",
                          "example": "my custom text header"
                        },
                        "headerHtmlValue": {
                          "type": "string",
                          "example": "<p>my custom HTML header</p>"
                        },
                        "footerTextValue": {
                          "type": "string",
                          "example": "my custom text footer"
                        },
                        "footerHtmlValue": {
                          "type": "string",
                          "example": "<p>my custom HTML footer</p>"
                        },
                        "copyright": {
                          "type": "string",
                          "example": "1"
                        },
                        "version": {
                          "type": "string",
                          "example": "1"
                        },
                        "license": {
                          "type": "string",
                          "example": "1"
                        },
                        "links": {
                          "type": "string",
                          "example": "1"
                        },
                        "help": {
                          "type": "string",
                          "example": "1"
                        },
                        "adminTemplateHtm": {
                          "type": "string",
                          "example": ""
                        },
                        "adminTemplateCss": {
                          "type": "string",
                          "example": ""
                        },
                        "publicTemplateHtm": {
                          "type": "string",
                          "example": ""
                        },
                        "publicTemplateCss": {
                          "type": "string",
                          "example": ""
                        },
                        "favicon": {},
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a branding",
        "description": "Update an existing branding resource",
        "operationId": "update-branding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Branding ID",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "branding": {
                    "properties": {
                      "groupid": {
                        "type": "integer",
                        "description": "The group ID. This value will always be 3.",
                        "default": 3,
                        "format": "int32"
                      },
                      "siteName": {
                        "type": "string",
                        "description": "Title of software. Example: 'ActiveCampaign Email Marketing'"
                      },
                      "siteLogo": {
                        "type": "string"
                      },
                      "siteLogoSmall": {
                        "type": "string",
                        "description": "URL of small logo. Small logos appear in the header of the admin panel."
                      },
                      "headerTextValue": {
                        "type": "string",
                        "description": "Content of non-removable header. Example: text header content"
                      },
                      "headerHtmlValue": {
                        "type": "string",
                        "description": "Content of non-removable header. Example: <p>header content here</p>"
                      },
                      "footerTextValue": {
                        "type": "string",
                        "description": "Content of non-removeable footer. Example: text footer content"
                      },
                      "footerHtmlValue": {
                        "type": "string",
                        "description": "Content of non-removeable footer. Example: <p>footer content here</p>"
                      },
                      "copyright": {
                        "type": "boolean",
                        "description": "unknown"
                      },
                      "version": {
                        "type": "boolean",
                        "description": "unknown"
                      },
                      "license": {
                        "type": "boolean",
                        "description": "unknown"
                      },
                      "links": {
                        "type": "boolean",
                        "description": "External links. To enable (which is the default) exclude this parameter entirely. To disable (remove our branding), just pass this parameter with any value."
                      },
                      "help": {
                        "type": "string"
                      },
                      "adminTemplateHtm": {
                        "type": "string",
                        "description": "The actual HTML template (ONLY AVAILABLE FOR CERTAIN PLANS)"
                      },
                      "adminTemplateCss": {
                        "type": "string",
                        "description": "The actual CSS. Example: test color: green; (ONLY AVAILABLE FOR CERTAIN PLANS)"
                      },
                      "publicTemplateHtm": {
                        "type": "string",
                        "description": "The actual HTML template (ONLY AVAILABLE FOR CERTAIN PLANS)"
                      },
                      "publicTemplateCss": {
                        "type": "string",
                        "description": "The actual CSS. Example: test color: green; (ONLY AVAILABLE FOR CERTAIN PLANS)"
                      },
                      "favicon": {
                        "type": "string",
                        "description": "URL of the favicon."
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"branding\": {\n\t\t\"groupid\": \"3\",\n\t\t\"siteName\": \"ActiveCampaign Email Marketing\",\n\t\t\"siteLogo\": \"http:\\/\\/mysite.com\\/logo.jpg\",\n\t\t\"siteLogoSmall\": \"http:\\/\\/mysite.com\\/logo_small.jpg\",\n\t\t\"headerTextValue\": \"my custom text header\",\n\t\t\"headerHtmlValue\": \"<p>my custom HTML header<\\/p>\",\n\t\t\"footerTextValue\": \"my custom text footer\",\n\t\t\"footerHtmlValue\": \"<p>my custom HTML footer<\\/p>\",\n\t\t\"copyright\": \"1\",\n\t\t\"version\": \"1\",\n\t\t\"license\": \"1\",\n\t\t\"links\": \"1\",\n\t\t\"help\": \"1\",\n\t\t\"adminTemplateHtm\": \"\",\n\t\t\"adminTemplateCss\": \"\",\n\t\t\"publicTemplateHtm\": \"\",\n\t\t\"publicTemplateCss\": \"\",\n\t\t\"favicon\": null,\n\t\t\"id\": \"1\"\n\t}\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "branding": {
                      "type": "object",
                      "properties": {
                        "groupid": {
                          "type": "string",
                          "example": "3"
                        },
                        "siteName": {
                          "type": "string",
                          "example": "ActiveCampaign Email Marketing"
                        },
                        "siteLogo": {
                          "type": "string",
                          "example": "http://mysite.com/logo.jpg"
                        },
                        "siteLogoSmall": {
                          "type": "string",
                          "example": "http://mysite.com/logo_small.jpg"
                        },
                        "headerTextValue": {
                          "type": "string",
                          "example": "my custom text header"
                        },
                        "headerHtmlValue": {
                          "type": "string",
                          "example": "<p>my custom HTML header</p>"
                        },
                        "footerTextValue": {
                          "type": "string",
                          "example": "my custom text footer"
                        },
                        "footerHtmlValue": {
                          "type": "string",
                          "example": "<p>my custom HTML footer</p>"
                        },
                        "copyright": {
                          "type": "string",
                          "example": "1"
                        },
                        "version": {
                          "type": "string",
                          "example": "1"
                        },
                        "license": {
                          "type": "string",
                          "example": "1"
                        },
                        "links": {
                          "type": "string",
                          "example": "1"
                        },
                        "help": {
                          "type": "string",
                          "example": "1"
                        },
                        "adminTemplateHtm": {
                          "type": "string",
                          "example": ""
                        },
                        "adminTemplateCss": {
                          "type": "string",
                          "example": ""
                        },
                        "publicTemplateHtm": {
                          "type": "string",
                          "example": ""
                        },
                        "publicTemplateCss": {
                          "type": "string",
                          "example": ""
                        },
                        "favicon": {},
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/brandings": {
      "get": {
        "summary": "List all brandings",
        "description": "List all existing branding resources",
        "operationId": "brandings",
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "description": "ActiveCampaign API key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"brandings\": [\n    {\n\t\t\"groupid\": \"3\",\n\t\t\"siteName\": \"ActiveCampaign Email Marketing\",\n\t\t\"siteLogo\": \"http:\\/\\/mysite.com\\/logo.jpg\",\n\t\t\"siteLogoSmall\": \"http:\\/\\/mysite.com\\/logo_small.jpg\",\n\t\t\"headerTextValue\": \"my custom text header\",\n\t\t\"headerHtmlValue\": \"<p>my custom HTML header<\\/p>\",\n\t\t\"footerTextValue\": \"my custom text footer\",\n\t\t\"footerHtmlValue\": \"<p>my custom HTML footer<\\/p>\",\n\t\t\"copyright\": \"1\",\n\t\t\"version\": \"1\",\n\t\t\"license\": \"1\",\n\t\t\"links\": \"1\",\n\t\t\"help\": \"1\",\n\t\t\"adminTemplateHtm\": \"\",\n\t\t\"adminTemplateCss\": \"\",\n\t\t\"publicTemplateHtm\": \"\",\n\t\t\"publicTemplateCss\": \"\",\n\t\t\"favicon\": null,\n\t\t\"id\": \"1\"\n    }\n  ],\n  \"meta\": {\n    \"total\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "brandings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "groupid": {
                            "type": "string",
                            "example": "3"
                          },
                          "siteName": {
                            "type": "string",
                            "example": "ActiveCampaign Email Marketing"
                          },
                          "siteLogo": {
                            "type": "string",
                            "example": "http://mysite.com/logo.jpg"
                          },
                          "siteLogoSmall": {
                            "type": "string",
                            "example": "http://mysite.com/logo_small.jpg"
                          },
                          "headerTextValue": {
                            "type": "string",
                            "example": "my custom text header"
                          },
                          "headerHtmlValue": {
                            "type": "string",
                            "example": "<p>my custom HTML header</p>"
                          },
                          "footerTextValue": {
                            "type": "string",
                            "example": "my custom text footer"
                          },
                          "footerHtmlValue": {
                            "type": "string",
                            "example": "<p>my custom HTML footer</p>"
                          },
                          "copyright": {
                            "type": "string",
                            "example": "1"
                          },
                          "version": {
                            "type": "string",
                            "example": "1"
                          },
                          "license": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "string",
                            "example": "1"
                          },
                          "help": {
                            "type": "string",
                            "example": "1"
                          },
                          "adminTemplateHtm": {
                            "type": "string",
                            "example": ""
                          },
                          "adminTemplateCss": {
                            "type": "string",
                            "example": ""
                          },
                          "publicTemplateHtm": {
                            "type": "string",
                            "example": ""
                          },
                          "publicTemplateCss": {
                            "type": "string",
                            "example": ""
                          },
                          "favicon": {},
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "description": "List all existing users",
        "operationId": "list-all-users",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"users\": [\n    {\n      \"username\": \"admin\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"johndoe@activecampaign.com\",\n      \"phone\": \"\",\n      \"signature\": null,\n      \"links\": {\n        \"lists\": \"https://:account.api-us1.com/api/3/users/1/lists\",\n        \"userGroup\": \"https://:account.api-us1.com/api/3/users/1/userGroup\",\n        \"dealGroupTotals\": \"https://:account.api-us1.com/api/3/users/1/dealGroupTotals\",\n        \"dealGroupUsers\": \"https://:account.api-us1.com/api/3/users/1/dealGroupUsers\",\n        \"configs\": \"https://:account.api-us1.com/api/3/users/1/configs\"\n      },\n      \"id\": \"1\"\n    },\n    {\n      \"username\": \"janedoe\",\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Doe\",\n      \"email\": \"janedoe@activecampaign.com\",\n      \"phone\": \"\",\n      \"signature\": null,\n      \"links\": {\n        \"lists\": \"https://:account.api-us1.com/api/3/users/5/lists\",\n        \"userGroup\": \"https://:account.api-us1.com/api/3/users/5/userGroup\",\n        \"dealGroupTotals\": \"https://:account.api-us1.com/api/3/users/5/dealGroupTotals\",\n        \"dealGroupUsers\": \"https://:account.api-us1.com/api/3/users/5/dealGroupUsers\",\n        \"configs\": \"https://:account.api-us1.com/api/3/users/5/configs\"\n      },\n      \"id\": \"5\"\n    }\n  ],\n  \"meta\": {\n    \"total\": \"2\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string",
                            "example": "admin"
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "email": {
                            "type": "string",
                            "example": "johndoe@activecampaign.com"
                          },
                          "phone": {
                            "type": "string",
                            "example": ""
                          },
                          "signature": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "lists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/users/1/lists"
                              },
                              "userGroup": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/users/1/userGroup"
                              },
                              "dealGroupTotals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/users/1/dealGroupTotals"
                              },
                              "dealGroupUsers": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/users/1/dealGroupUsers"
                              },
                              "configs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/users/1/configs"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a user",
        "description": "Create a new user",
        "operationId": "create-user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "Username"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name"
                      },
                      "group": {
                        "type": "integer",
                        "description": "Group ID",
                        "default": null,
                        "format": "int32"
                      },
                      "password": {
                        "type": "string",
                        "description": "Plain text password"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "user": {
                      "username": "jdoe",
                      "firstName": "John",
                      "lastName": "Doe",
                      "email": "johndoe@example.com",
                      "password": "myPa$$w0rd",
                      "group": 4
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"user\": {\n        \"username\": \"jdoe\",\n        \"email\": \"johndoe@example.com\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"lang\": \"english\",\n        \"localZoneid\": \"America/New_York\",\n        \"cdate\": \"2022-02-02T16:01:44-06:00\",\n        \"udate\": \"2022-02-02T16:01:44-06:00\",\n        \"links\": {\n            \"lists\": \"https://:account.api-us1.com/api/3/users/3/lists\",\n            \"userGroup\": \"https://:account.api-us1.com/api/3/users/3/userGroup\",\n            \"dealGroupTotals\": \"https://:account.api-us1.com/api/3/users/3/dealGroupTotals\",\n            \"dealGroupUsers\": \"https://:account.api-us1.com/api/3/users/3/dealGroupUsers\",\n            \"configs\": \"https://:account.api-us1.com/api/3/users/3/configs\",\n            \"dealConnection\": \"https://:account.api-us1.com/api/3/users/3/dealConnection\",\n            \"userConversationsPermission\": \"https://:account.api-us1.com/api/3/users/3/userConversationsPermission\",\n            \"seatUser\": \"https://:account.api-us1.com/api/3/users/3/seatUser\"\n        },\n        \"id\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "jdoe"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "lang": {
                          "type": "string",
                          "example": "english"
                        },
                        "localZoneid": {
                          "type": "string",
                          "example": "America/New_York"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2022-02-02T16:01:44-06:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2022-02-02T16:01:44-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "lists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/lists"
                            },
                            "userGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/userGroup"
                            },
                            "dealGroupTotals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/dealGroupTotals"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/dealGroupUsers"
                            },
                            "configs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/configs"
                            },
                            "dealConnection": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/dealConnection"
                            },
                            "userConversationsPermission": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/userConversationsPermission"
                            },
                            "seatUser": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/seatUser"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/{id}": {
      "delete": {
        "summary": "Delete a user",
        "description": "Delete an existing user",
        "operationId": "delete-user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user you wish to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a user",
        "description": "Update an existing user",
        "operationId": "update-user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "Username. Username cannot be changed!"
                      },
                      "password": {
                        "type": "string",
                        "description": "Password. Example: 'newpassword'"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the user. Example: 'test@example.com'"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of the user. Example: 'FirstName'"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of the user. Example: 'LastName'"
                      },
                      "group": {
                        "type": "integer",
                        "description": "Assign to Groups",
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"userGroups\": [\n    {\n      \"userid\": \"3\",\n      \"groupid\": \"3\",\n      \"links\": {\n        \"group\": \"https://:account.api-us1.com/api/3/userGroups/3/group\",\n        \"user\": \"https://:account.api-us1.com/api/3/userGroups/3/user\"\n      },\n      \"id\": \"3\",\n      \"group\": \"3\",\n      \"user\": \"3\"\n    }\n  ],\n  \"user\": {\n    \"username\": \"user\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"phone\": \"\",\n    \"signature\": \"\",\n    \"userGroup\": \"3\",\n    \"links\": {\n      \"lists\": \"https://:account.api-us1.com/api/3/users/3/lists\",\n      \"userGroup\": \"https://:account.api-us1.com/api/3/users/3/userGroup\",\n      \"dealGroupTotals\": \"https://:account.api-us1.com/api/3/users/3/dealGroupTotals\",\n      \"dealGroupUsers\": \"https://:account.api-us1.com/api/3/users/3/dealGroupUsers\",\n      \"configs\": \"https://:account.api-us1.com/api/3/users/3/configs\"\n    },\n    \"id\": \"3\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "userGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userid": {
                            "type": "string",
                            "example": "3"
                          },
                          "groupid": {
                            "type": "string",
                            "example": "3"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "group": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/userGroups/3/group"
                              },
                              "user": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/userGroups/3/user"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "3"
                          },
                          "group": {
                            "type": "string",
                            "example": "3"
                          },
                          "user": {
                            "type": "string",
                            "example": "3"
                          }
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "user"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": ""
                        },
                        "signature": {
                          "type": "string",
                          "example": ""
                        },
                        "userGroup": {
                          "type": "string",
                          "example": "3"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "lists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/lists"
                            },
                            "userGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/userGroup"
                            },
                            "dealGroupTotals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/dealGroupTotals"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/dealGroupUsers"
                            },
                            "configs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/3/configs"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a user",
        "description": "Retrieve an existing user",
        "operationId": "get-user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user you want to view",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"user\": {\n    \"username\": \"admin\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"phone\": \"\",\n    \"signature\": null,\n    \"links\": {\n      \"lists\": \"https://:account.api-us1.com/api/3/users/1/lists\",\n      \"userGroup\": \"https://:account.api-us1.com/api/3/users/1/userGroup\",\n      \"dealGroupTotals\": \"https://:account.api-us1.com/api/3/users/1/dealGroupTotals\",\n      \"dealGroupUsers\": \"https://:account.api-us1.com/api/3/users/1/dealGroupUsers\",\n      \"configs\": \"https://:account.api-us1.com/api/3/users/1/configs\"\n    },\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "admin"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": ""
                        },
                        "signature": {},
                        "links": {
                          "type": "object",
                          "properties": {
                            "lists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/lists"
                            },
                            "userGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/userGroup"
                            },
                            "dealGroupTotals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/dealGroupTotals"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/dealGroupUsers"
                            },
                            "configs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/configs"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/email/{email}": {
      "get": {
        "summary": "Retrieve a user by email",
        "description": "Retrieve an existing user by looking up their email address",
        "operationId": "get-user-email",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email address of the user you want to view",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"user\": {\n    \"username\": \"somebody\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"phone\": \"\",\n    \"signature\": null,\n    \"links\": {\n      \"lists\": \"https://:account.api-us1.com/api/3/users/1/lists\",\n      \"userGroup\": \"https://:account.api-us1.com/api/3/users/1/userGroup\",\n      \"dealGroupTotals\": \"https://:account.api-us1.com/api/3/users/1/dealGroupTotals\",\n      \"dealGroupUsers\": \"https://:account.api-us1.com/api/3/users/1/dealGroupUsers\",\n      \"configs\": \"https://:account.api-us1.com/api/3/users/1/configs\"\n    },\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "somebody"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": ""
                        },
                        "signature": {},
                        "links": {
                          "type": "object",
                          "properties": {
                            "lists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/lists"
                            },
                            "userGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/userGroup"
                            },
                            "dealGroupTotals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/dealGroupTotals"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/dealGroupUsers"
                            },
                            "configs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/configs"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/username/{username}": {
      "get": {
        "summary": "Retrieve a user by username",
        "description": "Retrieve an existing user by looking up their username",
        "operationId": "get-user-username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username of the user you want to view",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"user\": {\n    \"username\": \"admin\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"phone\": \"\",\n    \"signature\": null,\n    \"links\": {\n      \"lists\": \"https://:account.api-us1.com/api/3/users/1/lists\",\n      \"userGroup\": \"https://:account.api-us1.com/api/3/users/1/userGroup\",\n      \"dealGroupTotals\": \"https://:account.api-us1.com/api/3/users/1/dealGroupTotals\",\n      \"dealGroupUsers\": \"https://:account.api-us1.com/api/3/users/1/dealGroupUsers\",\n      \"configs\": \"https://:account.api-us1.com/api/3/users/1/configs\"\n    },\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "admin"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": ""
                        },
                        "signature": {},
                        "links": {
                          "type": "object",
                          "properties": {
                            "lists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/lists"
                            },
                            "userGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/userGroup"
                            },
                            "dealGroupTotals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/dealGroupTotals"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/dealGroupUsers"
                            },
                            "configs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/configs"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/me": {
      "get": {
        "summary": "Retrieve logged-in user",
        "description": "Retrieve the logged-in user",
        "operationId": "get-user-loggedin",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"user\": {\n    \"username\": \"jdoe\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"phone\": \"\",\n    \"signature\": null,\n    \"links\": {\n      \"lists\": \"https://:account.api-us1.com/api/3/users/1/lists\",\n      \"userGroup\": \"https://:account.api-us1.com/api/3/users/1/userGroup\",\n      \"dealGroupTotals\": \"https://:account.api-us1.com/api/3/users/1/dealGroupTotals\",\n      \"dealGroupUsers\": \"https://:account.api-us1.com/api/3/users/1/dealGroupUsers\",\n      \"configs\": \"https://:account.api-us1.com/api/3/users/1/configs\"\n    },\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "jdoe"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": ""
                        },
                        "signature": {},
                        "links": {
                          "type": "object",
                          "properties": {
                            "lists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/lists"
                            },
                            "userGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/userGroup"
                            },
                            "dealGroupTotals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/dealGroupTotals"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/dealGroupUsers"
                            },
                            "configs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/users/1/configs"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealTasks": {
      "post": {
        "summary": "Create a task",
        "description": "Create a new task",
        "operationId": "create-task",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealTask": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title to be assigned to the task"
                      },
                      "ownerType": {
                        "type": "string",
                        "description": "The name of the relating object. Valid values are `contact` or `deal`. (see relationships table)",
                        "default": "deal"
                      },
                      "relid": {
                        "type": "integer",
                        "description": "The id of the relational object for this task",
                        "format": "int32"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Task status means complete or incomplete. 1 is complete and 0 is incomplete.",
                        "format": "int32"
                      },
                      "note": {
                        "type": "string",
                        "description": "The content describing the task"
                      },
                      "duedate": {
                        "type": "string",
                        "description": "Due date of the task",
                        "format": "date"
                      },
                      "dealTasktype": {
                        "type": "integer",
                        "description": "The type of the task based on the available Task Types in the account",
                        "format": "int32"
                      },
                      "assignee": {
                        "type": "integer",
                        "description": "The id of an user the task will be assigned to",
                        "format": "int32"
                      },
                      "triggerAutomationOnCreate": {
                        "type": "integer",
                        "description": "Id of an automation that will be triggered when the task is created.",
                        "format": "int32"
                      },
                      "doneAutomation": {
                        "type": "integer",
                        "description": "Id of an automation that will be triggered when the task is completed.",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "relid",
                      "duedate",
                      "dealTasktype"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealTask": {
                      "title": null,
                      "ownerType": "contact",
                      "relid": "7",
                      "status": 0,
                      "note": "Testing Task",
                      "duedate": "2017-02-25T12:00:00-06:00",
                      "edate": "2017-02-25T12:15:00-06:00",
                      "dealTasktype": "1",
                      "assignee": 2,
                      "triggerAutomationOnCreate": 100,
                      "doneAutomation": 101
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTask\": {\n    \"id\":\"1\",\n    \"duedate\":\"2017-02-25T12:00:00-06:00\",\n    \"edate\":\"2017-02-25T12:15:00-06:00\",\n    \"status\":0,\n    \"title\":null,\n    \"note\":\"Testing Task\",\n    \"relid\":\"7\",\n    \"reltype\":\"Subscriber\",\n    \"dealTasktype\":\"1\",\n    \"cdate\":\"2017-02-24T13:21:56-06:00\",\n    \"udate\":\"2017-02-24T13:21:56-06:00\",\n    \"automation\":null,\n    \"doneAutomation\":null,\n    \"user\":\"1\",\n    \"assignee\":\"2\",\n    \"owner\":{\n      \"type\":\"contact\",\n      \"id\":\"7\"\n    },\n    \"outcomeId\": null,\n\t\t\"outcomeInfo\": null,\n    \"links\": {\n      \"activities\":\"/1/activities\",\n      \"automation\":\"/1/automation\",\n      \"dealTasktype\":\"/1/dealTasktype\",\n      \"doneAutomation\":\"/1/doneAutomation\",\n      \"notes\":\"/1/notes\",\n      \"owner\":\"/1/owner\",\n      \"taskNotifications\":\"/1/taskNotifications\",\n      \"user\":\"/1/user\",\n      \"assignee\": \"/1/assignee\",\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all tasks",
        "description": "Retrieve a list of existing tasks",
        "operationId": "list-all-tasks",
        "parameters": [
          {
            "name": "filters[title]",
            "in": "query",
            "description": "The title to be assigned to the task",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[reltype]",
            "in": "query",
            "description": "The name of the relating object (see relationships table)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[relid]",
            "in": "query",
            "description": "The id of the relational object for this task",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[status]",
            "in": "query",
            "description": "Task status means complete or incomplete. 1 is complete and 0 is incomplete.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[note]",
            "in": "query",
            "description": "The content describing the task",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[duedate]",
            "in": "query",
            "description": "Due date of the task",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filters[d_tasktypeid]",
            "in": "query",
            "description": "The type of the task based on the available Task Types in the account",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[userid]",
            "in": "query",
            "description": "User ID this task belongs to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[due_after]",
            "in": "query",
            "description": "Filter deal tasks that are due after a specific date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Fitlers[due_before]",
            "in": "query",
            "description": "Filter deal tasks that are due before a specific date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[duedate_range]",
            "in": "query",
            "description": "Filter deal tasks that are due between specific date range",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[assignee_userid]",
            "in": "query",
            "description": "The id of the user a task is assigned to",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[outcome_id]",
            "in": "query",
            "description": "The id of a task outcome that the task belongs to.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTasks\": [{\n    \"id\":\"1\",\n    \"duedate\":\"2017-02-25T12:00:00-06:00\",\n    \"edate\":\"2017-02-25T12:15:00-06:00\",\n    \"status\":0,\n    \"title\":null,\n    \"note\":\"Testing Task\",\n    \"relid\":\"7\",\n    \"reltype\":\"Subscriber\",\n    \"dealTasktype\":\"1\",\n    \"cdate\":\"2017-02-24T13:21:56-06:00\",\n    \"udate\":\"2017-02-24T13:21:56-06:00\",\n    \"automation\":null,\n    \"doneAutomation\":null,\n    \"user\":\"1\",\n    \"assignee\":\"2\",\n    \"owner\":{\n      \"type\":\"contact\",\n      \"id\":\"7\"\n    },\n    \"outcomeId\": null,\n\t\t\"outcomeInfo\": null,\n    \"links\": {\n      \"activities\":\"/1/activities\",\n      \"automation\":\"/1/automation\",\n      \"dealTasktype\":\"/1/dealTasktype\",\n      \"doneAutomation\":\"/1/doneAutomation\",\n      \"notes\":\"/1/notes\",\n      \"owner\":\"/1/owner\",\n      \"taskNotifications\":\"/1/taskNotifications\",\n      \"user\":\"/3/dealTasks/1/user\",\n      \"assignee\":\"/1/assignee\"\n    }\n  },\n  {\n    \"id\":\"2\",\n    \"duedate\":\"2017-02-25T12:00:00-06:00\",\n    \"edate\":\"2017-02-25T12:15:00-06:00\",\n    \"status\":0,\n    \"title\":null,\n    \"note\":\"Testing Task 2\",\n    \"relid\":\"8\",\n    \"reltype\":\"Deal\",\n    \"dealTasktype\":\"1\",\n    \"cdate\":\"2017-02-24T13:21:56-06:00\",\n    \"udate\":\"2017-02-24T13:21:56-06:00\",\n    \"automation\":null,\n    \"doneAutomation\":null,\n    \"user\":\"1\",\n    \"assignee\":\"2\",\n    \"owner\":{\n      \"type\":\"deal\",\n      \"id\":\"5\"\n    },\n    \"outcomeId\": 91,\n\t\t\"outcomeInfo\": \"More details about the outcome\",\n    \"links\": {\n      \"activities\":\"/2/activities\",\n      \"automation\":\"/2/automation\",\n      \"dealTasktype\":\"/2/dealTasktype\",\n      \"doneAutomation\":\"/2/doneAutomation\",\n      \"notes\":\"/2/notes\",\n      \"owner\":\"/2/owner\",\n      \"taskNotifications\":\"/2/taskNotifications\",\n      \"user\":\"/2/user\",\n      \"assignee\":\"/1/assignee\"\n    }\n  }],\n  \"meta\":{\n    \"total\":\"2\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealTasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "duedate": {
                            "type": "string",
                            "example": "2017-02-25T12:00:00-06:00"
                          },
                          "edate": {
                            "type": "string",
                            "example": "2017-02-25T12:15:00-06:00"
                          },
                          "status": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "title": {},
                          "note": {
                            "type": "string",
                            "example": "Testing Task"
                          },
                          "relid": {
                            "type": "string",
                            "example": "7"
                          },
                          "reltype": {
                            "type": "string",
                            "example": "Subscriber"
                          },
                          "dealTasktype": {
                            "type": "string",
                            "example": "1"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-02-24T13:21:56-06:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2017-02-24T13:21:56-06:00"
                          },
                          "automation": {},
                          "doneAutomation": {},
                          "user": {
                            "type": "string",
                            "example": "1"
                          },
                          "assignee": {
                            "type": "string",
                            "example": "2"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "contact"
                              },
                              "id": {
                                "type": "string",
                                "example": "7"
                              }
                            }
                          },
                          "outcomeId": {},
                          "outcomeInfo": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "activities": {
                                "type": "string",
                                "example": "/1/activities"
                              },
                              "automation": {
                                "type": "string",
                                "example": "/1/automation"
                              },
                              "dealTasktype": {
                                "type": "string",
                                "example": "/1/dealTasktype"
                              },
                              "doneAutomation": {
                                "type": "string",
                                "example": "/1/doneAutomation"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/1/notes"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/1/owner"
                              },
                              "taskNotifications": {
                                "type": "string",
                                "example": "/1/taskNotifications"
                              },
                              "user": {
                                "type": "string",
                                "example": "/3/dealTasks/1/user"
                              },
                              "assignee": {
                                "type": "string",
                                "example": "/1/assignee"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealTasks/{id}": {
      "get": {
        "summary": "Retrieve a task",
        "description": "Retrieve an existing task",
        "operationId": "get-task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTask\": {\n    \"relid\":\"5\",\n    \"reltype\":\"Deal\",\n    \"dealTasktype\":\"1\",\n    \"user\":\"1\",\n    \"assignee\": \"2\",\n    \"automation\":null,\n    \"cdate\":\"2017-02-24T15:01:37-06:00\",\n    \"duedate\":\"2017-02-28T12:00:00-06:00\",\n    \"edate\":\"2017-02-28T12:15:00-06:00\",\n    \"duration\":\"0\",\n    \"status\":\"0\",\n    \"title\":\"\",\n    \"note\":\"Deal task title!\",\n    \"donedate\":null,\n    \"doneAutomation\":null,\n    \"udate\":\"2017-02-24T15:01:37-06:00\",\n    \"owner\":{\n      \"type\":\"deal\",\n      \"id\":\"5\"\n    },\n    \"id\":\"1\",\n    \"outcomeId\": 91,\n\t\t\"outcomeInfo\": \"More details about the outcome\",\n    \"links\": {\n      \"activities\":\"/1/activities\",\n      \"automation\":\"/1/automation\",\n      \"dealTasktype\":\"/1/dealTasktype\",\n      \"doneAutomation\":\"/1/doneAutomation\",\n      \"notes\":\"/1/notes\",\n      \"owner\":\"/1/owner\",\n      \"taskNotifications\":\"/1/taskNotifications\",\n      \"user\":\"/1/user\",\n      \"assignee\": \"/1/assignee\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealTask": {
                      "type": "object",
                      "properties": {
                        "relid": {
                          "type": "string",
                          "example": "5"
                        },
                        "reltype": {
                          "type": "string",
                          "example": "Deal"
                        },
                        "dealTasktype": {
                          "type": "string",
                          "example": "1"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        },
                        "assignee": {
                          "type": "string",
                          "example": "2"
                        },
                        "automation": {},
                        "cdate": {
                          "type": "string",
                          "example": "2017-02-24T15:01:37-06:00"
                        },
                        "duedate": {
                          "type": "string",
                          "example": "2017-02-28T12:00:00-06:00"
                        },
                        "edate": {
                          "type": "string",
                          "example": "2017-02-28T12:15:00-06:00"
                        },
                        "duration": {
                          "type": "string",
                          "example": "0"
                        },
                        "status": {
                          "type": "string",
                          "example": "0"
                        },
                        "title": {
                          "type": "string",
                          "example": ""
                        },
                        "note": {
                          "type": "string",
                          "example": "Deal task title!"
                        },
                        "donedate": {},
                        "doneAutomation": {},
                        "udate": {
                          "type": "string",
                          "example": "2017-02-24T15:01:37-06:00"
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "deal"
                            },
                            "id": {
                              "type": "string",
                              "example": "5"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "outcomeId": {
                          "type": "integer",
                          "example": 91,
                          "default": 0
                        },
                        "outcomeInfo": {
                          "type": "string",
                          "example": "More details about the outcome"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "activities": {
                              "type": "string",
                              "example": "/1/activities"
                            },
                            "automation": {
                              "type": "string",
                              "example": "/1/automation"
                            },
                            "dealTasktype": {
                              "type": "string",
                              "example": "/1/dealTasktype"
                            },
                            "doneAutomation": {
                              "type": "string",
                              "example": "/1/doneAutomation"
                            },
                            "notes": {
                              "type": "string",
                              "example": "/1/notes"
                            },
                            "owner": {
                              "type": "string",
                              "example": "/1/owner"
                            },
                            "taskNotifications": {
                              "type": "string",
                              "example": "/1/taskNotifications"
                            },
                            "user": {
                              "type": "string",
                              "example": "/1/user"
                            },
                            "assignee": {
                              "type": "string",
                              "example": "/1/assignee"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a task",
        "description": "Delete an existing task",
        "operationId": "delete-task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The task id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a task",
        "description": "Update an existing task",
        "operationId": "update-task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the task",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealTask": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title to be assigned to the task"
                      },
                      "ownerType": {
                        "type": "string",
                        "description": "The name of the relating object. Valid values are `contact` or `deal`. (see relationships table)",
                        "default": "deal"
                      },
                      "relid": {
                        "type": "integer",
                        "description": "The id of the relational object for this task",
                        "format": "int32"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Task status means complete or incomplete. 1 is complete and 0 is incomplete.",
                        "format": "int32"
                      },
                      "note": {
                        "type": "string",
                        "description": "The content describing the task"
                      },
                      "duedate": {
                        "type": "string",
                        "description": "Due date of the task",
                        "format": "date"
                      },
                      "dealTasktype": {
                        "type": "integer",
                        "description": "The type of the task based on the available Task Types in the account",
                        "format": "int32"
                      },
                      "assignee": {
                        "type": "integer",
                        "description": "The id of an user the task will be assigned to",
                        "format": "int32"
                      },
                      "outcomeId": {
                        "type": "integer",
                        "description": "Task outcome's id is required at the time of task being completed.",
                        "format": "int32"
                      },
                      "outcomeInfo": {
                        "type": "string",
                        "description": "More information about task completion with the outcome selection."
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTask\": {\n    \"id\":\"1\",\n    \"duedate\":\"2017-02-25T12:00:00-06:00\",\n    \"edate\":\"2017-02-25T12:15:00-06:00\",\n    \"status\":0,\n    \"title\":null,\n    \"note\":\"Testing Task\",\n    \"relid\":\"7\",\n    \"ownerType\":\"contact\",\n    \"dealTasktype\":\"1\",\n    \"assignee\":\"2\"\n    \"cdate\":\"2017-02-24T13:21:56-06:00\",\n    \"udate\":\"2017-02-24T13:21:56-06:00\",\n    \"automation\":null,\n    \"doneAutomation\":null,\n    \"user\":\"1\",\n    \"owner\":{\n      \"type\":\"contact\",\n      \"id\":\"7\"\n    },\n\t\t\"outcomeId\": 91,\n\t\t\"outcomeInfo\": \"More details about the outcome\",\n    \"links\": {\n      \"activities\":\"/1/activities\",\n      \"automation\":\"/1/automation\",\n      \"dealTasktype\":\"/1/dealTasktype\",\n      \"doneAutomation\":\"/1/doneAutomation\",\n      \"notes\":\"/1/notes\",\n      \"owner\":\"/1/owner\",\n      \"taskNotifications\":\"/1/taskNotifications\",\n      \"user\":\"/1/user\",\n      \"assignee\":\"/1/assignee\"\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/deals/{id}": {
      "delete": {
        "summary": "Delete a deal",
        "description": "Delete an existing deal",
        "operationId": "delete-a-deal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Deal's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a deal",
        "description": "Retrieve an existing deal",
        "operationId": "retrieve-a-deal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Deal's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "with pipeline permission": {
                    "value": "{\n  \"deal\": {\n    \"owner\": \"1\",\n    \"contact\": \"39\",\n    \"organization\": \"20\",\n    \"group\": \"1\",\n    \"stage\": \"2\",\n    \"title\": \"Able Hyena\",\n    \"description\": \"Article do skill hope.\",\n    \"percent\": \"0\",\n    \"cdate\": \"2019-09-06T11:29:48-05:00\",\n    \"mdate\": \"2019-09-06T11:29:48-05:00\",\n    \"nextdate\": null,\n    \"nexttaskid\": null,\n    \"value\": \"1872151\",\n    \"currency\": \"usd\",\n    \"winProbability\": 44,\n    \"winProbabilityMdate\": \"2019-10-05T12:27:22-05:00\",\n    \"status\": \"0\",\n    \"activitycount\": \"1\",\n    \"nextdealid\": \"46\",\n    \"edate\": \"2019-11-22 14:15:37\",\n    \"links\": {\n    \t\"dealActivities\": \"/api/3/deals/46/dealActivities\",\n    \t\"contact\":/api/3/deals/46/contact\",\n    \t\"contactDeals\": \"/api/3/deals/46/contactDeals\",\n    \t\"group\": \"/api/3/deals/46/group\",\n    \t\"nextTask\": \"/api/3/deals/46/nextTask\",\n    \t\"notes\": \"/api/3/deals/46/notes\",\n    \t\"account\": \"/api/3/deals/46/account\",\n    \t\"customerAccount\": \"/api/3/deals/46/customerAccount\",\n    \t\"organization\": \"/api/3/deals/46/organization\",\n    \t\"owner\": \"/api/3/deals/46/owner\",\n    \t\"scoreValues\": \"/api/3/deals/46/scoreValues\",\n    \t\"stage\": \"/api/3/deals/46/stage\",\n    \t\"tasks\": \"api/3/deals/46/tasks\",\n    \t\"dealCustomFieldData\": \"/api/3/deals/46/dealCustomFieldData\"\n    },\n    \"id\": \"46\",\n    \"isDisabled\": false,\n    \"account\": \"20\",\n    \"customerAccount\": \"20\"\n    }\n}"
                  },
                  "without pipeline permission": {
                    "value": "{\n  \"deal\": {\n    \"id\": \"2\",\n    \"isDisabled\": true,\n    \"title\": \"Demo Requested\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "deal": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "isDisabled": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "title": {
                          "type": "string",
                          "example": "Demo Requested"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a deal",
        "description": "Update an existing deal",
        "operationId": "update-a-deal-new",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Deal's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deal": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Deal's title."
                      },
                      "description": {
                        "type": "string",
                        "description": "Deal's description"
                      },
                      "account": {
                        "type": "string",
                        "description": "Deal's account id"
                      },
                      "contact": {
                        "type": "string",
                        "description": "Deal's primary contact id."
                      },
                      "value": {
                        "type": "integer",
                        "description": "Deal's value in cents. (i.e. $456.78 => 45678). Must be greater than or equal to zero.",
                        "format": "int32"
                      },
                      "currency": {
                        "type": "string",
                        "description": "Deal's currency in 3-digit ISO format, lowercased."
                      },
                      "group": {
                        "type": "string",
                        "description": "Deal's pipeline id. Deal's stage or `deal.stage` should belong to `deal.group`."
                      },
                      "stage": {
                        "type": "string",
                        "description": "Deal's stage id. `deal.stage` should belong to Deal's pipeline or `deal.group`.",
                        "default": "0"
                      },
                      "owner": {
                        "type": "string",
                        "description": "Deal's owner id."
                      },
                      "percent": {
                        "type": "integer",
                        "description": "Deal's percentage.",
                        "format": "int32"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Deal's status (0=\"open\", 1=\"won\", or 2=\"lost\")",
                        "default": 0,
                        "format": "int32"
                      },
                      "fields": {
                        "type": "array",
                        "description": "Deal's custom field values `{customFieldId: string, fieldValue: string, fieldCurrency?:string}[]`",
                        "items": {
                          "properties": {
                            "customFieldId": {
                              "type": "integer",
                              "description": "Field ID, ID of the Custom Field Meta Data",
                              "format": "int32"
                            },
                            "fieldValue": {
                              "type": "string",
                              "description": "Updated field value. For `currency` field, this needs to be in cents not dollars (or 100 x Base Unit)."
                            },
                            "fieldCurrency": {
                              "type": "string",
                              "description": "Required only for the `currency` field type. The three letter currency code for the currency value"
                            }
                          },
                          "required": [
                            "customFieldId",
                            "fieldValue"
                          ],
                          "type": "object"
                        }
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "deal": {
                      "contact": "51",
                      "account": "45",
                      "description": "This deal is an important deal",
                      "currency": "usd",
                      "group": "1",
                      "owner": "1",
                      "percent": null,
                      "stage": "1",
                      "status": 0,
                      "title": "AC Deal",
                      "value": 45600,
                      "fields": [
                        {
                          "customFieldId": 1,
                          "fieldValue": "First field value"
                        },
                        {
                          "customFieldId": 2,
                          "fieldValue": "2008-01-20"
                        },
                        {
                          "customFieldId": 3,
                          "fieldValue": 8800,
                          "fieldCurrency": "USD"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"contacts\": [\n    {\n      \"adate\": \"2017-02-06 15:50:11\",\n      \"bounced_date\": \"0000-00-00\",\n      \"bounced_hard\": \"0\",\n      \"bounced_soft\": \"0\",\n      \"cdate\": \"2017-02-03T11:26:41-06:00\",\n      \"deleted\": \"0\",\n      \"edate\": \"0000-00-00 00:00:00\",\n      \"email\": \"johndoe@example.com\",\n      \"email_domain\": \"\",\n      \"email_local\": \"\",\n      \"firstName\": \"\",\n      \"gravatar\": \"1\",\n      \"hash\": \"e1705a92f24edf5313ed21df44d6ff5f\",\n      \"id\": \"51\",\n      \"ip\": \"0\",\n      \"lastName\": \"\",\n      \"links\": {\n        \"bounceLogs\": \"/api/3/contacts/51/bounceLogs\",\n        \"contactAutomations\": \"/api/3/contacts/51/contactAutomations\",\n        \"contactData\": \"/api/3/contacts/51/contactData\",\n        \"contactDeals\": \"/api/3/contacts/51/contactDeals\",\n        \"contactGoals\": \"/api/3/contacts/51/contactGoals\",\n        \"contactLists\": \"/api/3/contacts/51/contactLists\",\n        \"contactLogs\": \"/api/3/contacts/51/contactLogs\",\n        \"contactTags\": \"/api/3/contacts/51/contactTags\",\n        \"deals\": \"/api/3/contacts/51/deals\",\n        \"fieldValues\": \"/api/3/contacts/51/fieldValues\",\n        \"geoIps\": \"/api/3/contacts/51/geoIps\",\n        \"notes\": \"/api/3/contacts/51/notes\",\n        \"organization\": \"/api/3/contacts/51/organization\",\n        \"plusAppend\": \"/api/3/contacts/51/plusAppend\",\n        \"scoreValues\": \"/api/3/contacts/51/scoreValues\",\n        \"trackingLogs\": \"/api/3/contacts/51/trackingLogs\"\n      },\n      \"organization\": null,\n      \"orgid\": \"0\",\n      \"phone\": \"\",\n      \"rating_tstamp\": \"0000-00-00\",\n      \"segmentio_id\": \"\",\n      \"sentcnt\": \"0\",\n      \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n      \"ua\": \"\",\n      \"udate\": \"2017-02-03T11:26:41-06:00\"\n    }\n  ],\n    \"deal\": {\n        \"description\": \"This deal is an important deal\",\n        \"currency\": \"usd\",\n        \"percent\": null,\n        \"status\": 0,\n        \"title\": \"AC Deal\",\n        \"value\": 45600,\n        \"organization\": 45,\n        \"contact\": 1,\n        \"group\": \"1\",\n        \"owner\": \"1\",\n        \"stage\": \"1\",\n        \"cdate\": \"2019-12-09T12:29:33-06:00\",\n        \"mdate\": \"2019-12-09T12:29:33-06:00\",\n        \"nextdate\": null,\n        \"hash\": \"c3a5497c\",\n        \"winProbability\": null,\n        \"winProbabilityMdate\": null,\n        \"links\": {\n            \"dealActivities\": \"/api/3/deals/51/dealActivities\",\n            \"contact\": \"/api/3/deals/51/contact\",\n            \"contactDeals\": \"/api/3/deals/51/contactDeals\",\n            \"group\": \"/api/3/deals/51/group\",\n            \"nextTask\": \"/api/3/deals/51/nextTask\",\n            \"notes\": \"/api/3/deals/51/notes\",\n            \"account\": \"/api/3/deals/51/account\",\n            \"customerAccount\": \"/api/3/deals/51/customerAccount\",\n            \"organization\": \"/api/3/deals/51/organization\",\n            \"owner\": \"/api/3/deals/51/owner\",\n            \"scoreValues\": \"/api/3/deals/51/scoreValues\",\n            \"stage\": \"/api/3/deals/51/stage\",\n            \"tasks\": \"/api/3/deals/51/tasks\",\n            \"dealCustomFieldData\": \"/api/3/deals/51/dealCustomFieldData\"\n        },\n        \"fields\": [\n            {\n                \"customFieldId\": 1,\n                \"fieldValue\": \"First field value\",\n                \"dealId\": \"51\"\n            },\n            {\n                \"customFieldId\": 2,\n                \"fieldValue\": \"2008-01-20\",\n                \"dealId\": \"51\"\n            },\n            {\n                \"customFieldId\": 3,\n                \"fieldValue\": 8800,\n                \"fieldCurrency\": \"USD\",\n              \t\"dealId\": \"51\"\n            }\n        ],\n        \"id\": \"51\",\n        \"isDisabled\": false,\n        \"account\": 45,\n        \"customerAccount\": 45\n    }\n  \"dealStages\": [\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": \"2017-01-20T09:27:32-06:00\",\n      \"color\": \"C481DF\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"1\",\n      \"id\": \"1\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/1/group\"\n      },\n      \"order\": \"1\",\n      \"title\": \"To Contact\",\n      \"udate\": \"2017-01-20T09:27:32-06:00\",\n      \"width\": \"280\"\n    }\n  ]\n}\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/deals": {
      "get": {
        "summary": "List all deals",
        "description": "Retrieve all existing deals",
        "operationId": "list-all-deals",
        "parameters": [
          {
            "name": "filters[search]",
            "in": "query",
            "description": "Search text to use with `search_field` parameter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[search_field]",
            "in": "query",
            "description": "Field to search for. See [available values](https://developers.activecampaign.com/reference/deal#deals-parameters-available-values).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[title]",
            "in": "query",
            "description": "Filter by deal's title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[stage]",
            "in": "query",
            "description": "Filter by deal's stage",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[group]",
            "in": "query",
            "description": "Filter by deal's pipeline",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[status]",
            "in": "query",
            "description": "Filter by deal's status.  See [available values](https://developers.activecampaign.com/reference/deal#deals-parameters-available-values)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[owner]",
            "in": "query",
            "description": "Filter by deal's owner",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[nextdate_range]",
            "in": "query",
            "description": "Filter by deal's tasks due dates. See [available values](https://developers.activecampaign.com/reference/deal#deals-parameters-available-values)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[tag]",
            "in": "query",
            "description": "Filter by tag names associated with deal's primary contact. See [available values](https://developers.activecampaign.com/reference/deal#deals-parameters-available-values).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[tasktype]",
            "in": "query",
            "description": "Filter by deals that have tasks with given type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[created_before]",
            "in": "query",
            "description": "Returns deals that are created less than given date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filters[created_after]",
            "in": "query",
            "description": "Returns deals that are created greater than or equal to given date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filters[updated_before]",
            "in": "query",
            "description": "Returns deals that are updated less than given date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filters[updated_after]",
            "in": "query",
            "description": "Returns deals that are updated greater than or equal to given date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filters[organization]",
            "in": "query",
            "description": "Filter by deal's primary contact's organization's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[minimum_value]",
            "in": "query",
            "description": "In USD with dollar portion. Returns deals whose values are greater than or equal to given value",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[maximum_value]",
            "in": "query",
            "description": "In USD with dollar portion. Returns deals whose values are less than or equal to given value",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[score_greater_than]",
            "in": "query",
            "description": "In a format of `<score_id>:<score_value>`. Returns deals whose score value is greater than given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[score_less_than]",
            "in": "query",
            "description": "In a format of `<score_id>:<score_value>`. Returns deals whose score value is less than given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[score]",
            "in": "query",
            "description": "In a format of `<score_id>:<score_value>`. Returns deals whose score value is equal to given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[title]",
            "in": "query",
            "description": "Order by deal's title.",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[value]",
            "in": "query",
            "description": "Order by deal's value.",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[cdate]",
            "in": "query",
            "description": "Order by deal's created date.",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[contact_name]",
            "in": "query",
            "description": "Order by deal's primary contact's first name.",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[contact_orgname]",
            "in": "query",
            "description": "Order by deal's primary contact's organization name.",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[next-action]",
            "in": "query",
            "description": "Order by deal's next task's due date first. Then append deals with no next task. Lastly append deals with overdue tasks. If dates are the same, order by deal's id.",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"deals\": [\n    {\n      \"owner\": \"1\",\n      \"contact\": \"39\",\n      \"organization\": \"20\",\n      \"group\": \"1\",\n      \"stage\": \"2\",\n      \"title\": \"Able Hyena\",\n      \"description\": \"Article do skill hope.\",\n      \"percent\": \"0\",\n      \"cdate\": \"2019-09-06T11:29:48-05:00\",\n      \"mdate\": \"2019-09-06T11:29:48-05:00\",\n      \"nextdate\": null,\n      \"nexttaskid\": null,\n      \"value\": \"1872151\",\n      \"currency\": \"usd\",\n      \"winProbability\": 44,\n      \"winProbabilityMdate\": \"2019-10-05T12:27:22-05:00\",\n      \"status\": \"0\",\n      \"activitycount\": \"1\",\n      \"nextdealid\": \"46\",\n      \"edate\": \"2019-11-22 14:15:37\",\n      \"links\": {\n      \"dealActivities\": \"/api/3/deals/46/dealActivities\",\n      \"contact\":\"/api/3/deals/46/contact\",\n      \"contactDeals\": \"/api/3/deals/46/contactDeals\",\n      \"group\": \"/api/3/deals/46/group\",\n      \"nextTask\": \"/api/3/deals/46/nextTask\",\n      \"notes\": \"/api/3/deals/46/notes\",\n      \"account\": \"/api/3/deals/46/account\",\n      \"customerAccount\": \"/api/3/deals/46/customerAccount\",\n      \"organization\": \"/api/3/deals/46/organization\",\n      \"owner\": \"/api/3/deals/46/owner\",\n      \"scoreValues\": \"/api/3/deals/46/scoreValues\",\n      \"stage\": \"/api/3/deals/46/stage\",\n      \"tasks\": \"api/3/deals/46/tasks\",\n      \"dealCustomFieldData\": \"/api/3/deals/46/dealCustomFieldData\"\n\t\t},\n    \"id\": \"46\",\n    \"isDisabled\": false,\n    \"account\": \"20\",\n    \"customerAccount\": \"20\"\n\t\t},\n    {\n      \"activitycount\": \"62\",\n      \"cdate\": \"2017-01-20T09:28:02-06:00\",\n      \"contact\": \"44\",\n      \"currency\": \"usd\",\n      \"edate\": \"0000-00-00 00:00:00\",\n      \"group\": \"2\",\n      \"hash\": \"d6ca7d0b\",\n      \"id\": \"1\",\n      \"links\": {\n        \"dealActivities\": \"/api/3/deals/1/dealActivities\",\n        \"contact\": \"/api/3/deals/1/contact\",\n        \"contactDeals\": \"/api/3/deals/1/contactDeals\",\n        \"group\": \"/api/3/deals/1/group\",\n        \"nextTask\": \"/api/3/deals/1/nextTask\",\n        \"notes\": \"/api/3/deals/1/notes\",\n        \"organization\": \"/api/3/deals/1/organization\",\n        \"owner\": \"/api/3/deals/1/owner\",\n        \"scoreValues\": \"/api/3/deals/1/scoreValues\",\n        \"stage\": \"/api/3/deals/1/stage\",\n        \"tasks\": \"/api/3/deals/1/tasks\"\n      },\n      \"mdate\": \"2017-02-06T12:21:12-06:00\",\n      \"nextTask\": \"2\",\n      \"nextdate\": \"2017-02-06T12:00:00-06:00\",\n      \"nextdealid\": \"1\",\n      \"nexttaskid\": \"2\",\n      \"organization\": null,\n      \"owner\": \"1\",\n      \"percent\": \"0\",\n      \"stage\": \"3\",\n      \"status\": \"1\",\n      \"title\": \"Test Deal\",\n      \"description\": \"A deal that will make a big difference\",\n      \"value\": \"10000\"\n    },\n    {\n        \"id\": \"2\",\n        \"isDisabled\": 1,\n        \"title\": \"Demo Requested\"\n    }\n  ],\n  \"meta\": {\n    \"currencies\": {\n      \"USD\": {\n        \"currency\": \"USD\",\n        \"total\": \"3\",\n        \"value\": \"30000\"\n      }\n    },\n    \"total\": 3\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "string",
                            "example": "1"
                          },
                          "contact": {
                            "type": "string",
                            "example": "39"
                          },
                          "organization": {
                            "type": "string",
                            "example": "20"
                          },
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "stage": {
                            "type": "string",
                            "example": "2"
                          },
                          "title": {
                            "type": "string",
                            "example": "Able Hyena"
                          },
                          "description": {
                            "type": "string",
                            "example": "Article do skill hope."
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2019-09-06T11:29:48-05:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2019-09-06T11:29:48-05:00"
                          },
                          "nextdate": {},
                          "nexttaskid": {},
                          "value": {
                            "type": "string",
                            "example": "1872151"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "winProbability": {
                            "type": "integer",
                            "example": 44,
                            "default": 0
                          },
                          "winProbabilityMdate": {
                            "type": "string",
                            "example": "2019-10-05T12:27:22-05:00"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "activitycount": {
                            "type": "string",
                            "example": "1"
                          },
                          "nextdealid": {
                            "type": "string",
                            "example": "46"
                          },
                          "edate": {
                            "type": "string",
                            "example": "2019-11-22 14:15:37"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealActivities": {
                                "type": "string",
                                "example": "/api/3/deals/46/dealActivities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "/api/3/deals/46/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "/api/3/deals/46/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "/api/3/deals/46/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "/api/3/deals/46/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/api/3/deals/46/notes"
                              },
                              "account": {
                                "type": "string",
                                "example": "/api/3/deals/46/account"
                              },
                              "customerAccount": {
                                "type": "string",
                                "example": "/api/3/deals/46/customerAccount"
                              },
                              "organization": {
                                "type": "string",
                                "example": "/api/3/deals/46/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/api/3/deals/46/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "/api/3/deals/46/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "/api/3/deals/46/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "api/3/deals/46/tasks"
                              },
                              "dealCustomFieldData": {
                                "type": "string",
                                "example": "/api/3/deals/46/dealCustomFieldData"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "46"
                          },
                          "isDisabled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "account": {
                            "type": "string",
                            "example": "20"
                          },
                          "customerAccount": {
                            "type": "string",
                            "example": "20"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "currencies": {
                          "type": "object",
                          "properties": {
                            "USD": {
                              "type": "object",
                              "properties": {
                                "currency": {
                                  "type": "string",
                                  "example": "USD"
                                },
                                "total": {
                                  "type": "string",
                                  "example": "3"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "30000"
                                }
                              }
                            }
                          }
                        },
                        "total": {
                          "type": "integer",
                          "example": 3,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a deal",
        "description": "Create a new deal",
        "operationId": "create-a-deal-new",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deal": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Deal's title."
                      },
                      "description": {
                        "type": "string",
                        "description": "Deal's description"
                      },
                      "account": {
                        "type": "string",
                        "description": "Deal’s account id"
                      },
                      "contact": {
                        "type": "string",
                        "description": "Deal's primary contact's id."
                      },
                      "value": {
                        "type": "integer",
                        "description": "Deal's value in cents. (i.e. $456.78 => 45678). Must be greater than or equal to zero.",
                        "format": "int32"
                      },
                      "currency": {
                        "type": "string",
                        "description": "Deal's currency in 3-digit ISO format, lowercased."
                      },
                      "group": {
                        "type": "string",
                        "description": "Deal's pipeline id. Required if `deal.stage` is not provided. If `deal.group` is not provided, the stage's pipeline will be assigned to the deal automatically."
                      },
                      "stage": {
                        "type": "string",
                        "description": "Deal's stage id. Required if `deal.group` is not provided. If `deal.stage` is not provided, the deal will be assigned with the first stage in the pipeline provided in `deal.group`."
                      },
                      "owner": {
                        "type": "string",
                        "description": "Deal's owner id. Required if pipeline's auto-assign option is disabled."
                      },
                      "percent": {
                        "type": "integer",
                        "description": "Deal's percentage.",
                        "format": "int32"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Deal's status. See [available values](ref:deal).",
                        "default": 0,
                        "format": "int32"
                      },
                      "fields": {
                        "type": "array",
                        "description": "Deal's custom field values `{customFieldId: string, fieldValue: string, fieldCurrency?:string}[]`",
                        "items": {
                          "properties": {
                            "customFieldId": {
                              "type": "integer",
                              "description": "Field ID, ID of the Custom Field Meta Data",
                              "format": "int32"
                            },
                            "fieldValue": {
                              "type": "string",
                              "description": "Updated field value. For `currency` field, this needs to be in cents not dollars (or 100 x Base Unit)."
                            },
                            "fieldCurrency": {
                              "type": "string",
                              "description": "Required only for the `currency` field type. The three letter currency code for the currency value"
                            }
                          },
                          "required": [
                            "customFieldId",
                            "fieldValue"
                          ],
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "title",
                      "value",
                      "currency",
                      "group",
                      "stage",
                      "owner"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "POST /deals (Example REQUEST)": {
                  "value": {
                    "deal": {
                      "contact": "51",
                      "account": "45",
                      "description": "This deal is an important deal",
                      "currency": "usd",
                      "group": "1",
                      "owner": "1",
                      "percent": null,
                      "stage": "1",
                      "status": 0,
                      "title": "AC Deal",
                      "value": 45600,
                      "fields": [
                        {
                          "customFieldId": 1,
                          "fieldValue": "First field value"
                        },
                        {
                          "customFieldId": 2,
                          "fieldValue": "2008-01-20"
                        },
                        {
                          "customFieldId": 3,
                          "fieldValue": 5500,
                          "fieldCurrency": "EUR"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"contacts\": [\n    {\n      \"adate\": \"2017-02-06 15:50:11\",\n      \"bounced_date\": \"0000-00-00\",\n      \"bounced_hard\": \"0\",\n      \"bounced_soft\": \"0\",\n      \"cdate\": \"2017-02-03T11:26:41-06:00\",\n      \"deleted\": \"0\",\n      \"edate\": \"0000-00-00 00:00:00\",\n      \"email\": \"johndoe@example.com\",\n      \"email_domain\": \"\",\n      \"email_local\": \"\",\n      \"firstName\": \"\",\n      \"gravatar\": \"1\",\n      \"hash\": \"e1705a92f24edf5313ed21df44d6ff5f\",\n      \"id\": \"51\",\n      \"ip\": \"0\",\n      \"lastName\": \"\",\n      \"links\": {\n        \"bounceLogs\": \"/api/3/contacts/51/bounceLogs\",\n        \"contactAutomations\": \"/api/3/contacts/51/contactAutomations\",\n        \"contactData\": \"/api/3/contacts/51/contactData\",\n        \"contactDeals\": \"/api/3/contacts/51/contactDeals\",\n        \"contactGoals\": \"/api/3/contacts/51/contactGoals\",\n        \"contactLists\": \"/api/3/contacts/51/contactLists\",\n        \"contactLogs\": \"/api/3/contacts/51/contactLogs\",\n        \"contactTags\": \"/api/3/contacts/51/contactTags\",\n        \"deals\": \"/api/3/contacts/51/deals\",\n        \"fieldValues\": \"/api/3/contacts/51/fieldValues\",\n        \"geoIps\": \"/api/3/contacts/51/geoIps\",\n        \"notes\": \"/api/3/contacts/51/notes\",\n        \"organization\": \"/api/3/contacts/51/organization\",\n        \"plusAppend\": \"/api/3/contacts/51/plusAppend\",\n        \"scoreValues\": \"/api/3/contacts/51/scoreValues\",\n        \"trackingLogs\": \"/api/3/contacts/51/trackingLogs\"\n      },\n      \"organization\": null,\n      \"orgid\": \"0\",\n      \"phone\": \"\",\n      \"rating_tstamp\": \"0000-00-00\",\n      \"segmentio_id\": \"\",\n      \"sentcnt\": \"0\",\n      \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n      \"ua\": \"\",\n      \"udate\": \"2017-02-03T11:26:41-06:00\"\n    }\n  ],\n    \"deal\": {\n        \"description\": \"This deal is an important deal\",\n        \"currency\": \"usd\",\n        \"percent\": null,\n        \"status\": 0,\n        \"title\": \"AC Deal\",\n        \"value\": 45600,\n        \"organization\": 45,\n        \"contact\": 1,\n        \"group\": \"1\",\n        \"owner\": \"1\",\n        \"stage\": \"1\",\n        \"cdate\": \"2019-12-09T12:29:33-06:00\",\n        \"mdate\": \"2019-12-09T12:29:33-06:00\",\n        \"nextdate\": null,\n        \"hash\": \"c3a5497c\",\n        \"winProbability\": null,\n        \"winProbabilityMdate\": null,\n        \"links\": {\n            \"dealActivities\": \"/api/3/deals/51/dealActivities\",\n            \"contact\": \"/api/3/deals/51/contact\",\n            \"contactDeals\": \"/api/3/deals/51/contactDeals\",\n            \"group\": \"/api/3/deals/51/group\",\n            \"nextTask\": \"/api/3/deals/51/nextTask\",\n            \"notes\": \"/api/3/deals/51/notes\",\n            \"account\": \"/api/3/deals/51/account\",\n            \"customerAccount\": \"/api/3/deals/51/customerAccount\",\n            \"organization\": \"/api/3/deals/51/organization\",\n            \"owner\": \"/api/3/deals/51/owner\",\n            \"scoreValues\": \"/api/3/deals/51/scoreValues\",\n            \"stage\": \"/api/3/deals/51/stage\",\n            \"tasks\": \"/api/3/deals/51/tasks\",\n            \"dealCustomFieldData\": \"/api/3/deals/51/dealCustomFieldData\"\n        },\n        \"fields\": [\n            {\n                \"customFieldId\": 1,\n                \"fieldValue\": \"First field value\",\n                \"dealId\": \"51\"\n            },\n            {\n                \"customFieldId\": 2,\n                \"fieldValue\": \"2008-01-20\",\n                \"dealId\": \"51\"\n            },\n            {\n                \"customFieldId\": 3,\n                \"fieldValue\": 5500,\n                \"fieldCurrency\": \"EUR\",\n              \t\"dealId\": \"51\"\n            }\n        ],\n        \"id\": \"51\",\n        \"isDisabled\": false,\n        \"account\": 45,\n        \"customerAccount\": 45\n    }\n  \"dealStages\": [\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": \"2017-01-20T09:27:32-06:00\",\n      \"color\": \"C481DF\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"1\",\n      \"id\": \"1\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/1/group\"\n      },\n      \"order\": \"1\",\n      \"title\": \"To Contact\",\n      \"udate\": \"2017-01-20T09:27:32-06:00\",\n      \"width\": \"280\"\n    }\n  ]\n}\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealStages": {
      "get": {
        "summary": "List all stages",
        "description": "Retrieve all existing stages",
        "operationId": "list-all-deal-stages",
        "parameters": [
          {
            "name": "filters[title]",
            "in": "query",
            "description": "Filter by deal stages' titles. Any stages whose titles partial-match the filter value are returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[d_groupid]",
            "in": "query",
            "description": "Filter by pipeline's id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[title]",
            "in": "query",
            "description": "Order by deal stage's title",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealStages\": [\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": \"2017-03-01T15:52:42-06:00\",\n      \"color\": \"32B0FC\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"4\",\n      \"id\": \"15\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/15/group\"\n      },\n      \"order\": \"1\",\n      \"title\": \"Initial Contact\",\n      \"udate\": \"2017-03-01T15:52:42-06:00\",\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"contact-orgname\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"hide-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": \"2017-03-01T15:55:58-06:00\",\n      \"color\": \"696969\",\n      \"dealOrder\": \"title ASC\",\n      \"group\": \"4\",\n      \"id\": \"16\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/16/group\"\n      },\n      \"order\": \"1\",\n      \"title\": \"Qualifications - Low\",\n      \"udate\": \"2017-03-01T16:03:57-06:00\",\n      \"width\": \"270\"\n    }\n  ],\n  \"meta\": {\n    \"total\": \"2\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealStages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cardRegion1": {
                            "type": "string",
                            "example": "title"
                          },
                          "cardRegion2": {
                            "type": "string",
                            "example": "next-action"
                          },
                          "cardRegion3": {
                            "type": "string",
                            "example": "show-avatar"
                          },
                          "cardRegion4": {
                            "type": "string",
                            "example": "contact-fullname-orgname"
                          },
                          "cardRegion5": {
                            "type": "string",
                            "example": "value"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-03-01T15:52:42-06:00"
                          },
                          "color": {
                            "type": "string",
                            "example": "32B0FC"
                          },
                          "dealOrder": {
                            "type": "string",
                            "example": "next-action DESC"
                          },
                          "group": {
                            "type": "string",
                            "example": "4"
                          },
                          "id": {
                            "type": "string",
                            "example": "15"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "group": {
                                "type": "string",
                                "example": "/api/3/dealStages/15/group"
                              }
                            }
                          },
                          "order": {
                            "type": "string",
                            "example": "1"
                          },
                          "title": {
                            "type": "string",
                            "example": "Initial Contact"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2017-03-01T15:52:42-06:00"
                          },
                          "width": {
                            "type": "string",
                            "example": "280"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a stage",
        "description": "Create a new stage for a pipeline",
        "operationId": "create-a-deal-stage",
        "parameters": [
          {
            "name": "reorder",
            "in": "query",
            "description": "Whether to reorder stages within the pipeline after creating a new deal stage. Can be one of `0` and `1`. If set to `1`, new order values will be assigned to all stages within the same pipeline. If deal stages with the same order exists, the stage with the highest `id` will be assigned with the lowest `order`",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealStage": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Deal stage's title"
                      },
                      "group": {
                        "type": "string",
                        "description": "Deal stage's pipeline id"
                      },
                      "order": {
                        "type": "integer",
                        "description": "Order of the deal stage. If more than one deal stage share the same order value, the order of those deal stages may not be always the same. If `dealStage.order` is not provided, the order is assigned with `(the highest order of deal stages within the same pipeline) + 1`",
                        "default": null,
                        "format": "int32"
                      },
                      "dealOrder": {
                        "type": "string",
                        "description": "Option and direction to be used to sort deals in the deal stage. The option and direction should be delimited by a space. Direction can be either \"ASC\" or \"DESC\". See [available options](#section-deal-stage-parameters-available-values)",
                        "default": "next-action DESC"
                      },
                      "cardRegion1": {
                        "type": "string",
                        "description": "What to show in upper-left corner of Deal Cards. See [available values](#section-deal-stage-parameters-available-values)",
                        "default": "title"
                      },
                      "cardRegion2": {
                        "type": "string",
                        "description": "What to show in upper-right corner of Deal Cards. See [available values](#section-deal-stage-parameters-available-values)",
                        "default": "next-action"
                      },
                      "cardRegion3": {
                        "type": "string",
                        "description": "Whether to show the avatar in Deal Cards. Can be one of `show-avatar` and `hide-avatar`. If set to `show-avatar`, deal cards will show the avatars. If set to `hide-avatar`, deal cards will hide the avatars",
                        "default": "show-avatar"
                      },
                      "cardRegion4": {
                        "type": "string",
                        "description": "What to show next to the avatar in Deal Cards. See [available values](#section-deal-stage-parameters-available-values)",
                        "default": "contact-fullname-orgname"
                      },
                      "cardRegion5": {
                        "type": "string",
                        "description": "What to show in lower-right corner of Deal Cards. See [available values](#section-deal-stage-parameters-available-values)",
                        "default": "value"
                      },
                      "color": {
                        "type": "string",
                        "description": "Deal Stage's color. 6-character HEX color code without the hashtag. e.g. \"434343\" to assign the hex color value \"#434343\"",
                        "default": "3f3f3f"
                      },
                      "width": {
                        "type": "integer",
                        "description": "Deal stage's width in pixels, without `px` unit",
                        "default": 280,
                        "format": "int32"
                      }
                    },
                    "required": [
                      "title",
                      "group"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealStage": {
                      "cardRegion1": "title",
                      "cardRegion2": "next-action",
                      "cardRegion3": "show-avatar",
                      "cardRegion4": "contact-fullname-orgname",
                      "cardRegion5": "value",
                      "color": "32B0FC",
                      "dealOrder": "next-action DESC",
                      "group": "4",
                      "order": 1,
                      "title": "Initial Contact",
                      "width": 360
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealStage\": {\n    \"cardRegion1\": \"title\",\n    \"cardRegion2\": \"next-action\",\n    \"cardRegion3\": \"show-avatar\",\n    \"cardRegion4\": \"contact-fullname-orgname\",\n    \"cardRegion5\": \"value\",\n    \"cdate\": \"2017-03-01T15:55:58-06:00\",\n    \"color\": \"32B0FC\",\n    \"dealOrder\": \"next-action DESC\",\n    \"group\": \"4\",\n    \"id\": \"16\",\n    \"links\": {\n      \"group\": \"/api/3/dealStages/16/group\"\n    },\n    \"order\": 1,\n    \"title\": \"Initial Contact\",\n    \"udate\": \"2017-03-01T15:55:58-06:00\",\n    \"width\": 280\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealStage": {
                      "type": "object",
                      "properties": {
                        "cardRegion1": {
                          "type": "string",
                          "example": "title"
                        },
                        "cardRegion2": {
                          "type": "string",
                          "example": "next-action"
                        },
                        "cardRegion3": {
                          "type": "string",
                          "example": "show-avatar"
                        },
                        "cardRegion4": {
                          "type": "string",
                          "example": "contact-fullname-orgname"
                        },
                        "cardRegion5": {
                          "type": "string",
                          "example": "value"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-03-01T15:55:58-06:00"
                        },
                        "color": {
                          "type": "string",
                          "example": "32B0FC"
                        },
                        "dealOrder": {
                          "type": "string",
                          "example": "next-action DESC"
                        },
                        "group": {
                          "type": "string",
                          "example": "4"
                        },
                        "id": {
                          "type": "string",
                          "example": "16"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "group": {
                              "type": "string",
                              "example": "/api/3/dealStages/16/group"
                            }
                          }
                        },
                        "order": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "title": {
                          "type": "string",
                          "example": "Initial Contact"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-01T15:55:58-06:00"
                        },
                        "width": {
                          "type": "integer",
                          "example": 280,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealGroups/{id}": {
      "delete": {
        "summary": "Delete a pipeline",
        "description": "Delete an existing pipeline",
        "operationId": "delete-a-pipeline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pipeline's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "deals exist": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a pipeline",
        "description": "Retrieve an existing pipeline",
        "operationId": "retrieve-a-pipeline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pipeline's id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealGroup\": {\n    \"allgroups\": \"1\",\n    \"allusers\": \"0\",\n    \"autoassign\": \"1\",\n    \"cdate\": \"2017-03-30T12:11:30-05:00\",\n    \"currency\": \"eur\",\n    \"id\": \"4\",\n    \"links\": {\n      \"dealGroupGroups\": \"/api/3/dealGroups/4/dealGroupGroups\",\n      \"dealGroupUsers\": \"/api/3/dealGroups/4/dealGroupUsers\",\n      \"stages\": \"/api/3/dealGroups/4/stages\"\n    },\n    \"stages\": [\n      \"9\",\n      \"10\",\n      \"11\"\n    ],\n    \"title\": \"Qualifications\",\n    \"udate\": \"2017-03-30T13:44:32-05:00\"\n  },\n  \"dealStages\": [\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"18D499\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"4\",\n      \"id\": \"9\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/9/group\"\n      },\n      \"order\": \"1\",\n      \"title\": \"To Contact\",\n      \"udate\": null,\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"32B0FC\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"4\",\n      \"id\": \"10\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/10/group\"\n      },\n      \"order\": \"2\",\n      \"title\": \"In Contact\",\n      \"udate\": null,\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"E6CE4B\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"4\",\n      \"id\": \"11\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/11/group\"\n      },\n      \"order\": \"3\",\n      \"title\": \"Follow Up\",\n      \"udate\": null,\n      \"width\": \"280\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealGroup": {
                      "type": "object",
                      "properties": {
                        "allgroups": {
                          "type": "string",
                          "example": "1"
                        },
                        "allusers": {
                          "type": "string",
                          "example": "0"
                        },
                        "autoassign": {
                          "type": "string",
                          "example": "1"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-03-30T12:11:30-05:00"
                        },
                        "currency": {
                          "type": "string",
                          "example": "eur"
                        },
                        "id": {
                          "type": "string",
                          "example": "4"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "dealGroupGroups": {
                              "type": "string",
                              "example": "/api/3/dealGroups/4/dealGroupGroups"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "/api/3/dealGroups/4/dealGroupUsers"
                            },
                            "stages": {
                              "type": "string",
                              "example": "/api/3/dealGroups/4/stages"
                            }
                          }
                        },
                        "stages": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "9"
                          }
                        },
                        "title": {
                          "type": "string",
                          "example": "Qualifications"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-30T13:44:32-05:00"
                        }
                      }
                    },
                    "dealStages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cardRegion1": {
                            "type": "string",
                            "example": "title"
                          },
                          "cardRegion2": {
                            "type": "string",
                            "example": "next-action"
                          },
                          "cardRegion3": {
                            "type": "string",
                            "example": "show-avatar"
                          },
                          "cardRegion4": {
                            "type": "string",
                            "example": "contact-fullname-orgname"
                          },
                          "cardRegion5": {
                            "type": "string",
                            "example": "value"
                          },
                          "cdate": {},
                          "color": {
                            "type": "string",
                            "example": "18D499"
                          },
                          "dealOrder": {
                            "type": "string",
                            "example": "next-action DESC"
                          },
                          "group": {
                            "type": "string",
                            "example": "4"
                          },
                          "id": {
                            "type": "string",
                            "example": "9"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "group": {
                                "type": "string",
                                "example": "/api/3/dealStages/9/group"
                              }
                            }
                          },
                          "order": {
                            "type": "string",
                            "example": "1"
                          },
                          "title": {
                            "type": "string",
                            "example": "To Contact"
                          },
                          "udate": {},
                          "width": {
                            "type": "string",
                            "example": "280"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a pipeline",
        "description": "Update an existing pipeline",
        "operationId": "update-a-pipeline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pipeline's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealGroup": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Pipeline's title"
                      },
                      "currency": {
                        "type": "string",
                        "description": "Default currency to assign to new deals that belong to this deal group."
                      },
                      "allgroups": {
                        "type": "integer",
                        "description": "Whether all user groups have permission to manage this pipeline. Can be either `1` or `0`. If `1`, all user groups can manage this pipeline. If `0`, only user groups in `dealGroup.groups` parameter can manage this pipeline.",
                        "default": 1,
                        "format": "int32"
                      },
                      "allusers": {
                        "type": "integer",
                        "description": "Whether new deals get auto-assigned to all users. Can be either `1` or `0`. If `1`, new deals are auto-assigned to all users unless auto-assign is disabled. If `0`, new deals are auto-assigned to only the users in `dealGroup.users` parameter.",
                        "default": 0,
                        "format": "int32"
                      },
                      "autoassign": {
                        "type": "integer",
                        "description": "Deal auto-assign option. Can be one of `0`, `1`, and `2`. If `0`, auto-assign is disabled. If `1`, Round Robin method is used to auto-assign new deals. If `2`, deals are distributed based on deal values.",
                        "default": 1,
                        "format": "int32"
                      },
                      "users": {
                        "type": "array",
                        "description": "List of user ids to auto-assign new deals to unless auto-assign option is disabled.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "groups": {
                        "type": "array",
                        "description": "List of user group ids to allow managing this pipeline.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealGroup": {
                      "allgroups": 1,
                      "allusers": 0,
                      "autoassign": 1,
                      "currency": "eur",
                      "title": "Qualifications",
                      "users": [
                        "3"
                      ],
                      "groups": []
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealGroup\": {\n    \"allgroups\": 1,\n    \"allusers\": 0,\n    \"autoassign\": 1,\n    \"cdate\": \"2017-03-30T12:11:30-05:00\",\n    \"currency\": \"eur\",\n    \"dealGroupGroups\": [],\n    \"dealGroupUsers\": [\n      \"4\"\n    ],\n    \"id\": \"4\",\n    \"links\": {\n      \"dealGroupGroups\": \"/api/3/dealGroups/4/dealGroupGroups\",\n      \"dealGroupUsers\": \"/api/3/dealGroups/4/dealGroupUsers\",\n      \"stages\": \"/api/3/dealGroups/4/stages\"\n    },\n    \"title\": \"Qualifications\",\n    \"udate\": \"2017-03-30T13:44:32-05:00\"\n  },\n  \"dealGroupGroups\": [],\n  \"dealGroupUsers\": [\n    {\n      \"cdate\": null,\n      \"dealGroup\": \"4\",\n      \"id\": \"4\",\n      \"links\": {\n        \"dealGroup\": \"/api/3/dealGroupUsers/4/dealGroup\",\n        \"user\": \"/api/3/dealGroupUsers/4/user\"\n      },\n      \"user\": \"3\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealGroup": {
                      "type": "object",
                      "properties": {
                        "allgroups": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "allusers": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "autoassign": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-03-30T12:11:30-05:00"
                        },
                        "currency": {
                          "type": "string",
                          "example": "eur"
                        },
                        "dealGroupGroups": {
                          "type": "array"
                        },
                        "dealGroupUsers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "4"
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "4"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "dealGroupGroups": {
                              "type": "string",
                              "example": "/api/3/dealGroups/4/dealGroupGroups"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "/api/3/dealGroups/4/dealGroupUsers"
                            },
                            "stages": {
                              "type": "string",
                              "example": "/api/3/dealGroups/4/stages"
                            }
                          }
                        },
                        "title": {
                          "type": "string",
                          "example": "Qualifications"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-30T13:44:32-05:00"
                        }
                      }
                    },
                    "dealGroupGroups": {
                      "type": "array"
                    },
                    "dealGroupUsers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {},
                          "dealGroup": {
                            "type": "string",
                            "example": "4"
                          },
                          "id": {
                            "type": "string",
                            "example": "4"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealGroup": {
                                "type": "string",
                                "example": "/api/3/dealGroupUsers/4/dealGroup"
                              },
                              "user": {
                                "type": "string",
                                "example": "/api/3/dealGroupUsers/4/user"
                              }
                            }
                          },
                          "user": {
                            "type": "string",
                            "example": "3"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealGroups": {
      "post": {
        "summary": "Create a pipeline",
        "description": "Create a new pipeline",
        "operationId": "create-a-pipeline",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealGroup": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Pipeline's title."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Default currency to assign to new deals that belong to this deal group."
                      },
                      "allgroups": {
                        "type": "integer",
                        "description": "Whether all user groups have permission to manage this pipeline. Can be either `1` or `0`. If `1`, all user groups can manage this pipeline. If `0`, only user groups in `dealGroup.groups` parameter can manage this pipeline.",
                        "default": 1,
                        "format": "int32"
                      },
                      "allusers": {
                        "type": "integer",
                        "description": "Whether new deals get auto-assigned to all users. Can be either `1` or `0`. If `1`, new deals are auto-assigned to all users unless auto-assign is disabled. If `0`, new deals are auto-assigned to only the users in `dealGroup.users` parameter.",
                        "default": 0,
                        "format": "int32"
                      },
                      "autoassign": {
                        "type": "integer",
                        "description": "Deal auto-assign option. Can be one of `0`, `1`, and `2`. If `0`, auto-assign is disabled. If `1`, Round Robin method is used to auto-assign new deals. If `2`, deals are distributed based on deal values.",
                        "default": 1,
                        "format": "int32"
                      },
                      "users": {
                        "type": "array",
                        "description": "List of user ids to auto-assign new deals to unless auto-assign option is disabled.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "groups": {
                        "type": "array",
                        "description": "List of user group ids to allow managing this pipeline.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "title",
                      "currency"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealGroup": {
                      "allgroups": 1,
                      "allusers": 0,
                      "autoassign": 1,
                      "currency": "eur",
                      "title": "Qualifications",
                      "users": [
                        "3",
                        "4"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealGroup\": {\n    \"allgroups\": 1,\n    \"allusers\": 0,\n    \"autoassign\": 1,\n    \"cdate\": \"2017-03-30T12:12:41-05:00\",\n    \"currency\": \"eur\",\n    \"dealGroupGroups\": [],\n    \"dealGroupUsers\": [\n      \"6\",\n      \"7\"\n    ],\n    \"id\": \"5\",\n    \"links\": {\n      \"dealGroupGroups\": \"/api/3/dealGroups/5/dealGroupGroups\",\n      \"dealGroupUsers\": \"/api/3/dealGroups/5/dealGroupUsers\",\n      \"stages\": \"/api/3/dealGroups/5/stages\"\n    },\n    \"stages\": [\n      \"12\",\n      \"13\",\n      \"14\"\n    ],\n    \"title\": \"Qualifications\",\n    \"udate\": \"2017-03-30T12:12:41-05:00\"\n  },\n  \"dealGroupGroups\": [],\n  \"dealGroupUsers\": [\n    {\n      \"cdate\": null,\n      \"dealGroup\": \"5\",\n      \"id\": \"6\",\n      \"links\": {\n        \"dealGroup\": \"/api/3/dealGroupUsers/6/dealGroup\",\n        \"user\": \"/api/3/dealGroupUsers/6/user\"\n      },\n      \"user\": \"3\"\n    },\n    {\n      \"cdate\": null,\n      \"dealGroup\": \"5\",\n      \"id\": \"7\",\n      \"links\": {\n        \"dealGroup\": \"/api/3/dealGroupUsers/7/dealGroup\",\n        \"user\": \"/api/3/dealGroupUsers/7/user\"\n      },\n      \"user\": \"4\"\n    }\n  ],\n  \"dealStages\": [\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"18D499\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"5\",\n      \"id\": \"12\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/12/group\"\n      },\n      \"order\": \"1\",\n      \"title\": \"To Contact\",\n      \"udate\": null,\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"32B0FC\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"5\",\n      \"id\": \"13\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/13/group\"\n      },\n      \"order\": \"2\",\n      \"title\": \"In Contact\",\n      \"udate\": null,\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"E6CE4B\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"5\",\n      \"id\": \"14\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/14/group\"\n      },\n      \"order\": \"3\",\n      \"title\": \"Follow Up\",\n      \"udate\": null,\n      \"width\": \"280\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealGroup": {
                      "type": "object",
                      "properties": {
                        "allgroups": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "allusers": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "autoassign": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-03-30T12:12:41-05:00"
                        },
                        "currency": {
                          "type": "string",
                          "example": "eur"
                        },
                        "dealGroupGroups": {
                          "type": "array"
                        },
                        "dealGroupUsers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "6"
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "5"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "dealGroupGroups": {
                              "type": "string",
                              "example": "/api/3/dealGroups/5/dealGroupGroups"
                            },
                            "dealGroupUsers": {
                              "type": "string",
                              "example": "/api/3/dealGroups/5/dealGroupUsers"
                            },
                            "stages": {
                              "type": "string",
                              "example": "/api/3/dealGroups/5/stages"
                            }
                          }
                        },
                        "stages": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "12"
                          }
                        },
                        "title": {
                          "type": "string",
                          "example": "Qualifications"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-30T12:12:41-05:00"
                        }
                      }
                    },
                    "dealGroupGroups": {
                      "type": "array"
                    },
                    "dealGroupUsers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {},
                          "dealGroup": {
                            "type": "string",
                            "example": "5"
                          },
                          "id": {
                            "type": "string",
                            "example": "6"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealGroup": {
                                "type": "string",
                                "example": "/api/3/dealGroupUsers/6/dealGroup"
                              },
                              "user": {
                                "type": "string",
                                "example": "/api/3/dealGroupUsers/6/user"
                              }
                            }
                          },
                          "user": {
                            "type": "string",
                            "example": "3"
                          }
                        }
                      }
                    },
                    "dealStages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cardRegion1": {
                            "type": "string",
                            "example": "title"
                          },
                          "cardRegion2": {
                            "type": "string",
                            "example": "next-action"
                          },
                          "cardRegion3": {
                            "type": "string",
                            "example": "show-avatar"
                          },
                          "cardRegion4": {
                            "type": "string",
                            "example": "contact-fullname-orgname"
                          },
                          "cardRegion5": {
                            "type": "string",
                            "example": "value"
                          },
                          "cdate": {},
                          "color": {
                            "type": "string",
                            "example": "18D499"
                          },
                          "dealOrder": {
                            "type": "string",
                            "example": "next-action DESC"
                          },
                          "group": {
                            "type": "string",
                            "example": "5"
                          },
                          "id": {
                            "type": "string",
                            "example": "12"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "group": {
                                "type": "string",
                                "example": "/api/3/dealStages/12/group"
                              }
                            }
                          },
                          "order": {
                            "type": "string",
                            "example": "1"
                          },
                          "title": {
                            "type": "string",
                            "example": "To Contact"
                          },
                          "udate": {},
                          "width": {
                            "type": "string",
                            "example": "280"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all pipelines",
        "description": "Retrieve all existing pipelines",
        "operationId": "list-all-pipelines",
        "parameters": [
          {
            "name": "filters[title]",
            "in": "query",
            "description": "Filter by pipeline's title. The filter matches any pipeline titles that contain the provided title (i.e. \"Contact\" matches all of \"In Contact\", \"To Contact\", and \"Contact Pipeline\").",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[have_stages]",
            "in": "query",
            "description": "Filter by whether pipelines have deal stages. Can be either `1` or `0`. If `1`, only pipelines with at least one stage will be returned.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orders[title]",
            "in": "query",
            "description": "Order by Pipeline's title",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[popular]",
            "in": "query",
            "description": "Order by number of deals each pipeline has. If pipelines have same number of deals, pipelines' created dates are used to determine the order.",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealGroups\": [\n    {\n      \"allgroups\": \"1\",\n      \"allusers\": \"1\",\n      \"autoassign\": \"1\",\n      \"cdate\": \"2017-01-16T14:51:57-06:00\",\n      \"currency\": \"usd\",\n      \"id\": \"1\",\n      \"links\": {\n        \"dealGroupGroups\": \"/api/3/dealGroups/1/dealGroupGroups\",\n        \"dealGroupUsers\": \"/api/3/dealGroups/1/dealGroupUsers\",\n        \"stages\": \"/api/3/dealGroups/1/stages\"\n      },\n      \"stages\": [\n        \"1\",\n        \"2\"\n      ],\n      \"title\": \"Pipeline A\",\n      \"udate\": \"2017-03-01T11:06:32-06:00\"\n    },\n    {\n      \"allgroups\": \"1\",\n      \"allusers\": \"1\",\n      \"autoassign\": \"0\",\n      \"cdate\": \"2017-03-01T14:45:16-06:00\",\n      \"currency\": \"usd\",\n      \"id\": \"5\",\n      \"links\": {\n        \"dealGroupGroups\": \"/api/3/dealGroups/5/dealGroupGroups\",\n        \"dealGroupUsers\": \"/api/3/dealGroups/5/dealGroupUsers\",\n        \"stages\": \"/api/3/dealGroups/5/stages\"\n      },\n      \"stages\": [\n        \"12\",\n        \"13\",\n        \"14\"\n      ],\n      \"title\": \"Pipeline Yesterday\",\n      \"udate\": \"2017-03-01T15:07:18-06:00\"\n    }\n  ],\n  \"dealStages\": [\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": \"2017-01-20T09:27:32-06:00\",\n      \"color\": \"C481DF\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"1\",\n      \"id\": \"1\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/1/group\"\n      },\n      \"order\": \"1\",\n      \"title\": \"Stage 1\",\n      \"udate\": \"2017-03-01T11:06:14-06:00\",\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": \"2017-01-20T09:27:34-06:00\",\n      \"color\": \"00ECC5\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"1\",\n      \"id\": \"2\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/2/group\"\n      },\n      \"order\": \"2\",\n      \"title\": \"Stage 2\",\n      \"udate\": \"2017-03-01T11:06:20-06:00\",\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"18D499\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"5\",\n      \"id\": \"12\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/12/group\"\n      },\n      \"order\": \"1\",\n      \"title\": \"To Contact\",\n      \"udate\": null,\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"32B0FC\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"5\",\n      \"id\": \"13\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/13/group\"\n      },\n      \"order\": \"2\",\n      \"title\": \"In Contact\",\n      \"udate\": null,\n      \"width\": \"280\"\n    },\n    {\n      \"cardRegion1\": \"title\",\n      \"cardRegion2\": \"next-action\",\n      \"cardRegion3\": \"show-avatar\",\n      \"cardRegion4\": \"contact-fullname-orgname\",\n      \"cardRegion5\": \"value\",\n      \"cdate\": null,\n      \"color\": \"E6CE4B\",\n      \"dealOrder\": \"next-action DESC\",\n      \"group\": \"5\",\n      \"id\": \"14\",\n      \"links\": {\n        \"group\": \"/api/3/dealStages/14/group\"\n      },\n      \"order\": \"3\",\n      \"title\": \"Follow Up\",\n      \"udate\": null,\n      \"width\": \"280\"\n    }\n  ],\n  \"meta\": {\n    \"total\": \"2\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "allgroups": {
                            "type": "string",
                            "example": "1"
                          },
                          "allusers": {
                            "type": "string",
                            "example": "1"
                          },
                          "autoassign": {
                            "type": "string",
                            "example": "1"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-01-16T14:51:57-06:00"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealGroupGroups": {
                                "type": "string",
                                "example": "/api/3/dealGroups/1/dealGroupGroups"
                              },
                              "dealGroupUsers": {
                                "type": "string",
                                "example": "/api/3/dealGroups/1/dealGroupUsers"
                              },
                              "stages": {
                                "type": "string",
                                "example": "/api/3/dealGroups/1/stages"
                              }
                            }
                          },
                          "stages": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "1"
                            }
                          },
                          "title": {
                            "type": "string",
                            "example": "Pipeline A"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2017-03-01T11:06:32-06:00"
                          }
                        }
                      }
                    },
                    "dealStages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cardRegion1": {
                            "type": "string",
                            "example": "title"
                          },
                          "cardRegion2": {
                            "type": "string",
                            "example": "next-action"
                          },
                          "cardRegion3": {
                            "type": "string",
                            "example": "show-avatar"
                          },
                          "cardRegion4": {
                            "type": "string",
                            "example": "contact-fullname-orgname"
                          },
                          "cardRegion5": {
                            "type": "string",
                            "example": "value"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-01-20T09:27:32-06:00"
                          },
                          "color": {
                            "type": "string",
                            "example": "C481DF"
                          },
                          "dealOrder": {
                            "type": "string",
                            "example": "next-action DESC"
                          },
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "group": {
                                "type": "string",
                                "example": "/api/3/dealStages/1/group"
                              }
                            }
                          },
                          "order": {
                            "type": "string",
                            "example": "1"
                          },
                          "title": {
                            "type": "string",
                            "example": "Stage 1"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2017-03-01T11:06:14-06:00"
                          },
                          "width": {
                            "type": "string",
                            "example": "280"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealStages/{id}": {
      "delete": {
        "summary": "Delete a stage",
        "description": "Delete an existing stage",
        "operationId": "delete-a-deal-stage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal stage's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a stage",
        "description": "Update an existing stage",
        "operationId": "update-a-deal-stage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal stage's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          },
          {
            "name": "reorder",
            "in": "query",
            "description": "Whether to reorder stages within the pipeline after creating a new deal stage. Can be one of `0` and `1`. If set to `1`, new order values will be assigned to all stages within the same pipeline. If deal stages with the same order exists, the stage with the highest `id` will be assigned with the lowest `order`",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealStage": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Deal stage's title"
                      },
                      "group": {
                        "type": "string",
                        "description": "Deal stage's pipeline id"
                      },
                      "order": {
                        "type": "integer",
                        "description": "Order of the deal stage. If more than one deal stage share the same order value, the order of those deal stages may not be always the same",
                        "format": "int32"
                      },
                      "dealOrder": {
                        "type": "string",
                        "description": "Option and direction to be used to sort deals in the deal stage. The option and direction should be delimited by a space. Direction can be either \"ASC\" or \"DESC\". See [available options](#section-deal-stage-parameters-available-values)"
                      },
                      "cardRegion1": {
                        "type": "string",
                        "description": "What to show in upper-left corner of Deal Cards. See [available values](#section-deal-stage-parameters-available-values)"
                      },
                      "cardRegion2": {
                        "type": "string",
                        "description": "What to show in upper-right corner of Deal Cards. See [available values](#section-deal-stage-parameters-available-values)"
                      },
                      "cardRegion3": {
                        "type": "string",
                        "description": "Whether to show the avatar in Deal Cards. Can be one of `show-avatar` and `hide-avatar`. If set to `show-avatar`, deal cards will show the avatars. If set to `hide-avatar`, deal cards will hide the avatars"
                      },
                      "cardRegion4": {
                        "type": "string",
                        "description": "What to show next to the avatar in Deal Cards. See [available values](#section-deal-stage-parameters-available-values)"
                      },
                      "cardRegion5": {
                        "type": "string",
                        "description": "What to show in lower-right corner of Deal Cards. See [available values](#section-deal-stage-parameters-available-values)"
                      },
                      "color": {
                        "type": "string",
                        "description": "Deal Stage's color. 6-character HEX color code without the hashtag. e.g. \"434343\" to assign the hex color value \"#434343\""
                      },
                      "width": {
                        "type": "integer",
                        "description": "Deal stage's width in pixels, without `px` unit",
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealStage": {
                      "cardRegion1": "contact-orgname",
                      "cardRegion2": "next-action",
                      "cardRegion3": "hide-avatar",
                      "cardRegion4": "contact-fullname-orgname",
                      "cardRegion5": "value",
                      "color": "696969",
                      "dealOrder": "title ASC",
                      "group": "4",
                      "order": 1,
                      "title": "Qualifications - Low",
                      "width": 270
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealStage\": {\n    \"cardRegion1\": \"contact-orgname\",\n    \"cardRegion2\": \"next-action\",\n    \"cardRegion3\": \"hide-avatar\",\n    \"cardRegion4\": \"contact-fullname-orgname\",\n    \"cardRegion5\": \"value\",\n    \"cdate\": \"2017-03-01T15:55:58-06:00\",\n    \"color\": \"696969\",\n    \"dealOrder\": \"title ASC\",\n    \"group\": \"4\",\n    \"id\": \"16\",\n    \"links\": {\n      \"group\": \"/api/3/dealStages/16/group\"\n    },\n    \"order\": 1,\n    \"title\": \"Qualifications - Low\",\n    \"udate\": \"2017-03-01T16:03:57-06:00\",\n    \"width\": 270\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealStage": {
                      "type": "object",
                      "properties": {
                        "cardRegion1": {
                          "type": "string",
                          "example": "contact-orgname"
                        },
                        "cardRegion2": {
                          "type": "string",
                          "example": "next-action"
                        },
                        "cardRegion3": {
                          "type": "string",
                          "example": "hide-avatar"
                        },
                        "cardRegion4": {
                          "type": "string",
                          "example": "contact-fullname-orgname"
                        },
                        "cardRegion5": {
                          "type": "string",
                          "example": "value"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-03-01T15:55:58-06:00"
                        },
                        "color": {
                          "type": "string",
                          "example": "696969"
                        },
                        "dealOrder": {
                          "type": "string",
                          "example": "title ASC"
                        },
                        "group": {
                          "type": "string",
                          "example": "4"
                        },
                        "id": {
                          "type": "string",
                          "example": "16"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "group": {
                              "type": "string",
                              "example": "/api/3/dealStages/16/group"
                            }
                          }
                        },
                        "order": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "title": {
                          "type": "string",
                          "example": "Qualifications - Low"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-01T16:03:57-06:00"
                        },
                        "width": {
                          "type": "integer",
                          "example": 270,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a stage",
        "description": "Retrieve an existing stage",
        "operationId": "retrieve-a-deal-stage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal stage's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealStage\": {\n    \"cardRegion1\": \"title\",\n    \"cardRegion2\": \"next-action\",\n    \"cardRegion3\": \"show-avatar\",\n    \"cardRegion4\": \"contact-fullname-orgname\",\n    \"cardRegion5\": \"value\",\n    \"cdate\": \"2017-01-20T09:27:32-06:00\",\n    \"color\": \"C481DF\",\n    \"dealOrder\": \"score DESC\",\n    \"group\": \"1\",\n    \"id\": \"1\",\n    \"links\": {\n      \"group\": \"/api/3/dealStages/1/group\"\n    },\n    \"order\": \"1\",\n    \"title\": \"Stage 1\",\n    \"udate\": \"2017-03-02T11:41:01-06:00\",\n    \"width\": \"280\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealStage": {
                      "type": "object",
                      "properties": {
                        "cardRegion1": {
                          "type": "string",
                          "example": "title"
                        },
                        "cardRegion2": {
                          "type": "string",
                          "example": "next-action"
                        },
                        "cardRegion3": {
                          "type": "string",
                          "example": "show-avatar"
                        },
                        "cardRegion4": {
                          "type": "string",
                          "example": "contact-fullname-orgname"
                        },
                        "cardRegion5": {
                          "type": "string",
                          "example": "value"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2017-01-20T09:27:32-06:00"
                        },
                        "color": {
                          "type": "string",
                          "example": "C481DF"
                        },
                        "dealOrder": {
                          "type": "string",
                          "example": "score DESC"
                        },
                        "group": {
                          "type": "string",
                          "example": "1"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "group": {
                              "type": "string",
                              "example": "/api/3/dealStages/1/group"
                            }
                          }
                        },
                        "order": {
                          "type": "string",
                          "example": "1"
                        },
                        "title": {
                          "type": "string",
                          "example": "Stage 1"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-02T11:41:01-06:00"
                        },
                        "width": {
                          "type": "string",
                          "example": "280"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealTasktypes": {
      "get": {
        "summary": "List all task types",
        "description": "Retrieve all existing task types",
        "operationId": "list-all-deal-task-types",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTasktypes\": [\n    {\n      \"cdate\": null,\n      \"defduration\": \"0\",\n      \"id\": \"1\",\n      \"links\": [],\n      \"status\": \"0\",\n      \"title\": \"Call\",\n      \"udate\": null\n    },\n    {\n      \"cdate\": null,\n      \"defduration\": \"0\",\n      \"id\": \"2\",\n      \"links\": [],\n      \"status\": \"0\",\n      \"title\": \"Email\",\n      \"udate\": null\n    },\n    {\n      \"cdate\": null,\n      \"defduration\": \"0\",\n      \"id\": \"3\",\n      \"links\": [],\n      \"status\": \"0\",\n      \"title\": \"Lunch\",\n      \"udate\": null\n    },\n    {\n      \"cdate\": null,\n      \"defduration\": \"0\",\n      \"id\": \"4\",\n      \"links\": [],\n      \"status\": \"0\",\n      \"title\": \"Meeting\",\n      \"udate\": null\n    }\n  ],\n  \"meta\": {\n    \"total\": \"4\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealTasktypes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {},
                          "defduration": {
                            "type": "string",
                            "example": "0"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "array"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "title": {
                            "type": "string",
                            "example": "Call"
                          },
                          "udate": {}
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a task type",
        "description": "Create a new task type",
        "operationId": "create-a-deal-task-type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealTasktype": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Deal task type's title. The title should be unique among deal task types."
                      },
                      "status": {
                        "type": "string",
                        "description": "0 - Active status, 1 - Disabled status",
                        "enum": [
                          "0",
                          "1"
                        ]
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealTasktype": {
                      "title": "Skype",
                      "status": 0
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTasktype\": {\n    \"cdate\": \"2017-03-02T14:28:53-06:00\",\n    \"defduration\": \"0\",\n    \"id\": \"7\",\n    \"links\": [],\n    \"status\": \"0\",\n    \"title\": \"Skype\",\n    \"udate\": \"2017-03-02T14:28:53-06:00\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealTasktype": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2017-03-02T14:28:53-06:00"
                        },
                        "defduration": {
                          "type": "string",
                          "example": "0"
                        },
                        "id": {
                          "type": "string",
                          "example": "7"
                        },
                        "links": {
                          "type": "array"
                        },
                        "status": {
                          "type": "string",
                          "example": "0"
                        },
                        "title": {
                          "type": "string",
                          "example": "Skype"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-02T14:28:53-06:00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealTasktypes/{id}": {
      "get": {
        "summary": "Retrieve a task type",
        "description": "Retrieve an existing task type",
        "operationId": "retrieve-a-deal-task-type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal task type's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTasktype\": {\n    \"cdate\": \"2017-03-02T14:22:51-06:00\",\n    \"defduration\": \"0\",\n    \"id\": \"5\",\n    \"links\": [],\n    \"status\": \"0\",\n    \"title\": \"Skype\",\n    \"udate\": \"2017-03-02T14:22:51-06:00\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealTasktype": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2017-03-02T14:22:51-06:00"
                        },
                        "defduration": {
                          "type": "string",
                          "example": "0"
                        },
                        "id": {
                          "type": "string",
                          "example": "5"
                        },
                        "links": {
                          "type": "array"
                        },
                        "status": {
                          "type": "string",
                          "example": "0"
                        },
                        "title": {
                          "type": "string",
                          "example": "Skype"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-02T14:22:51-06:00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a task type",
        "description": "Delete an existing task type",
        "operationId": "delete-a-deal-task-type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal task type's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a task type",
        "description": "Update an existing task type",
        "operationId": "update-a-deal-task-type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal task type's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealTasktype": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Deal task type's title. The title should be unique among deal task types."
                      },
                      "status": {
                        "type": "string",
                        "description": "0 - Active status, 1 - Disabled status",
                        "default": "0",
                        "enum": [
                          "0",
                          "1"
                        ]
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealTasktype": {
                      "title": "Meet in person",
                      "status": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTasktype\": {\n    \"cdate\": \"2017-03-02T14:28:53-06:00\",\n    \"defduration\": \"0\",\n    \"id\": \"7\",\n    \"links\": [],\n    \"status\": \"1\",\n    \"title\": \"Meet in person\",\n    \"udate\": \"2017-03-02T14:32:20-06:00\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealTasktype": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2017-03-02T14:28:53-06:00"
                        },
                        "defduration": {
                          "type": "string",
                          "example": "0"
                        },
                        "id": {
                          "type": "string",
                          "example": "7"
                        },
                        "links": {
                          "type": "array"
                        },
                        "status": {
                          "type": "string",
                          "example": "1"
                        },
                        "title": {
                          "type": "string",
                          "example": "Meet in person"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2017-03-02T14:32:20-06:00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/eventTrackingEvents": {
      "get": {
        "summary": "List all events (names only)",
        "description": "List the names of tracked events",
        "operationId": "list-all-event-types",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"eventTrackingEvents\": [\n    {\n      \"name\": \"__pagevisit\"\n    },\n    {\n      \"name\": \"__redir\"\n    }\n  ],\n  \"meta\": {\n    \"total\": 2,\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new event (name only)",
        "description": "Create a new event tracking event (name only)",
        "operationId": "create-a-new-event-name-only",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventTrackingEvent": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the event"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "JSON": {
                  "value": {
                    "eventTrackingEvent": {
                      "name": "my new fab event"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"eventTrackingEvent\": {\n\t\t\"name\": \"my new fab event\"\n\t}\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "eventTrackingEvent": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "my new fab event"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/eventTracking": {
      "get": {
        "summary": "Retrieve Event Tracking Status",
        "description": "Get event tracking status (enabled or disabled)",
        "operationId": "retrieve-event-tracking-status",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"eventTracking\" {\n    \"enabled\": true\n  }\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Enable/disable",
        "description": "Enable or disable event tracking",
        "operationId": "enable-disable-event-tracking",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventTracking": {
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether event tracking should be enabled"
                      }
                    },
                    "required": [
                      "enabled"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Enable": {
                  "value": {
                    "eventTracking": {
                      "enabled": true
                    }
                  }
                },
                "Disable": {
                  "value": {
                    "eventTracking": {
                      "enabled": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"eventTracking\" {\n    \"enabled\": true\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts": {
      "get": {
        "summary": "List, search, and filter contacts",
        "description": "Use this API endpoint to list all contacts, search contacts, or filter contacts by many criteria. For example, search for specific contacts by email, list, account.",
        "operationId": "list-all-contacts",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Filter contacts by ID. Can be repeated for multiple IDs. Example: ids[]=1&ids[]=2&ids[]=42",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email address of the contact you want to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_like",
            "in": "query",
            "description": "Filter contacts that contain the given value in the email address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Exclude from the response the contact with the given ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "formid",
            "in": "query",
            "description": "Filter contacts associated with the given form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_greater",
            "in": "query",
            "description": "Only include contacts with an ID greater than the given ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_less",
            "in": "query",
            "description": "Only include contacts with an ID less than the given ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "listid",
            "in": "query",
            "description": "Filter contacts associated with the given list",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization",
            "in": "query",
            "description": "(Deprecated) Please use Account-Contact end points. Filter contacts associated with the given organization ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter contacts that match the given value in the contact names, organization, phone or email",
            "schema": {
              "type": "string",
              "default": "null"
            }
          },
          {
            "name": "segmentid",
            "in": "query",
            "description": "Return only contacts that match a list segment (the first call kicks off an asynchronous query. When the query is complete, subsequent API calls will return contacts that match the segment - timeout 1hr)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "name": "seriesid",
            "in": "query",
            "description": "Filter contacts associated with the given automation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "See [available values](https://developers.activecampaign.com/reference/contact)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          },
          {
            "name": "tagid",
            "in": "query",
            "description": "Filter contacts associated with the given tag",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[created_before]",
            "in": "query",
            "description": "Filter contacts that were created prior to this date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filters[created_after]",
            "in": "query",
            "description": "Filter contacts that were created after this date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filters[updated_before]",
            "in": "query",
            "description": "Filter contacts that were updated before this date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filters[updated_after]",
            "in": "query",
            "description": "Filter contacts that were updated after this date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "waitid",
            "in": "query",
            "description": "Filter by contacts in the wait queue of an automation block",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orders[id]",
            "in": "query",
            "description": "Order contacts by unique ID",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[cdate]",
            "in": "query",
            "description": "Order contacts by creation date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[email]",
            "in": "query",
            "description": "Order contacts by email",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[first_name]",
            "in": "query",
            "description": "Order contacts by first name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[last_name]",
            "in": "query",
            "description": "Order contacts by last name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[name]",
            "in": "query",
            "description": "Order contacts by full name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[score]",
            "in": "query",
            "description": "Order contacts by score",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "in_group_lists",
            "in": "query",
            "description": "Set this to \"true\" in order to return only contacts that the current user has permissions to see.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"scoreValues\": [],\n    \"contacts\": [\n        {\n            \"cdate\": \"2018-09-12T16:53:50-05:00\",\n            \"email\": \"adam@activecampaign.com\",\n            \"phone\": \"\",\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": \"0000-00-00\",\n            \"ip\": \"0\",\n            \"ua\": \"\",\n            \"hash\": \"0d9c41ae7a4de516313673e2341f6003\",\n            \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": \"0000-00-00\",\n            \"gravatar\": \"1\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"udate\": \"2018-09-12T17:00:00-05:00\",\n            \"deleted_at\": \"0000-00-00 00:00:00\",\n            \"scoreValues\": [],\n            \"links\": {\n                \"bounceLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/bounceLogs\",\n                \"contactAutomations\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactAutomations\",\n                \"contactData\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactData\",\n                \"contactGoals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactGoals\",\n                \"contactLists\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactLists\",\n                \"contactLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactLogs\",\n                \"contactTags\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactTags\",\n                \"contactDeals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactDeals\",\n                \"deals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/deals\",\n                \"fieldValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/fieldValues\",\n                \"geoIps\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/geoIps\",\n                \"notes\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/notes\",\n                \"organization\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/organization\",\n                \"plusAppend\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/plusAppend\",\n                \"trackingLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/trackingLogs\",\n                \"scoreValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/scoreValues\"\n            },\n            \"id\": \"5\",\n            \"organization\": null\n        },\n        {\n            \"cdate\": \"2018-08-17T13:46:58-05:00\",\n            \"email\": \"kconnell2@gmailc.om\",\n            \"phone\": \"\",\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": \"0000-00-00\",\n            \"ip\": \"2130706433\",\n            \"ua\": \"\",\n            \"hash\": \"4641d20634346d27408557fde5e3ad3b\",\n            \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": \"0000-00-00\",\n            \"gravatar\": \"1\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": \"2018-08-31T11:58:25-05:00\",\n            \"udate\": \"2018-08-17T13:46:58-05:00\",\n            \"deleted_at\": \"0000-00-00 00:00:00\",\n            \"scoreValues\": [],\n            \"links\": {\n                \"bounceLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/bounceLogs\",\n                \"contactAutomations\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/contactAutomations\",\n                \"contactData\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/contactData\",\n                \"contactGoals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/contactGoals\",\n                \"contactLists\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/contactLists\",\n                \"contactLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/contactLogs\",\n                \"contactTags\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/contactTags\",\n                \"contactDeals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/contactDeals\",\n                \"deals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/deals\",\n                \"fieldValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/fieldValues\",\n                \"geoIps\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/geoIps\",\n                \"notes\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/notes\",\n                \"organization\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/organization\",\n                \"plusAppend\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/plusAppend\",\n                \"trackingLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/trackingLogs\",\n                \"scoreValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/4/scoreValues\"\n            },\n            \"id\": \"4\",\n            \"organization\": null\n        },\n        {\n            \"cdate\": \"2018-09-18T11:02:57-05:00\",\n            \"email\": \"test@gmail.com\",\n            \"phone\": \"\",\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": null,\n            \"ip\": \"0\",\n            \"ua\": null,\n            \"hash\": \"\",\n            \"socialdata_lastcheck\": null,\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": null,\n            \"gravatar\": \"1\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": null,\n            \"udate\": \"2018-09-18T11:02:57-05:00\",\n            \"edate\": null,\n            \"deleted_at\": null,\n            \"scoreValues\": [],\n            \"links\": {\n                \"bounceLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/bounceLogs\",\n                \"contactAutomations\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/contactAutomations\",\n                \"contactData\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/contactData\",\n                \"contactGoals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/contactGoals\",\n                \"contactLists\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/contactLists\",\n                \"contactLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/contactLogs\",\n                \"contactTags\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/contactTags\",\n                \"contactDeals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/contactDeals\",\n                \"deals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/deals\",\n                \"fieldValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/fieldValues\",\n                \"geoIps\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/geoIps\",\n                \"notes\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/notes\",\n                \"organization\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/organization\",\n                \"plusAppend\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/plusAppend\",\n                \"trackingLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/trackingLogs\",\n                \"scoreValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/6/scoreValues\"\n            },\n            \"id\": \"6\",\n            \"organization\": null\n        },\n        {\n            \"cdate\": \"2018-08-17T09:56:33-05:00\",\n            \"email\": \"test@test.com\",\n            \"phone\": \"9813764\",\n            \"firstName\": \"Test\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": \"0000-00-00\",\n            \"ip\": \"2130706433\",\n            \"ua\": \"\",\n            \"hash\": \"e4162c50b2edaf68b0d5012ef3cc82fd\",\n            \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": \"0000-00-00\",\n            \"gravatar\": \"1\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": \"2018-08-31T11:52:08-05:00\",\n            \"udate\": \"2018-08-17T09:56:33-05:00\",\n            \"edate\": \"2018-08-17T13:48:46-05:00\",\n            \"deleted_at\": \"0000-00-00 00:00:00\",\n            \"scoreValues\": [],\n            \"links\": {\n                \"bounceLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/bounceLogs\",\n                \"contactAutomations\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/contactAutomations\",\n                \"contactData\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/contactData\",\n                \"contactGoals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/contactGoals\",\n                \"contactLists\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/contactLists\",\n                \"contactLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/contactLogs\",\n                \"contactTags\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/contactTags\",\n                \"contactDeals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/contactDeals\",\n                \"deals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/deals\",\n                \"fieldValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/fieldValues\",\n                \"geoIps\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/geoIps\",\n                \"notes\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/notes\",\n                \"organization\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/organization\",\n                \"plusAppend\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/plusAppend\",\n                \"trackingLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/trackingLogs\",\n                \"scoreValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/2/scoreValues\"\n            },\n            \"id\": \"2\",\n            \"organization\": null\n        },\n        {\n            \"cdate\": \"2018-08-17T13:45:23-05:00\",\n            \"email\": \"test@testing.com\",\n            \"phone\": \"20405938\",\n            \"firstName\": \"testing\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": null,\n            \"ip\": \"2130706433\",\n            \"ua\": null,\n            \"hash\": \"e3eba337bb1ede3bd073b1832e3f3def\",\n            \"socialdata_lastcheck\": null,\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": null,\n            \"gravatar\": \"1\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": null,\n            \"udate\": \"2018-08-17T13:45:23-05:00\",\n            \"edate\": null,\n            \"deleted_at\": null,\n            \"scoreValues\": [],\n            \"links\": {\n                \"bounceLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/bounceLogs\",\n                \"contactAutomations\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/contactAutomations\",\n                \"contactData\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/contactData\",\n                \"contactGoals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/contactGoals\",\n                \"contactLists\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/contactLists\",\n                \"contactLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/contactLogs\",\n                \"contactTags\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/contactTags\",\n                \"contactDeals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/contactDeals\",\n                \"deals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/deals\",\n                \"fieldValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/fieldValues\",\n                \"geoIps\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/geoIps\",\n                \"notes\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/notes\",\n                \"organization\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/organization\",\n                \"plusAppend\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/plusAppend\",\n                \"trackingLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/trackingLogs\",\n                \"scoreValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/3/scoreValues\"\n            },\n            \"id\": \"3\",\n            \"organization\": null\n        },\n        {\n            \"cdate\": \"2018-09-19T23:11:11-05:00\",\n            \"email\": \"tjahn+test@activecampaign.com\",\n            \"phone\": \"\",\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": \"0000-00-00\",\n            \"ip\": \"0\",\n            \"ua\": \"\",\n            \"hash\": \"853be08a2387ac13ca51dee72e586e9c\",\n            \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": \"0000-00-00\",\n            \"gravatar\": \"0\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": \"2018-09-19T23:24:43-05:00\",\n            \"udate\": \"2018-09-19T23:11:11-05:00\",\n            \"deleted_at\": \"0000-00-00 00:00:00\",\n            \"scoreValues\": [],\n            \"links\": {\n                \"bounceLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/bounceLogs\",\n                \"contactAutomations\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/contactAutomations\",\n                \"contactData\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/contactData\",\n                \"contactGoals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/contactGoals\",\n                \"contactLists\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/contactLists\",\n                \"contactLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/contactLogs\",\n                \"contactTags\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/contactTags\",\n                \"contactDeals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/contactDeals\",\n                \"deals\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/deals\",\n                \"fieldValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/fieldValues\",\n                \"geoIps\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/geoIps\",\n                \"notes\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/notes\",\n                \"organization\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/organization\",\n                \"plusAppend\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/plusAppend\",\n                \"trackingLogs\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/trackingLogs\",\n                \"scoreValues\": \"https://test-enterprise-13.staging.listfly.com/api/3/contacts/7/scoreValues\"\n            },\n            \"id\": \"7\",\n            \"organization\": null\n        }\n    ],\n    \"meta\": {\n        \"total\": \"6\",\n        \"page_input\": {\n            \"segmentid\": 0,\n            \"formid\": 0,\n            \"listid\": 0,\n            \"tagid\": 0,\n            \"limit\": 20,\n            \"offset\": 0,\n            \"search\": null,\n            \"sort\": null,\n            \"seriesid\": 0,\n            \"waitid\": 0,\n            \"status\": -1,\n            \"forceQuery\": 0,\n            \"cacheid\": \"522b5224f2007dca7483e08e7ebf5005\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "contacts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cdate": {
                                "type": "string",
                                "example": "2017-01-25T23:58:14-06:00"
                              },
                              "email": {
                                "type": "string",
                                "example": "janedoe@example.com"
                              },
                              "phone": {
                                "type": "string",
                                "example": "3120000000"
                              },
                              "firstName": {
                                "type": "string",
                                "example": "John"
                              },
                              "lastName": {
                                "type": "string",
                                "example": "Doe"
                              },
                              "orgid": {
                                "type": "string",
                                "example": "0"
                              },
                              "segmentio_id": {
                                "type": "string",
                                "example": ""
                              },
                              "bounced_hard": {
                                "type": "string",
                                "example": "0"
                              },
                              "bounced_soft": {
                                "type": "string",
                                "example": "0"
                              },
                              "bounced_date": {
                                "type": "string",
                                "example": "0000-00-00"
                              },
                              "ip": {
                                "type": "string",
                                "example": "0"
                              },
                              "ua": {
                                "type": "string",
                                "example": ""
                              },
                              "hash": {
                                "type": "string",
                                "example": "31e076c964f4262817f9ba302c96e1c6"
                              },
                              "socialdata_lastcheck": {
                                "type": "string",
                                "example": "0000-00-00 00:00:00"
                              },
                              "email_local": {
                                "type": "string",
                                "example": ""
                              },
                              "email_domain": {
                                "type": "string",
                                "example": ""
                              },
                              "sentcnt": {
                                "type": "string",
                                "example": "0"
                              },
                              "rating_tstamp": {
                                "type": "string",
                                "example": "0000-00-00"
                              },
                              "gravatar": {
                                "type": "string",
                                "example": "3"
                              },
                              "deleted": {
                                "type": "string",
                                "example": "0"
                              },
                              "adate": {
                                "type": "string",
                                "example": "2017-02-22 15:26:24"
                              },
                              "udate": {
                                "type": "string",
                                "example": "2017-01-25T23:58:14-06:00"
                              },
                              "edate": {
                                "type": "string",
                                "example": "2017-01-27 14:44:13"
                              },
                              "scoreValues": {
                                "type": "array"
                              },
                              "links": {
                                "type": "object",
                                "properties": {
                                  "bounceLogs": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/bounceLogs"
                                  },
                                  "contactAutomations": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/contactAutomations"
                                  },
                                  "contactData": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/contactData"
                                  },
                                  "contactGoals": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/contactGoals"
                                  },
                                  "contactLists": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/contactLists"
                                  },
                                  "contactLogs": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/contactLogs"
                                  },
                                  "contactTags": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/contactTags"
                                  },
                                  "contactDeals": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/contactDeals"
                                  },
                                  "deals": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/deals"
                                  },
                                  "fieldValues": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/fieldValues"
                                  },
                                  "geoIps": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/geoIps"
                                  },
                                  "notes": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/notes"
                                  },
                                  "organization": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/organization"
                                  },
                                  "plusAppend": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/plusAppend"
                                  },
                                  "trackingLogs": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/trackingLogs"
                                  },
                                  "scoreValues": {
                                    "type": "string",
                                    "example": "https://:account.api-us1.com/api/:version/contacts/68/scoreValues"
                                  }
                                }
                              },
                              "id": {
                                "type": "string",
                                "example": "68"
                              },
                              "organization": {}
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string",
                              "example": "2"
                            },
                            "page_input": {
                              "type": "object",
                              "properties": {
                                "segmentid": {},
                                "formid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "listid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "tagid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "limit": {
                                  "type": "integer",
                                  "example": 20,
                                  "default": 0
                                },
                                "offset": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "search": {},
                                "sort": {},
                                "seriesid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "waitid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "status": {
                                  "type": "integer",
                                  "example": -1,
                                  "default": 0
                                },
                                "forceQuery": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "cacheid": {
                                  "type": "string",
                                  "example": "895202850f4ca4144513c0962812f951"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "scoreValues": {
                          "type": "array"
                        },
                        "contacts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cdate": {
                                "type": "string",
                                "example": "2018-09-12T16:53:50-05:00"
                              },
                              "email": {
                                "type": "string",
                                "example": "adam@activecampaign.com"
                              },
                              "phone": {
                                "type": "string",
                                "example": ""
                              },
                              "firstName": {
                                "type": "string",
                                "example": ""
                              },
                              "lastName": {
                                "type": "string",
                                "example": ""
                              },
                              "orgid": {
                                "type": "string",
                                "example": "0"
                              },
                              "segmentio_id": {
                                "type": "string",
                                "example": ""
                              },
                              "bounced_hard": {
                                "type": "string",
                                "example": "0"
                              },
                              "bounced_soft": {
                                "type": "string",
                                "example": "0"
                              },
                              "bounced_date": {
                                "type": "string",
                                "example": "0000-00-00"
                              },
                              "ip": {
                                "type": "string",
                                "example": "0"
                              },
                              "ua": {
                                "type": "string",
                                "example": ""
                              },
                              "hash": {
                                "type": "string",
                                "example": "0d9c41ae7a4de516313673e2341f6003"
                              },
                              "socialdata_lastcheck": {
                                "type": "string",
                                "example": "0000-00-00 00:00:00"
                              },
                              "email_local": {
                                "type": "string",
                                "example": ""
                              },
                              "email_domain": {
                                "type": "string",
                                "example": ""
                              },
                              "sentcnt": {
                                "type": "string",
                                "example": "0"
                              },
                              "rating_tstamp": {
                                "type": "string",
                                "example": "0000-00-00"
                              },
                              "gravatar": {
                                "type": "string",
                                "example": "1"
                              },
                              "deleted": {
                                "type": "string",
                                "example": "0"
                              },
                              "anonymized": {
                                "type": "string",
                                "example": "0"
                              },
                              "udate": {
                                "type": "string",
                                "example": "2018-09-12T17:00:00-05:00"
                              },
                              "deleted_at": {
                                "type": "string",
                                "example": "0000-00-00 00:00:00"
                              },
                              "scoreValues": {
                                "type": "array"
                              },
                              "links": {
                                "type": "object",
                                "properties": {
                                  "bounceLogs": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/bounceLogs"
                                  },
                                  "contactAutomations": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactAutomations"
                                  },
                                  "contactData": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactData"
                                  },
                                  "contactGoals": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactGoals"
                                  },
                                  "contactLists": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactLists"
                                  },
                                  "contactLogs": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactLogs"
                                  },
                                  "contactTags": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactTags"
                                  },
                                  "contactDeals": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/contactDeals"
                                  },
                                  "deals": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/deals"
                                  },
                                  "fieldValues": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/fieldValues"
                                  },
                                  "geoIps": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/geoIps"
                                  },
                                  "notes": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/notes"
                                  },
                                  "organization": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/organization"
                                  },
                                  "plusAppend": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/plusAppend"
                                  },
                                  "trackingLogs": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/trackingLogs"
                                  },
                                  "scoreValues": {
                                    "type": "string",
                                    "example": "https://test-enterprise-13.staging.listfly.com/api/3/contacts/5/scoreValues"
                                  }
                                }
                              },
                              "id": {
                                "type": "string",
                                "example": "5"
                              },
                              "organization": {}
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string",
                              "example": "6"
                            },
                            "page_input": {
                              "type": "object",
                              "properties": {
                                "segmentid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "formid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "listid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "tagid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "limit": {
                                  "type": "integer",
                                  "example": 20,
                                  "default": 0
                                },
                                "offset": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "search": {},
                                "sort": {},
                                "seriesid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "waitid": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "status": {
                                  "type": "integer",
                                  "example": -1,
                                  "default": 0
                                },
                                "forceQuery": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "cacheid": {
                                  "type": "string",
                                  "example": "522b5224f2007dca7483e08e7ebf5005"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a contact",
        "description": "",
        "operationId": "create-a-new-contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact": {
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address of the new contact. Example: 'test@example.com'"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "First name of the new contact."
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of the new contact."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Phone number of the contact."
                      },
                      "fieldValues": {
                        "type": "array",
                        "description": "Contact's custom field values [{field id, value}]"
                      },
                      "orgid": {
                        "type": "integer",
                        "description": "(Deprecated) Please use Account-Contact end points",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "email"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "contact": {
                      "email": "johndoe@example.com",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "7223224241",
                      "fieldValues": [
                        {
                          "field": "1",
                          "value": "The Value for First Field"
                        },
                        {
                          "field": "6",
                          "value": "2008-01-20"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n      \"fieldValues\": [\n        {\n            \"contact\": \"113\",\n            \"field\": \"1\",\n            \"value\": \"The Value for First Field\",\n            \"cdate\": \"2020-08-01T10:54:59-05:00\",\n            \"udate\": \"2020-08-01T14:13:34-05:00\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/11797/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/11797/field\"\n            },\n            \"id\": \"11797\",\n            \"owner\": \"113\"\n        },\n        {\n            \"contact\": \"113\",\n            \"field\": \"6\",\n            \"value\": \"2008-01-20\",\n            \"cdate\": \"2020-08-01T10:54:59-05:00\",\n            \"udate\": \"2020-08-01T14:13:34-05:00\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/11798/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/11798/field\"\n            },\n            \"id\": \"11798\",\n            \"owner\": \"113\"\n        }\n    ],\n    \"contact\": {\n        \"email\": \"johndoe@example.com\",\n        \"cdate\": \"2018-09-28T13:50:41-05:00\",\n        \"udate\": \"2018-09-28T13:50:41-05:00\",\n        \"orgid\": \"\",\n        \"links\": {\n            \"bounceLogs\": \"https://:account.api-us1.com/api/:version/contacts/113/bounceLogs\",\n            \"contactAutomations\": \"https://:account.api-us1.com/api/:version/contacts/113/contactAutomations\",\n            \"contactData\": \"https://:account.api-us1.com/api/:version/contacts/113/contactData\",\n            \"contactGoals\": \"https://:account.api-us1.com/api/:version/contacts/113/contactGoals\",\n            \"contactLists\": \"https://:account.api-us1.com/api/:version/contacts/113/contactLists\",\n            \"contactLogs\": \"https://:account.api-us1.com/api/:version/contacts/113/contactLogs\",\n            \"contactTags\": \"https://:account.api-us1.com/api/:version/contacts/113/contactTags\",\n            \"contactDeals\": \"https://:account.api-us1.com/api/:version/contacts/113/contactDeals\",\n            \"deals\": \"https://:account.api-us1.com/api/:version/contacts/113/deals\",\n            \"fieldValues\": \"https://:account.api-us1.com/api/:version/contacts/113/fieldValues\",\n            \"geoIps\": \"https://:account.api-us1.com/api/:version/contacts/113/geoIps\",\n            \"notes\": \"https://:account.api-us1.com/api/:version/contacts/113/notes\",\n            \"organization\": \"https://:account.api-us1.com/api/:version/contacts/113/organization\",\n            \"plusAppend\": \"https://:account.api-us1.com/api/:version/contacts/113/plusAppend\",\n            \"trackingLogs\": \"https://:account.api-us1.com/api/:version/contacts/113/trackingLogs\",\n            \"scoreValues\": \"https://:account.api-us1.com/api/:version/contacts/113/scoreValues\"\n        },\n        \"id\": \"113\",\n        \"organization\": \"\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldValues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "113"
                          },
                          "field": {
                            "type": "string",
                            "example": "1"
                          },
                          "value": {
                            "type": "string",
                            "example": "The Value for First Field"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2020-08-01T10:54:59-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2020-08-01T14:13:34-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/11797/owner"
                              },
                              "field": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/11797/field"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "11797"
                          },
                          "owner": {
                            "type": "string",
                            "example": "113"
                          }
                        }
                      }
                    },
                    "contact": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-09-28T13:50:41-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2018-09-28T13:50:41-05:00"
                        },
                        "orgid": {
                          "type": "string",
                          "example": ""
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "bounceLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/bounceLogs"
                            },
                            "contactAutomations": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactAutomations"
                            },
                            "contactData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactData"
                            },
                            "contactGoals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactGoals"
                            },
                            "contactLists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactLists"
                            },
                            "contactLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactLogs"
                            },
                            "contactTags": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactTags"
                            },
                            "contactDeals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactDeals"
                            },
                            "deals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/deals"
                            },
                            "fieldValues": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/fieldValues"
                            },
                            "geoIps": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/geoIps"
                            },
                            "notes": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/notes"
                            },
                            "organization": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/organization"
                            },
                            "plusAppend": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/plusAppend"
                            },
                            "trackingLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/trackingLogs"
                            },
                            "scoreValues": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/scoreValues"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "113"
                        },
                        "organization": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\":\"No Result found for Subscriber with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 1"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"Email address already exists in the system\",\n            \"detail\": \"\",\n            \"code\": \"duplicate\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/email\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Email address already exists in the system"
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "duplicate"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/email"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/eventTrackingEvents/{eventName}": {
      "delete": {
        "summary": "Delete event (name only)",
        "description": "Remove an existing event tracking event (name only)",
        "operationId": "remove-event-name-only",
        "parameters": [
          {
            "name": "eventName",
            "in": "path",
            "description": "Name of event to delete. Spaces in names are allowed, but must be encoded (for example, \"my%20event\").",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/siteTracking": {
      "get": {
        "summary": "Retrieve status",
        "description": "Get site tracking status (enabled or disabled)",
        "operationId": "retrieve-site-tracking-status",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"siteTracking\": {\n    \"enabled\": true\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "siteTracking": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Enable/disable",
        "description": "Enable or disable site tracking",
        "operationId": "enable-disable-site-tracking",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteTracking": {
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether site tracking should be enabled"
                      }
                    },
                    "required": [
                      "enabled"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Enable": {
                  "value": {
                    "siteTracking": {
                      "enabled": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"siteTracking\": {\n    \"enabled\": true\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "siteTracking": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "text",
              "code": "{\n  \"siteTracking\": {\n    \"enabled\": false\n  }\n}",
              "name": "Disable"
            }
          ],
          "samples-languages": [
            "text"
          ]
        }
      }
    },
    "/siteTrackingDomains": {
      "get": {
        "summary": "List all whitelisted domains",
        "description": "List of all whitelisted site tracking domains",
        "operationId": "list-all-whitelisted-domains",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"siteTrackingDomains\": [\n    {\n      \"name\": \"example.com\"\n    }\n  ],\n  \"meta\": {\n    \"total\": 1\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "siteTrackingDomains": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "example.com"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add domain to whitelist",
        "description": "Add a domain to the site tracking whitelist",
        "operationId": "add-domain-to-whitelist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteTrackingDomain": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The domain name to add to the whitelist."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "siteTrackingDomain": {
                      "name": "example.com"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"siteTrackingDomain\": {\n        \"name\": \"example.com\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "siteTrackingDomain": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/siteTrackingDomains/{name}": {
      "delete": {
        "summary": "Remove domain from whitelist",
        "description": "Remove a domain from the site tracking whitelist",
        "operationId": "remove-domain-from-whitelist",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The domain name to remove from the whitelist",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealStages/{id}/deals": {
      "put": {
        "summary": "Move deals to another stage",
        "description": "Move all deals in one stage to another stage",
        "operationId": "move-deals-to-another-deal-stage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal stage's id whose deals are to be moved to another deal stage",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deal": {
                    "properties": {
                      "stage": {
                        "type": "string",
                        "description": "Target deal stage's id to move deals to"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "deal": {
                      "stage": "3"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"deals\": [\n    {\n      \"activitycount\": \"1\",\n      \"cdate\": \"2017-05-19T16:21:47-05:00\",\n      \"contact\": \"1\",\n      \"currency\": \"usd\",\n      \"edate\": \"0000-00-00 00:00:00\",\n      \"group\": \"1\",\n      \"hash\": \"6faccb2d\",\n      \"id\": \"1\",\n      \"links\": {\n        \"dealActivities\": \"/api/3/deals/1/dealActivities\",\n        \"contact\": \"/api/3/deals/1/contact\",\n        \"contactDeals\": \"/api/3/deals/1/contactDeals\",\n        \"group\": \"/api/3/deals/1/group\",\n        \"nextTask\": \"/api/3/deals/1/nextTask\",\n        \"notes\": \"/api/3/deals/1/notes\",\n        \"organization\": \"/api/3/deals/1/organization\",\n        \"owner\": \"/api/3/deals/1/owner\",\n        \"scoreValues\": \"/api/3/deals/1/scoreValues\",\n        \"stage\": \"/api/3/deals/1/stage\",\n        \"tasks\": \"/api/3/deals/1/tasks\"\n      },\n      \"mdate\": \"2017-05-19T16:21:47-05:00\",\n      \"nextTask\": null,\n      \"nextdealid\": \"2\",\n      \"nexttaskid\": \"0\",\n      \"organization\": null,\n      \"owner\": \"1\",\n      \"percent\": \"0\",\n      \"stage\": \"3\",\n      \"status\": \"0\",\n      \"title\": \"Another Deal\",\n      \"value\": \"10000\"\n    },\n    {\n      \"activitycount\": \"1\",\n      \"cdate\": \"2017-05-19T16:23:01-05:00\",\n      \"contact\": \"2\",\n      \"currency\": \"usd\",\n      \"edate\": \"0000-00-00 00:00:00\",\n      \"group\": \"1\",\n      \"hash\": \"fe7cc4f3\",\n      \"id\": \"2\",\n      \"links\": {\n        \"dealActivities\": \"/api/3/deals/2/dealActivities\",\n        \"contact\": \"/api/3/deals/2/contact\",\n        \"contactDeals\": \"/api/3/deals/2/contactDeals\",\n        \"group\": \"/api/3/deals/2/group\",\n        \"nextTask\": \"/api/3/deals/2/nextTask\",\n        \"notes\": \"/api/3/deals/2/notes\",\n        \"organization\": \"/api/3/deals/2/organization\",\n        \"owner\": \"/api/3/deals/2/owner\",\n        \"scoreValues\": \"/api/3/deals/2/scoreValues\",\n        \"stage\": \"/api/3/deals/2/stage\",\n        \"tasks\": \"/api/3/deals/2/tasks\"\n      },\n      \"mdate\": \"2017-05-19T16:23:01-05:00\",\n      \"nextTask\": null,\n      \"nextdealid\": \"1\",\n      \"nexttaskid\": \"0\",\n      \"organization\": null,\n      \"owner\": \"1\",\n      \"percent\": \"0\",\n      \"stage\": \"3\",\n      \"status\": \"0\",\n      \"title\": \"Urgent Deal\",\n      \"value\": \"10000\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "activitycount": {
                            "type": "string",
                            "example": "1"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-05-19T16:21:47-05:00"
                          },
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "edate": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "hash": {
                            "type": "string",
                            "example": "6faccb2d"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealActivities": {
                                "type": "string",
                                "example": "/api/3/deals/1/dealActivities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "/api/3/deals/1/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "/api/3/deals/1/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "/api/3/deals/1/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "/api/3/deals/1/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/api/3/deals/1/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "/api/3/deals/1/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/api/3/deals/1/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "/api/3/deals/1/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "/api/3/deals/1/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "/api/3/deals/1/tasks"
                              }
                            }
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2017-05-19T16:21:47-05:00"
                          },
                          "nextTask": {},
                          "nextdealid": {
                            "type": "string",
                            "example": "2"
                          },
                          "nexttaskid": {
                            "type": "string",
                            "example": "0"
                          },
                          "organization": {},
                          "owner": {
                            "type": "string",
                            "example": "1"
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "stage": {
                            "type": "string",
                            "example": "3"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "title": {
                            "type": "string",
                            "example": "Another Deal"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Different pipeline": {
                    "value": "{\n  \"errors\": [\n    {\n      \"detail\": \"Target stage does not belong to same pipeline\",\n      \"source\": {\n        \"pointer\": \"/data/attributes/stage\"\n      },\n      \"status\": 422,\n      \"title\": \"Invalid attribute\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "detail": {
                            "type": "string",
                            "example": "Target stage does not belong to same pipeline"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/stage"
                              }
                            }
                          },
                          "status": {
                            "type": "integer",
                            "example": 422,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Invalid attribute"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/deals/{id}/notes": {
      "post": {
        "summary": "Create a deal note",
        "description": "Create a new note for a deal",
        "operationId": "create-a-deal-note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Deal's id to assign new note to",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "properties": {
                      "note": {
                        "type": "string",
                        "description": "The Deal note's content"
                      }
                    },
                    "required": [
                      "note"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "note": {
                      "note": "Note for the deal"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"deals\": [\n    {\n      \"activitycount\": \"2\",\n      \"cdate\": \"2017-05-25T12:01:01-05:00\",\n      \"contact\": \"1\",\n      \"currency\": \"usd\",\n      \"edate\": null,\n      \"group\": \"1\",\n      \"hash\": \"e42436fc\",\n      \"id\": \"1\",\n      \"links\": {\n        \"dealActivities\": \"/api/3/deals/1/dealActivities\",\n        \"contact\": \"/api/3/deals/1/contact\",\n        \"contactDeals\": \"/api/3/deals/1/contactDeals\",\n        \"group\": \"/api/3/deals/1/group\",\n        \"nextTask\": \"/api/3/deals/1/nextTask\",\n        \"notes\": \"/api/3/deals/1/notes\",\n        \"organization\": \"/api/3/deals/1/organization\",\n        \"owner\": \"/api/3/deals/1/owner\",\n        \"scoreValues\": \"/api/3/deals/1/scoreValues\",\n        \"stage\": \"/api/3/deals/1/stage\",\n        \"tasks\": \"/api/3/deals/1/tasks\"\n      },\n      \"mdate\": \"2017-05-25T12:17:23-05:00\",\n      \"nextdate\": null,\n      \"nextdealid\": \"1\",\n      \"nexttaskid\": null,\n      \"organization\": null,\n      \"owner\": \"1\",\n      \"percent\": \"0\",\n      \"stage\": \"1\",\n      \"status\": \"0\",\n      \"title\": \"New Deal\",\n      \"value\": \"10000\"\n    }\n  ],\n  \"note\": {\n    \"cdate\": \"2017-05-31T09:54:30-05:00\",\n    \"id\": \"2\",\n    \"links\": {\n      \"activities\": \"/api/3/notes/2/activities\",\n      \"mentions\": \"/api/3/notes/2/mentions\",\n      \"notes\": \"/api/3/notes/2/notes\",\n      \"owner\": \"/api/3/notes/2/owner\",\n      \"user\": \"/api/3/notes/2/user\"\n    },\n    \"mdate\": \"2017-05-31T09:54:30-05:00\",\n    \"note\": \"Note for the deal\",\n    \"owner\": {\n      \"id\": \"1\",\n      \"type\": \"deal\"\n    },\n    \"relid\": \"1\",\n    \"reltype\": \"Deal\",\n    \"user\": \"1\",\n    \"userid\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "activitycount": {
                            "type": "string",
                            "example": "2"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-05-25T12:01:01-05:00"
                          },
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "edate": {},
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "hash": {
                            "type": "string",
                            "example": "e42436fc"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealActivities": {
                                "type": "string",
                                "example": "/api/3/deals/1/dealActivities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "/api/3/deals/1/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "/api/3/deals/1/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "/api/3/deals/1/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "/api/3/deals/1/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/api/3/deals/1/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "/api/3/deals/1/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/api/3/deals/1/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "/api/3/deals/1/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "/api/3/deals/1/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "/api/3/deals/1/tasks"
                              }
                            }
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2017-05-25T12:17:23-05:00"
                          },
                          "nextdate": {},
                          "nextdealid": {
                            "type": "string",
                            "example": "1"
                          },
                          "nexttaskid": {},
                          "organization": {},
                          "owner": {
                            "type": "string",
                            "example": "1"
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "stage": {
                            "type": "string",
                            "example": "1"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "title": {
                            "type": "string",
                            "example": "New Deal"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000"
                          }
                        }
                      }
                    },
                    "note": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2017-05-31T09:54:30-05:00"
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "activities": {
                              "type": "string",
                              "example": "/api/3/notes/2/activities"
                            },
                            "mentions": {
                              "type": "string",
                              "example": "/api/3/notes/2/mentions"
                            },
                            "notes": {
                              "type": "string",
                              "example": "/api/3/notes/2/notes"
                            },
                            "owner": {
                              "type": "string",
                              "example": "/api/3/notes/2/owner"
                            },
                            "user": {
                              "type": "string",
                              "example": "/api/3/notes/2/user"
                            }
                          }
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2017-05-31T09:54:30-05:00"
                        },
                        "note": {
                          "type": "string",
                          "example": "Note for the deal"
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "1"
                            },
                            "type": {
                              "type": "string",
                              "example": "deal"
                            }
                          }
                        },
                        "relid": {
                          "type": "string",
                          "example": "1"
                        },
                        "reltype": {
                          "type": "string",
                          "example": "Deal"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/deals/{id}/notes/{noteId}": {
      "put": {
        "summary": "Update a deal note",
        "description": "Update an existing note for a deal",
        "operationId": "update-a-deal-note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal's id to assign new note to",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "Deal note's id to update",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "properties": {
                      "note": {
                        "type": "string",
                        "description": "Deal note's content"
                      }
                    },
                    "required": [
                      "note"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "note": {
                      "note": "Update with more info"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"deals\": [\n    {\n      \"activitycount\": \"3\",\n      \"cdate\": \"2017-06-01T13:40:04-05:00\",\n      \"contact\": \"1\",\n      \"currency\": \"usd\",\n      \"edate\": \"0000-00-00 00:00:00\",\n      \"group\": \"1\",\n      \"hash\": \"5604d5b5\",\n      \"id\": \"1\",\n      \"links\": {\n        \"dealActivities\": \"/api/3/deals/1/dealActivities\",\n        \"contact\": \"/api/3/deals/1/contact\",\n        \"contactDeals\": \"/api/3/deals/1/contactDeals\",\n        \"group\": \"/api/3/deals/1/group\",\n        \"nextTask\": \"/api/3/deals/1/nextTask\",\n        \"notes\": \"/api/3/deals/1/notes\",\n        \"organization\": \"/api/3/deals/1/organization\",\n        \"owner\": \"/api/3/deals/1/owner\",\n        \"scoreValues\": \"/api/3/deals/1/scoreValues\",\n        \"stage\": \"/api/3/deals/1/stage\",\n        \"tasks\": \"/api/3/deals/1/tasks\"\n      },\n      \"mdate\": \"2017-06-01T13:41:57-05:00\",\n      \"nextTask\": \"1\",\n      \"nextdate\": \"2017-06-02T12:00:00-05:00\",\n      \"nextdealid\": \"1\",\n      \"nexttaskid\": \"1\",\n      \"organization\": null,\n      \"owner\": \"1\",\n      \"percent\": \"0\",\n      \"stage\": \"1\",\n      \"status\": \"0\",\n      \"title\": \"New deal\",\n      \"value\": \"10000\"\n    }\n  ],\n  \"note\": {\n    \"cdate\": \"2017-06-01T13:42:13-05:00\",\n    \"id\": \"2\",\n    \"links\": {\n      \"activities\": \"/api/3/notes/2/activities\",\n      \"mentions\": \"/api/3/notes/2/mentions\",\n      \"notes\": \"/api/3/notes/2/notes\",\n      \"owner\": \"/api/3/notes/2/owner\",\n      \"user\": \"/api/3/notes/2/user\"\n    },\n    \"mdate\": \"2017-06-01T13:42:13-05:00\",\n    \"note\": \"Update with more info\",\n    \"owner\": {\n      \"id\": \"1\",\n      \"type\": \"deal\"\n    },\n    \"relid\": \"1\",\n    \"reltype\": \"Deal\",\n    \"user\": \"1\",\n    \"userid\": \"1\"\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "activitycount": {
                            "type": "string",
                            "example": "3"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-06-01T13:40:04-05:00"
                          },
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "edate": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "hash": {
                            "type": "string",
                            "example": "5604d5b5"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealActivities": {
                                "type": "string",
                                "example": "/api/3/deals/1/dealActivities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "/api/3/deals/1/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "/api/3/deals/1/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "/api/3/deals/1/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "/api/3/deals/1/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/api/3/deals/1/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "/api/3/deals/1/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/api/3/deals/1/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "/api/3/deals/1/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "/api/3/deals/1/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "/api/3/deals/1/tasks"
                              }
                            }
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2017-06-01T13:41:57-05:00"
                          },
                          "nextTask": {
                            "type": "string",
                            "example": "1"
                          },
                          "nextdate": {
                            "type": "string",
                            "example": "2017-06-02T12:00:00-05:00"
                          },
                          "nextdealid": {
                            "type": "string",
                            "example": "1"
                          },
                          "nexttaskid": {
                            "type": "string",
                            "example": "1"
                          },
                          "organization": {},
                          "owner": {
                            "type": "string",
                            "example": "1"
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "stage": {
                            "type": "string",
                            "example": "1"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "title": {
                            "type": "string",
                            "example": "New deal"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000"
                          }
                        }
                      }
                    },
                    "note": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2017-06-01T13:42:13-05:00"
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "activities": {
                              "type": "string",
                              "example": "/api/3/notes/2/activities"
                            },
                            "mentions": {
                              "type": "string",
                              "example": "/api/3/notes/2/mentions"
                            },
                            "notes": {
                              "type": "string",
                              "example": "/api/3/notes/2/notes"
                            },
                            "owner": {
                              "type": "string",
                              "example": "/api/3/notes/2/owner"
                            },
                            "user": {
                              "type": "string",
                              "example": "/api/3/notes/2/user"
                            }
                          }
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2017-06-01T13:42:13-05:00"
                        },
                        "note": {
                          "type": "string",
                          "example": "Update with more info"
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "1"
                            },
                            "type": {
                              "type": "string",
                              "example": "deal"
                            }
                          }
                        },
                        "relid": {
                          "type": "string",
                          "example": "1"
                        },
                        "reltype": {
                          "type": "string",
                          "example": "Deal"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealTasktypes/{id}/dealTasks": {
      "put": {
        "summary": "Move tasks to another task type",
        "description": "Move tasks to a different task type",
        "operationId": "move-deal-tasks-to-another-deal-task-type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal task type's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealTask": {
                    "properties": {
                      "dealTasktype": {
                        "type": "string",
                        "description": "Deal task type's id to move deal tasks to"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealTask": {
                      "dealTasktype": "2"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealTasks\": [\n    {\n      \"automation\": null,\n      \"cdate\": \"2017-06-01T15:08:55-05:00\",\n      \"dealTasktype\": \"2\",\n      \"doneAutomation\": null,\n      \"donedate\": null,\n      \"duedate\": \"2017-06-02T12:00:00-05:00\",\n      \"duration\": \"0\",\n      \"edate\": \"2017-06-02T12:15:00-05:00\",\n      \"id\": \"1\",\n      \"links\": {\n        \"activities\": \"/api/3/dealTasks/1/activities\",\n        \"automation\": \"/api/3/dealTasks/1/automation\",\n        \"dealTasktype\": \"/api/3/dealTasks/1/dealTasktype\",\n        \"doneAutomation\": \"/api/3/dealTasks/1/doneAutomation\",\n        \"notes\": \"/api/3/dealTasks/1/notes\",\n        \"owner\": \"/api/3/dealTasks/1/owner\",\n        \"taskNotifications\": \"/api/3/dealTasks/1/taskNotifications\",\n        \"user\": \"/api/3/dealTasks/1/user\"\n      },\n      \"note\": \"Call Steve\",\n      \"owner\": {\n        \"id\": \"1\",\n        \"type\": \"deal\"\n      },\n      \"relid\": \"1\",\n      \"reltype\": \"Deal\",\n      \"status\": \"0\",\n      \"title\": \"\",\n      \"udate\": \"2017-06-01T15:08:55-05:00\",\n      \"user\": \"1\"\n    }\n  ],\n  \"deals\": [\n    {\n      \"activitycount\": \"2\",\n      \"cdate\": \"2017-06-01T15:08:41-05:00\",\n      \"contact\": \"1\",\n      \"currency\": \"usd\",\n      \"edate\": \"0000-00-00 00:00:00\",\n      \"group\": \"1\",\n      \"hash\": \"3abd127b\",\n      \"id\": \"1\",\n      \"links\": {\n        \"activities\": \"/api/3/deals/1/activities\",\n        \"contact\": \"/api/3/deals/1/contact\",\n        \"contactDeals\": \"/api/3/deals/1/contactDeals\",\n        \"group\": \"/api/3/deals/1/group\",\n        \"nextTask\": \"/api/3/deals/1/nextTask\",\n        \"notes\": \"/api/3/deals/1/notes\",\n        \"organization\": \"/api/3/deals/1/organization\",\n        \"owner\": \"/api/3/deals/1/owner\",\n        \"scoreValues\": \"/api/3/deals/1/scoreValues\",\n        \"stage\": \"/api/3/deals/1/stage\",\n        \"tasks\": \"/api/3/deals/1/tasks\"\n      },\n      \"mdate\": \"2017-06-01T15:08:55-05:00\",\n      \"nextTask\": \"1\",\n      \"nextdate\": \"2017-06-02T12:00:00-05:00\",\n      \"nextdealid\": \"1\",\n      \"nexttaskid\": \"1\",\n      \"organization\": null,\n      \"owner\": \"1\",\n      \"percent\": \"0\",\n      \"stage\": \"1\",\n      \"status\": \"0\",\n      \"title\": \"New deal\",\n      \"value\": \"10000\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealTasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "automation": {},
                          "cdate": {
                            "type": "string",
                            "example": "2017-06-01T15:08:55-05:00"
                          },
                          "dealTasktype": {
                            "type": "string",
                            "example": "2"
                          },
                          "doneAutomation": {},
                          "donedate": {},
                          "duedate": {
                            "type": "string",
                            "example": "2017-06-02T12:00:00-05:00"
                          },
                          "duration": {
                            "type": "string",
                            "example": "0"
                          },
                          "edate": {
                            "type": "string",
                            "example": "2017-06-02T12:15:00-05:00"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "activities": {
                                "type": "string",
                                "example": "/api/3/dealTasks/1/activities"
                              },
                              "automation": {
                                "type": "string",
                                "example": "/api/3/dealTasks/1/automation"
                              },
                              "dealTasktype": {
                                "type": "string",
                                "example": "/api/3/dealTasks/1/dealTasktype"
                              },
                              "doneAutomation": {
                                "type": "string",
                                "example": "/api/3/dealTasks/1/doneAutomation"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/api/3/dealTasks/1/notes"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/api/3/dealTasks/1/owner"
                              },
                              "taskNotifications": {
                                "type": "string",
                                "example": "/api/3/dealTasks/1/taskNotifications"
                              },
                              "user": {
                                "type": "string",
                                "example": "/api/3/dealTasks/1/user"
                              }
                            }
                          },
                          "note": {
                            "type": "string",
                            "example": "Call Steve"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "1"
                              },
                              "type": {
                                "type": "string",
                                "example": "deal"
                              }
                            }
                          },
                          "relid": {
                            "type": "string",
                            "example": "1"
                          },
                          "reltype": {
                            "type": "string",
                            "example": "Deal"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "title": {
                            "type": "string",
                            "example": ""
                          },
                          "udate": {
                            "type": "string",
                            "example": "2017-06-01T15:08:55-05:00"
                          },
                          "user": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "activitycount": {
                            "type": "string",
                            "example": "2"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2017-06-01T15:08:41-05:00"
                          },
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "edate": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "hash": {
                            "type": "string",
                            "example": "3abd127b"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "activities": {
                                "type": "string",
                                "example": "/api/3/deals/1/activities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "/api/3/deals/1/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "/api/3/deals/1/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "/api/3/deals/1/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "/api/3/deals/1/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/api/3/deals/1/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "/api/3/deals/1/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/api/3/deals/1/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "/api/3/deals/1/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "/api/3/deals/1/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "/api/3/deals/1/tasks"
                              }
                            }
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2017-06-01T15:08:55-05:00"
                          },
                          "nextTask": {
                            "type": "string",
                            "example": "1"
                          },
                          "nextdate": {
                            "type": "string",
                            "example": "2017-06-02T12:00:00-05:00"
                          },
                          "nextdealid": {
                            "type": "string",
                            "example": "1"
                          },
                          "nexttaskid": {
                            "type": "string",
                            "example": "1"
                          },
                          "organization": {},
                          "owner": {
                            "type": "string",
                            "example": "1"
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "stage": {
                            "type": "string",
                            "example": "1"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "title": {
                            "type": "string",
                            "example": "New deal"
                          },
                          "value": {
                            "type": "string",
                            "example": "10000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contactTags": {
      "post": {
        "summary": "Add a tag to contact",
        "description": "Create a contact tag object",
        "operationId": "create-contact-tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactTag": {
                    "properties": {
                      "contact": {
                        "type": "integer",
                        "description": "The id of the Contact",
                        "default": 1,
                        "format": "int32"
                      },
                      "tag": {
                        "type": "integer",
                        "description": "The id of the tag",
                        "default": 20,
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "contactTag": {
                      "contact": "1",
                      "tag": "20"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"contactTag\": {\n\t\t\"cdate\": \"2017-06-08T16:11:53-05:00\",\n\t\t\"contact\":\"1\",\n\t\t\"id\":\"1\",\n\t\t\"links\":{\n\t\t\t\"contact\":\"/1/contact\",\n\t\t\t\"tag\":\"/1/tag\"\n\t\t},\n\t\t\"tag\":\"20\"\n\t}\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactTag": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2017-06-08T16:11:53-05:00"
                        },
                        "contact": {
                          "type": "string",
                          "example": "1"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "contact": {
                              "type": "string",
                              "example": "/1/contact"
                            },
                            "tag": {
                              "type": "string",
                              "example": "/1/tag"
                            }
                          }
                        },
                        "tag": {
                          "type": "string",
                          "example": "20"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\":[\n    {\n      \"status\":404,\n      \"title\":\"Not Found\",\n      \"detail\":\"Contact not found\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          },
                          "detail": {
                            "type": "string",
                            "example": "Contact not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\":[\n    {\n      \"status\":422,\n      \"title\":\"Missing attribute\",\n      \"source\":{\n        \"pointer\":\"/data/attributes/contact\"\n      }\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 422,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Missing attribute"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/contact"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contactTags/{id}": {
      "delete": {
        "summary": "Remove a tag from a contact",
        "description": "Delete a contact tag object",
        "operationId": "remove-a-contacts-tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The contactTag id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\":\"No Result found for SubscriberTag with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for SubscriberTag with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}": {
      "get": {
        "summary": "Retrieve a contact",
        "description": "Retrieve an existing contact",
        "operationId": "get-contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"contactAutomations\": [\n    {\n      \"contact\": \"1\",\n      \"seriesid\": \"1\",\n      \"startid\": \"0\",\n      \"status\": \"0\",\n      \"adddate\": \"1976-10-16T23:23:09-05:00\",\n      \"remdate\": null,\n      \"timespan\": null,\n      \"lastblock\": \"0\",\n      \"lastdate\": \"1984-08-15T08:13:44-05:00\",\n      \"completedElements\": \"0\",\n      \"totalElements\": \"0\",\n      \"completed\": 0,\n      \"completeValue\": 100,\n      \"links\": {\n        \"automation\": \"https://:account.api-us1.com/api/:version/contactAutomations/1/automation\",\n        \"contact\": \"https://:account.api-us1.com/api/:version/contactAutomations/1/contact\",\n        \"contactGoals\": \"https://:account.api-us1.com/api/:version/contactAutomations/1/contactGoals\"\n      },\n      \"id\": \"1\",\n      \"automation\": \"1\"\n    }\n  ],\n  \"contactLists\": [\n    {\n      \"contact\": \"1\",\n      \"list\": \"1\",\n      \"form\": null,\n      \"seriesid\": \"0\",\n      \"sdate\": null,\n      \"udate\": null,\n      \"status\": \"1\",\n      \"responder\": \"1\",\n      \"sync\": \"0\",\n      \"unsubreason\": null,\n      \"campaign\": null,\n      \"message\": null,\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"ip4Sub\": \"0\",\n      \"sourceid\": \"0\",\n      \"autosyncLog\": null,\n      \"ip4_last\": \"0\",\n      \"ip4Unsub\": \"0\",\n      \"unsubscribeAutomation\": null,\n      \"links\": {\n        \"automation\": \"https://:account.api-us1.com/api/:version/contactLists/1/automation\",\n        \"list\": \"https://:account.api-us1.com/api/:version/contactLists/1/list\",\n        \"contact\": \"https://:account.api-us1.com/api/:version/contactLists/1/contact\",\n        \"form\": \"https://:account.api-us1.com/api/:version/contactLists/1/form\",\n        \"autosyncLog\": \"https://:account.api-us1.com/api/:version/contactLists/1/autosyncLog\",\n        \"campaign\": \"https://:account.api-us1.com/api/:version/contactLists/1/campaign\",\n        \"unsubscribeAutomation\": \"https://:account.api-us1.com/api/:version/contactLists/1/unsubscribeAutomation\",\n        \"message\": \"https://:account.api-us1.com/api/:version/contactLists/1/message\"\n      },\n      \"id\": \"1\",\n      \"automation\": null\n    }\n  ],\n  \"deals\": [\n    {\n      \"owner\": \"1\",\n      \"contact\": \"1\",\n      \"organization\": null,\n      \"group\": null,\n      \"title\": \"Consectetur omnis quo inventore molestiae ratione amet.\",\n      \"nexttaskid\": \"0\",\n      \"currency\": \"USD\",\n      \"status\": \"0\",\n      \"links\": {\n        \"activities\": \"https://:account.api-us1.com/api/:version/deals/1/activities\",\n        \"contact\": \"https://:account.api-us1.com/api/:version/deals/1/contact\",\n        \"contactDeals\": \"https://:account.api-us1.com/api/:version/deals/1/contactDeals\",\n        \"group\": \"https://:account.api-us1.com/api/:version/deals/1/group\",\n        \"nextTask\": \"https://:account.api-us1.com/api/:version/deals/1/nextTask\",\n        \"notes\": \"https://:account.api-us1.com/api/:version/deals/1/notes\",\n        \"organization\": \"https://:account.api-us1.com/api/:version/deals/1/organization\",\n        \"owner\": \"https://:account.api-us1.com/api/:version/deals/1/owner\",\n        \"scoreValues\": \"https://:account.api-us1.com/api/:version/deals/1/scoreValues\",\n        \"stage\": \"https://:account.api-us1.com/api/:version/deals/1/stage\",\n        \"tasks\": \"https://:account.api-us1.com/api/:version/deals/1/tasks\"\n      },\n      \"id\": \"1\",\n      \"nextTask\": null\n    }\n  ],\n  \"fieldValues\": [\n    {\n      \"contact\": \"1\",\n      \"field\": \"1\",\n      \"value\": null,\n      \"cdate\": \"1981-05-16T19:02:29-05:00\",\n      \"udate\": \"1975-11-08T10:31:45-06:00\",\n      \"links\": {\n        \"owner\": \"https://:account.api-us1.com/api/:version/fieldValues/1/owner\",\n        \"field\": \"https://:account.api-us1.com/api/:version/fieldValues/1/field\"\n      },\n      \"id\": \"1\",\n      \"owner\": \"1\"\n    }\n  ],\n  \"geoAddresses\": [\n    {\n      \"ip4\": \"823\",\n      \"country2\": \"AS\",\n      \"country\": \"Suriname\",\n      \"state\": \"KY\",\n      \"city\": \"North Arnoldomouth\",\n      \"zip\": \"38704-6592\",\n      \"area\": \"0\",\n      \"lat\": \"-70.160407\",\n      \"lon\": \"-102.229406\",\n      \"tz\": \"Europe/Chisinau\",\n      \"tstamp\": \"1972-03-16T07:26:58-06:00\",\n      \"links\": [\n        \n      ],\n      \"id\": \"1\"\n    }\n  ],\n  \"geoIps\": [\n    {\n      \"contact\": \"1\",\n      \"campaignid\": \"1\",\n      \"messageid\": \"1\",\n      \"geoaddrid\": \"1\",\n      \"ip4\": \"0\",\n      \"tstamp\": \"1988-08-05T11:50:51-05:00\",\n      \"geoAddress\": \"1\",\n      \"links\": {\n        \"geoAddress\": \"https://:account.api-us1.com/api/:version/geoIps/1/geoAddress\"\n      },\n      \"id\": \"1\"\n    }\n  ],\n  \"contact\": {\n    \"cdate\": \"2007-05-05T12:49:09-05:00\",\n    \"email\": \"selmer.koss@example.com\",\n    \"phone\": \"\",\n    \"firstName\": \"Charles\",\n    \"lastName\": \"Reynolds\",\n    \"orgid\": \"0\",\n    \"segmentio_id\": \"\",\n    \"bounced_hard\": \"0\",\n    \"bounced_soft\": \"0\",\n    \"bounced_date\": null,\n    \"ip\": \"0\",\n    \"ua\": null,\n    \"hash\": \"\",\n    \"socialdata_lastcheck\": null,\n    \"email_local\": \"\",\n    \"email_domain\": \"\",\n    \"sentcnt\": \"0\",\n    \"rating_tstamp\": null,\n    \"gravatar\": \"0\",\n    \"deleted\": \"0\",\n    \"adate\": null,\n    \"udate\": null,\n    \"edate\": null,\n    \"contactAutomations\": [\n      \"1\"\n    ],\n    \"contactLists\": [\n      \"1\"\n    ],\n    \"fieldValues\": [\n      \"1\"\n    ],\n    \"geoIps\": [\n      \"1\"\n    ],\n    \"deals\": [\n      \"1\"\n    ],\n    \"accountContacts\": [\n      \"1\"\n    ],\n    \"links\": {\n      \"bounceLogs\": \"/1/bounceLogs\",\n      \"contactAutomations\": \"/1/contactAutomations\",\n      \"contactData\": \"/1/contactData\",\n      \"contactGoals\": \"/1/contactGoals\",\n      \"contactLists\": \"/1/contactLists\",\n      \"contactLogs\": \"/1/contactLogs\",\n      \"contactTags\": \"/1/contactTags\",\n      \"contactDeals\": \"/1/contactDeals\",\n      \"deals\": \"/1/deals\",\n      \"fieldValues\": \"/1/fieldValues\",\n      \"geoIps\": \"/1/geoIps\",\n      \"notes\": \"/1/notes\",\n      \"organization\": \"/1/organization\",\n      \"plusAppend\": \"/1/plusAppend\",\n      \"trackingLogs\": \"/1/trackingLogs\",\n      \"scoreValues\": \"/1/scoreValues\"\n    },\n    \"id\": \"1\",\n    \"organization\": null\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactAutomations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "seriesid": {
                            "type": "string",
                            "example": "1"
                          },
                          "startid": {
                            "type": "string",
                            "example": "0"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "adddate": {
                            "type": "string",
                            "example": "1976-10-16T23:23:09-05:00"
                          },
                          "remdate": {},
                          "timespan": {},
                          "lastblock": {
                            "type": "string",
                            "example": "0"
                          },
                          "lastdate": {
                            "type": "string",
                            "example": "1984-08-15T08:13:44-05:00"
                          },
                          "completedElements": {
                            "type": "string",
                            "example": "0"
                          },
                          "totalElements": {
                            "type": "string",
                            "example": "0"
                          },
                          "completed": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "completeValue": {
                            "type": "integer",
                            "example": 100,
                            "default": 0
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "automation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactAutomations/1/automation"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactAutomations/1/contact"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactAutomations/1/contactGoals"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "automation": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "contactLists": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "list": {
                            "type": "string",
                            "example": "1"
                          },
                          "form": {},
                          "seriesid": {
                            "type": "string",
                            "example": "0"
                          },
                          "sdate": {},
                          "udate": {},
                          "status": {
                            "type": "string",
                            "example": "1"
                          },
                          "responder": {
                            "type": "string",
                            "example": "1"
                          },
                          "sync": {
                            "type": "string",
                            "example": "0"
                          },
                          "unsubreason": {},
                          "campaign": {},
                          "message": {},
                          "first_name": {
                            "type": "string",
                            "example": "John"
                          },
                          "last_name": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "ip4Sub": {
                            "type": "string",
                            "example": "0"
                          },
                          "sourceid": {
                            "type": "string",
                            "example": "0"
                          },
                          "autosyncLog": {},
                          "ip4_last": {
                            "type": "string",
                            "example": "0"
                          },
                          "ip4Unsub": {
                            "type": "string",
                            "example": "0"
                          },
                          "unsubscribeAutomation": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "automation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactLists/1/automation"
                              },
                              "list": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactLists/1/list"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactLists/1/contact"
                              },
                              "form": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactLists/1/form"
                              },
                              "autosyncLog": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactLists/1/autosyncLog"
                              },
                              "campaign": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactLists/1/campaign"
                              },
                              "unsubscribeAutomation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactLists/1/unsubscribeAutomation"
                              },
                              "message": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactLists/1/message"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "automation": {}
                        }
                      }
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "string",
                            "example": "1"
                          },
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "organization": {},
                          "group": {},
                          "title": {
                            "type": "string",
                            "example": "Consectetur omnis quo inventore molestiae ratione amet."
                          },
                          "nexttaskid": {
                            "type": "string",
                            "example": "0"
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "activities": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/activities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/deals/1/tasks"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "nextTask": {}
                        }
                      }
                    },
                    "fieldValues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "field": {
                            "type": "string",
                            "example": "1"
                          },
                          "value": {},
                          "cdate": {
                            "type": "string",
                            "example": "1981-05-16T19:02:29-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "1975-11-08T10:31:45-06:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/fieldValues/1/owner"
                              },
                              "field": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/fieldValues/1/field"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "owner": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "geoAddresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ip4": {
                            "type": "string",
                            "example": "823"
                          },
                          "country2": {
                            "type": "string",
                            "example": "AS"
                          },
                          "country": {
                            "type": "string",
                            "example": "Suriname"
                          },
                          "state": {
                            "type": "string",
                            "example": "KY"
                          },
                          "city": {
                            "type": "string",
                            "example": "North Arnoldomouth"
                          },
                          "zip": {
                            "type": "string",
                            "example": "38704-6592"
                          },
                          "area": {
                            "type": "string",
                            "example": "0"
                          },
                          "lat": {
                            "type": "string",
                            "example": "-70.160407"
                          },
                          "lon": {
                            "type": "string",
                            "example": "-102.229406"
                          },
                          "tz": {
                            "type": "string",
                            "example": "Europe/Chisinau"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "1972-03-16T07:26:58-06:00"
                          },
                          "links": {
                            "type": "array"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "geoIps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "campaignid": {
                            "type": "string",
                            "example": "1"
                          },
                          "messageid": {
                            "type": "string",
                            "example": "1"
                          },
                          "geoaddrid": {
                            "type": "string",
                            "example": "1"
                          },
                          "ip4": {
                            "type": "string",
                            "example": "0"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "1988-08-05T11:50:51-05:00"
                          },
                          "geoAddress": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "geoAddress": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/geoIps/1/geoAddress"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "contact": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2007-05-05T12:49:09-05:00"
                        },
                        "email": {
                          "type": "string",
                          "example": "selmer.koss@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": ""
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Charles"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Reynolds"
                        },
                        "orgid": {
                          "type": "string",
                          "example": "0"
                        },
                        "segmentio_id": {
                          "type": "string",
                          "example": ""
                        },
                        "bounced_hard": {
                          "type": "string",
                          "example": "0"
                        },
                        "bounced_soft": {
                          "type": "string",
                          "example": "0"
                        },
                        "bounced_date": {},
                        "ip": {
                          "type": "string",
                          "example": "0"
                        },
                        "ua": {},
                        "hash": {
                          "type": "string",
                          "example": ""
                        },
                        "socialdata_lastcheck": {},
                        "email_local": {
                          "type": "string",
                          "example": ""
                        },
                        "email_domain": {
                          "type": "string",
                          "example": ""
                        },
                        "sentcnt": {
                          "type": "string",
                          "example": "0"
                        },
                        "rating_tstamp": {},
                        "gravatar": {
                          "type": "string",
                          "example": "0"
                        },
                        "deleted": {
                          "type": "string",
                          "example": "0"
                        },
                        "adate": {},
                        "udate": {},
                        "edate": {},
                        "contactAutomations": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "contactLists": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "fieldValues": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "geoIps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "deals": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "accountContacts": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "bounceLogs": {
                              "type": "string",
                              "example": "/1/bounceLogs"
                            },
                            "contactAutomations": {
                              "type": "string",
                              "example": "/1/contactAutomations"
                            },
                            "contactData": {
                              "type": "string",
                              "example": "/1/contactData"
                            },
                            "contactGoals": {
                              "type": "string",
                              "example": "/1/contactGoals"
                            },
                            "contactLists": {
                              "type": "string",
                              "example": "/1/contactLists"
                            },
                            "contactLogs": {
                              "type": "string",
                              "example": "/1/contactLogs"
                            },
                            "contactTags": {
                              "type": "string",
                              "example": "/1/contactTags"
                            },
                            "contactDeals": {
                              "type": "string",
                              "example": "/1/contactDeals"
                            },
                            "deals": {
                              "type": "string",
                              "example": "/1/deals"
                            },
                            "fieldValues": {
                              "type": "string",
                              "example": "/1/fieldValues"
                            },
                            "geoIps": {
                              "type": "string",
                              "example": "/1/geoIps"
                            },
                            "notes": {
                              "type": "string",
                              "example": "/1/notes"
                            },
                            "organization": {
                              "type": "string",
                              "example": "/1/organization"
                            },
                            "plusAppend": {
                              "type": "string",
                              "example": "/1/plusAppend"
                            },
                            "trackingLogs": {
                              "type": "string",
                              "example": "/1/trackingLogs"
                            },
                            "scoreValues": {
                              "type": "string",
                              "example": "/1/scoreValues"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "organization": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\":\"No Result found for Subscriber with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a contact",
        "description": "Delete an existing contact",
        "operationId": "delete-contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The contact id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\":\"No result found for contact with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No result found for contact with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a contact",
        "description": "",
        "operationId": "update-a-contact-new",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact": {
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Contact's email address"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "Contact's first name"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Contact's last name"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Contact's phone number"
                      },
                      "fieldValues": {
                        "type": "array",
                        "description": "Contact's custom field values [{field, value}]"
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "(Deprecated) Please use the the Delete endpoint"
                      },
                      "orgid": {
                        "type": "integer",
                        "description": "(Deprecated) Please use Account-Contact end points",
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "contact": {
                      "email": "johndoe@example.com",
                      "firstName": "John",
                      "lastName": "Doe",
                      "fieldValues": [
                        {
                          "field": "1",
                          "value": "The Value for First Field"
                        },
                        {
                          "field": "6",
                          "value": "2008-01-20"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldValues\": [\n        {\n            \"contact\": \"113\",\n            \"field\": \"1\",\n            \"value\": \"The Value for First Field\",\n            \"cdate\": \"2020-08-01T10:54:59-05:00\",\n            \"udate\": \"2020-08-01T14:13:34-05:00\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/11797/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/11797/field\"\n            },\n            \"id\": \"11797\",\n            \"owner\": \"113\"\n        },\n        {\n            \"contact\": \"113\",\n            \"field\": \"6\",\n            \"value\": \"2008-01-20\",\n            \"cdate\": \"2020-08-01T10:54:59-05:00\",\n            \"udate\": \"2020-08-01T14:13:34-05:00\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/11798/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/11798/field\"\n            },\n            \"id\": \"11798\",\n            \"owner\": \"113\"\n        }\n    ],\n    \"contact\": {\n        \"cdate\": \"2018-09-28T13:50:41-05:00\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"orgid\": \"0\",\n        \"segmentio_id\": \"\",\n        \"bounced_hard\": \"0\",\n        \"bounced_soft\": \"0\",\n        \"bounced_date\": null,\n        \"ip\": \"0\",\n        \"ua\": null,\n        \"hash\": \"8309146b50af1ed5f9cb40c7465a0315\",\n        \"socialdata_lastcheck\": null,\n        \"email_local\": \"\",\n        \"email_domain\": \"\",\n        \"sentcnt\": \"0\",\n        \"rating_tstamp\": null,\n        \"gravatar\": \"0\",\n        \"deleted\": \"0\",\n        \"anonymized\": \"0\",\n        \"adate\": null,\n        \"udate\": \"2018-09-28T13:55:59-05:00\",\n        \"edate\": null,\n        \"deleted_at\": null,\n        \"created_utc_timestamp\": \"2018-09-28 13:50:41\",\n        \"updated_utc_timestamp\": \"2018-09-28 13:50:41\",\n        \"links\": {\n            \"bounceLogs\": \"https://:account.api-us1.com/api/:version/contacts/113/bounceLogs\",\n            \"contactAutomations\": \"https://:account.api-us1.com/api/:version/contacts/113/contactAutomations\",\n            \"contactData\": \"https://:account.api-us1.com/api/:version/contacts/113/contactData\",\n            \"contactGoals\": \"https://:account.api-us1.com/api/:version/contacts/113/contactGoals\",\n            \"contactLists\": \"https://:account.api-us1.com/api/:version/contacts/113/contactLists\",\n            \"contactLogs\": \"https://:account.api-us1.com/api/:version/contacts/113/contactLogs\",\n            \"contactTags\": \"https://:account.api-us1.com/api/:version/contacts/113/contactTags\",\n            \"contactDeals\": \"https://:account.api-us1.com/api/:version/contacts/113/contactDeals\",\n            \"deals\": \"https://:account.api-us1.com/api/:version/contacts/113/deals\",\n            \"fieldValues\": \"https://:account.api-us1.com/api/:version/contacts/113/fieldValues\",\n            \"geoIps\": \"https://:account.api-us1.com/api/:version/contacts/113/geoIps\",\n            \"notes\": \"https://:account.api-us1.com/api/:version/contacts/113/notes\",\n            \"organization\": \"https://:account.api-us1.com/api/:version/contacts/113/organization\",\n            \"plusAppend\": \"https://:account.api-us1.com/api/:version/contacts/113/plusAppend\",\n            \"trackingLogs\": \"https://:account.api-us1.com/api/:version/contacts/113/trackingLogs\",\n            \"scoreValues\": \"https://:account.api-us1.com/api/:version/contacts/113/scoreValues\"\n        },\n        \"id\": \"113\",\n        \"organization\": null\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldValues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "113"
                          },
                          "field": {
                            "type": "string",
                            "example": "1"
                          },
                          "value": {
                            "type": "string",
                            "example": "The Value for First Field"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2020-08-01T10:54:59-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2020-08-01T14:13:34-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/11797/owner"
                              },
                              "field": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/11797/field"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "11797"
                          },
                          "owner": {
                            "type": "string",
                            "example": "113"
                          }
                        }
                      }
                    },
                    "contact": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2018-09-28T13:50:41-05:00"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": ""
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "orgid": {
                          "type": "string",
                          "example": "0"
                        },
                        "segmentio_id": {
                          "type": "string",
                          "example": ""
                        },
                        "bounced_hard": {
                          "type": "string",
                          "example": "0"
                        },
                        "bounced_soft": {
                          "type": "string",
                          "example": "0"
                        },
                        "bounced_date": {},
                        "ip": {
                          "type": "string",
                          "example": "0"
                        },
                        "ua": {},
                        "hash": {
                          "type": "string",
                          "example": "8309146b50af1ed5f9cb40c7465a0315"
                        },
                        "socialdata_lastcheck": {},
                        "email_local": {
                          "type": "string",
                          "example": ""
                        },
                        "email_domain": {
                          "type": "string",
                          "example": ""
                        },
                        "sentcnt": {
                          "type": "string",
                          "example": "0"
                        },
                        "rating_tstamp": {},
                        "gravatar": {
                          "type": "string",
                          "example": "0"
                        },
                        "deleted": {
                          "type": "string",
                          "example": "0"
                        },
                        "anonymized": {
                          "type": "string",
                          "example": "0"
                        },
                        "adate": {},
                        "udate": {
                          "type": "string",
                          "example": "2018-09-28T13:55:59-05:00"
                        },
                        "edate": {},
                        "deleted_at": {},
                        "created_utc_timestamp": {
                          "type": "string",
                          "example": "2018-09-28 13:50:41"
                        },
                        "updated_utc_timestamp": {
                          "type": "string",
                          "example": "2018-09-28 13:50:41"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "bounceLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/bounceLogs"
                            },
                            "contactAutomations": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactAutomations"
                            },
                            "contactData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactData"
                            },
                            "contactGoals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactGoals"
                            },
                            "contactLists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactLists"
                            },
                            "contactLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactLogs"
                            },
                            "contactTags": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactTags"
                            },
                            "contactDeals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/contactDeals"
                            },
                            "deals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/deals"
                            },
                            "fieldValues": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/fieldValues"
                            },
                            "geoIps": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/geoIps"
                            },
                            "notes": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/notes"
                            },
                            "organization": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/organization"
                            },
                            "plusAppend": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/plusAppend"
                            },
                            "trackingLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/trackingLogs"
                            },
                            "scoreValues": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contacts/113/scoreValues"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "113"
                        },
                        "organization": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/siteTracking/code": {
      "get": {
        "summary": "Retrieve site tracking code",
        "description": "Get site tracking code",
        "operationId": "retrieve-site-tracking-code",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "<script type=\"text/javascript\">\n    (function(e,t,o,n,p,r,i){e.prismGlobalObjectAlias=n;e.pgo=e.pgo||function(){(e.pgo.q=e.pgo.q||[]).push(arguments)};e.pgo.l=(new Date).getTime();r=t.createElement(\"script\");r.src=o;r.async=true;i=t.getElementsByTagName(\"script\")[0];i.parentNode.insertBefore(r,i)})(window,document,\"https://prism.app-us1.com/prism.js\",\"pgo\");\n\n    pgo('setAccount', YOUR_ACCOUNT_ID);\n    pgo('setTrackByDefault', true);\n\n    pgo('process');\n</script>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/emailActivities": {
      "get": {
        "summary": "List all email activities",
        "description": "",
        "operationId": "list-all-email-activities",
        "parameters": [
          {
            "name": "filters[subscriberid]",
            "in": "query",
            "description": "Set this parameter to return only email activities belonging to a given subscriber.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[dealId]",
            "in": "query",
            "description": "Set this parameter to return only email activities belonging to a given deal.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/addressLists/{id}": {
      "delete": {
        "summary": "Delete address associated with a specific list",
        "description": "",
        "operationId": "delete-an-addresslist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the AddressList to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for AddressList with id 6\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for AddressList with id 6"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/campaigns": {
      "get": {
        "summary": "List all campaigns",
        "description": "",
        "operationId": "list-all-campaigns",
        "parameters": [
          {
            "name": "orders[sdate]",
            "in": "query",
            "description": "Order campaigns by send date",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "name": "orders[ldate]",
            "in": "query",
            "description": "Order campaigns by last send date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[seriesid]",
            "in": "query",
            "description": "Filter to return the campaigns from the targeted automationId/seriesIds",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"campaigns\": [\n        {\n            \"type\": \"single\",\n            \"userid\": \"1\",\n            \"segmentid\": \"0\",\n            \"bounceid\": \"-1\",\n            \"realcid\": \"0\",\n            \"sendid\": \"0\",\n            \"threadid\": \"0\",\n            \"seriesid\": \"0\",\n            \"formid\": \"1\",\n            \"basetemplateid\": \"90a1d1ab6ad33e95708caf6472dc1724f698c694\",\n            \"basemessageid\": \"0\",\n            \"addressid\": \"0\",\n            \"source\": \"web\",\n            \"name\": \"Opt In Email\",\n            \"cdate\": \"2018-08-17T13:47:31-05:00\",\n            \"mdate\": \"2018-08-17T13:47:31-05:00\",\n            \"sdate\": null,\n            \"ldate\": null,\n            \"send_amt\": \"0\",\n            \"total_amt\": \"0\",\n            \"opens\": \"0\",\n            \"uniqueopens\": \"0\",\n            \"linkclicks\": \"0\",\n            \"uniquelinkclicks\": \"0\",\n            \"subscriberclicks\": \"0\",\n            \"forwards\": \"0\",\n            \"uniqueforwards\": \"0\",\n            \"hardbounces\": \"0\",\n            \"softbounces\": \"0\",\n            \"unsubscribes\": \"0\",\n            \"unsubreasons\": \"0\",\n            \"updates\": \"0\",\n            \"socialshares\": \"0\",\n            \"replies\": \"0\",\n            \"uniquereplies\": \"0\",\n            \"status\": \"0\",\n            \"public\": \"1\",\n            \"mail_transfer\": \"0\",\n            \"mail_send\": \"0\",\n            \"mail_cleanup\": \"0\",\n            \"mailer_log_file\": \"0\",\n            \"tracklinks\": \"all\",\n            \"tracklinksanalytics\": \"0\",\n            \"trackreads\": \"1\",\n            \"trackreadsanalytics\": \"1\",\n            \"analytics_campaign_name\": \"\",\n            \"tweet\": \"0\",\n            \"facebook\": \"0\",\n            \"survey\": \"\",\n            \"embed_images\": \"0\",\n            \"htmlunsub\": \"0\",\n            \"textunsub\": \"0\",\n            \"htmlunsubdata\": null,\n            \"textunsubdata\": null,\n            \"recurring\": \"day1\",\n            \"willrecur\": \"0\",\n            \"split_type\": \"even\",\n            \"split_content\": \"0\",\n            \"split_offset\": \"2\",\n            \"split_offset_type\": \"day\",\n            \"split_winner_messageid\": \"0\",\n            \"split_winner_awaiting\": \"0\",\n            \"responder_offset\": \"0\",\n            \"responder_type\": \"subscribe\",\n            \"responder_existing\": \"0\",\n            \"reminder_field\": \"sdate\",\n            \"reminder_format\": null,\n            \"reminder_type\": \"month_day\",\n            \"reminder_offset\": \"0\",\n            \"reminder_offset_type\": \"day\",\n            \"reminder_offset_sign\": \"+\",\n            \"reminder_last_cron_run\": null,\n            \"activerss_interval\": \"day1\",\n            \"activerss_url\": null,\n            \"activerss_items\": \"10\",\n            \"ip4\": \"643992596\",\n            \"laststep\": \"designer\",\n            \"managetext\": \"0\",\n            \"schedule\": \"0\",\n            \"scheduleddate\": null,\n            \"waitpreview\": \"0\",\n            \"deletestamp\": null,\n            \"replysys\": \"0\",\n            \"links\": {\n                \"user\": \"https://:account.api-us1.com/api/3/campaigns/1/user\",\n                \"automation\": \"https://:account.api-us1.com/api/3/campaigns/1/automation\",\n                \"campaignMessage\": \"https://:account.api-us1.com/api/3/campaigns/1/campaignMessage\",\n                \"campaignMessages\": \"https://:account.api-us1.com/api/3/campaigns/1/campaignMessages\",\n                \"links\": \"https://:account.api-us1.com/api/3/campaigns/1/links\",\n                \"campaignLists\": \"https://:account.api-us1.com/api/3/campaigns/1/campaignLists\"\n            },\n            \"id\": \"1\",\n            \"user\": \"1\",\n            \"automation\": null\n        }\n    ],\n    \"meta\": {\n        \"total\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "campaigns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "single"
                          },
                          "userid": {
                            "type": "string",
                            "example": "1"
                          },
                          "segmentid": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounceid": {
                            "type": "string",
                            "example": "-1"
                          },
                          "realcid": {
                            "type": "string",
                            "example": "0"
                          },
                          "sendid": {
                            "type": "string",
                            "example": "0"
                          },
                          "threadid": {
                            "type": "string",
                            "example": "0"
                          },
                          "seriesid": {
                            "type": "string",
                            "example": "0"
                          },
                          "formid": {
                            "type": "string",
                            "example": "1"
                          },
                          "basetemplateid": {
                            "type": "string",
                            "example": "90a1d1ab6ad33e95708caf6472dc1724f698c694"
                          },
                          "basemessageid": {
                            "type": "string",
                            "example": "0"
                          },
                          "addressid": {
                            "type": "string",
                            "example": "0"
                          },
                          "source": {
                            "type": "string",
                            "example": "web"
                          },
                          "name": {
                            "type": "string",
                            "example": "Opt In Email"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-17T13:47:31-05:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2018-08-17T13:47:31-05:00"
                          },
                          "sdate": {},
                          "ldate": {},
                          "send_amt": {
                            "type": "string",
                            "example": "0"
                          },
                          "total_amt": {
                            "type": "string",
                            "example": "0"
                          },
                          "opens": {
                            "type": "string",
                            "example": "0"
                          },
                          "uniqueopens": {
                            "type": "string",
                            "example": "0"
                          },
                          "linkclicks": {
                            "type": "string",
                            "example": "0"
                          },
                          "uniquelinkclicks": {
                            "type": "string",
                            "example": "0"
                          },
                          "subscriberclicks": {
                            "type": "string",
                            "example": "0"
                          },
                          "forwards": {
                            "type": "string",
                            "example": "0"
                          },
                          "uniqueforwards": {
                            "type": "string",
                            "example": "0"
                          },
                          "hardbounces": {
                            "type": "string",
                            "example": "0"
                          },
                          "softbounces": {
                            "type": "string",
                            "example": "0"
                          },
                          "unsubscribes": {
                            "type": "string",
                            "example": "0"
                          },
                          "unsubreasons": {
                            "type": "string",
                            "example": "0"
                          },
                          "updates": {
                            "type": "string",
                            "example": "0"
                          },
                          "socialshares": {
                            "type": "string",
                            "example": "0"
                          },
                          "replies": {
                            "type": "string",
                            "example": "0"
                          },
                          "uniquereplies": {
                            "type": "string",
                            "example": "0"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "public": {
                            "type": "string",
                            "example": "1"
                          },
                          "mail_transfer": {
                            "type": "string",
                            "example": "0"
                          },
                          "mail_send": {
                            "type": "string",
                            "example": "0"
                          },
                          "mail_cleanup": {
                            "type": "string",
                            "example": "0"
                          },
                          "mailer_log_file": {
                            "type": "string",
                            "example": "0"
                          },
                          "tracklinks": {
                            "type": "string",
                            "example": "all"
                          },
                          "tracklinksanalytics": {
                            "type": "string",
                            "example": "0"
                          },
                          "trackreads": {
                            "type": "string",
                            "example": "1"
                          },
                          "trackreadsanalytics": {
                            "type": "string",
                            "example": "1"
                          },
                          "analytics_campaign_name": {
                            "type": "string",
                            "example": ""
                          },
                          "tweet": {
                            "type": "string",
                            "example": "0"
                          },
                          "facebook": {
                            "type": "string",
                            "example": "0"
                          },
                          "survey": {
                            "type": "string",
                            "example": ""
                          },
                          "embed_images": {
                            "type": "string",
                            "example": "0"
                          },
                          "htmlunsub": {
                            "type": "string",
                            "example": "0"
                          },
                          "textunsub": {
                            "type": "string",
                            "example": "0"
                          },
                          "htmlunsubdata": {},
                          "textunsubdata": {},
                          "recurring": {
                            "type": "string",
                            "example": "day1"
                          },
                          "willrecur": {
                            "type": "string",
                            "example": "0"
                          },
                          "split_type": {
                            "type": "string",
                            "example": "even"
                          },
                          "split_content": {
                            "type": "string",
                            "example": "0"
                          },
                          "split_offset": {
                            "type": "string",
                            "example": "2"
                          },
                          "split_offset_type": {
                            "type": "string",
                            "example": "day"
                          },
                          "split_winner_messageid": {
                            "type": "string",
                            "example": "0"
                          },
                          "split_winner_awaiting": {
                            "type": "string",
                            "example": "0"
                          },
                          "responder_offset": {
                            "type": "string",
                            "example": "0"
                          },
                          "responder_type": {
                            "type": "string",
                            "example": "subscribe"
                          },
                          "responder_existing": {
                            "type": "string",
                            "example": "0"
                          },
                          "reminder_field": {
                            "type": "string",
                            "example": "sdate"
                          },
                          "reminder_format": {},
                          "reminder_type": {
                            "type": "string",
                            "example": "month_day"
                          },
                          "reminder_offset": {
                            "type": "string",
                            "example": "0"
                          },
                          "reminder_offset_type": {
                            "type": "string",
                            "example": "day"
                          },
                          "reminder_offset_sign": {
                            "type": "string",
                            "example": "+"
                          },
                          "reminder_last_cron_run": {},
                          "activerss_interval": {
                            "type": "string",
                            "example": "day1"
                          },
                          "activerss_url": {},
                          "activerss_items": {
                            "type": "string",
                            "example": "10"
                          },
                          "ip4": {
                            "type": "string",
                            "example": "643992596"
                          },
                          "laststep": {
                            "type": "string",
                            "example": "designer"
                          },
                          "managetext": {
                            "type": "string",
                            "example": "0"
                          },
                          "schedule": {
                            "type": "string",
                            "example": "0"
                          },
                          "scheduleddate": {},
                          "waitpreview": {
                            "type": "string",
                            "example": "0"
                          },
                          "deletestamp": {},
                          "replysys": {
                            "type": "string",
                            "example": "0"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/campaigns/1/user"
                              },
                              "automation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/campaigns/1/automation"
                              },
                              "campaignMessage": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/campaigns/1/campaignMessage"
                              },
                              "campaignMessages": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/campaigns/1/campaignMessages"
                              },
                              "links": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/campaigns/1/links"
                              },
                              "campaignLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/campaigns/1/campaignLists"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "user": {
                            "type": "string",
                            "example": "1"
                          },
                          "automation": {}
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/contactAutomations": {
      "get": {
        "summary": "List all automations the contact is in",
        "description": "",
        "operationId": "list-all-contactautomations-for-contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact to receive automations for",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactAutomations\": [\n        {\n            \"contact\": \"6\",\n            \"seriesid\": \"2\",\n            \"startid\": \"0\",\n            \"status\": \"2\",\n            \"batchid\": \"completed\",\n            \"adddate\": \"2022-03-01T08:51:57-06:00\",\n            \"remdate\": \"2022-03-01T08:51:58-06:00\",\n            \"timespan\": \"1\",\n            \"lastblock\": \"5\",\n            \"lastlogid\": \"0\",\n            \"lastdate\": \"2022-03-01T08:51:58-06:00\",\n            \"in_als\": \"3\",\n            \"completedElements\": 0,\n            \"totalElements\": 3,\n            \"completed\": 1,\n            \"completeValue\": 100,\n            \"links\": {\n                \"automation\": \"https://:account.api-us1.com/api/3/contactAutomations/6/automation\",\n                \"contact\": \"https://:account.api-us1.com/api/3/contactAutomations/6/contact\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/3/contactAutomations/6/contactGoals\",\n                \"automationLogs\": \"https://:account.api-us1.com/api/3/contactAutomations/6/automationLogs\"\n            },\n            \"id\": \"6\",\n            \"automation\": \"2\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactAutomations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "6"
                          },
                          "seriesid": {
                            "type": "string",
                            "example": "2"
                          },
                          "startid": {
                            "type": "string",
                            "example": "0"
                          },
                          "status": {
                            "type": "string",
                            "example": "2"
                          },
                          "batchid": {
                            "type": "string",
                            "example": "completed"
                          },
                          "adddate": {
                            "type": "string",
                            "example": "2022-03-01T08:51:57-06:00"
                          },
                          "remdate": {
                            "type": "string",
                            "example": "2022-03-01T08:51:58-06:00"
                          },
                          "timespan": {
                            "type": "string",
                            "example": "1"
                          },
                          "lastblock": {
                            "type": "string",
                            "example": "5"
                          },
                          "lastlogid": {
                            "type": "string",
                            "example": "0"
                          },
                          "lastdate": {
                            "type": "string",
                            "example": "2022-03-01T08:51:58-06:00"
                          },
                          "in_als": {
                            "type": "string",
                            "example": "3"
                          },
                          "completedElements": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "totalElements": {
                            "type": "integer",
                            "example": 3,
                            "default": 0
                          },
                          "completed": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "completeValue": {
                            "type": "integer",
                            "example": 100,
                            "default": 0
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "automation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactAutomations/6/automation"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactAutomations/6/contact"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactAutomations/6/contactGoals"
                              },
                              "automationLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactAutomations/6/automationLogs"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "6"
                          },
                          "automation": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contactAutomations/{id}": {
      "get": {
        "summary": "Retrieve an automation a contact is in",
        "description": "",
        "operationId": "retrieve-a-contactautomation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contactAutomation to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactAutomation\": {\n        \"contact\": \"110\",\n        \"seriesid\": \"2\",\n        \"startid\": \"0\",\n        \"status\": \"2\",\n        \"batchid\": null,\n        \"adddate\": \"2018-09-19T09:44:26-05:00\",\n        \"remdate\": \"2018-09-19T09:44:26-05:00\",\n        \"timespan\": \"0\",\n        \"lastblock\": \"5\",\n        \"lastlogid\": \"2\",\n        \"lastdate\": \"2018-09-19T09:44:26-05:00\",\n        \"completedElements\": \"1\",\n        \"totalElements\": \"2\",\n        \"completed\": 1,\n        \"completeValue\": 100,\n        \"links\": {\n            \"automation\": \"https://:account.api-us1.com/api/:version/contactAutomations/2/automation\",\n            \"contact\": \"https://:account.api-us1.com/api/:version/contactAutomations/2/contact\",\n            \"contactGoals\": \"https://:account.api-us1.com/api/:version/contactAutomations/2/contactGoals\"\n        },\n        \"id\": \"2\",\n        \"automation\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactAutomation": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "string",
                          "example": "110"
                        },
                        "seriesid": {
                          "type": "string",
                          "example": "2"
                        },
                        "startid": {
                          "type": "string",
                          "example": "0"
                        },
                        "status": {
                          "type": "string",
                          "example": "2"
                        },
                        "batchid": {},
                        "adddate": {
                          "type": "string",
                          "example": "2018-09-19T09:44:26-05:00"
                        },
                        "remdate": {
                          "type": "string",
                          "example": "2018-09-19T09:44:26-05:00"
                        },
                        "timespan": {
                          "type": "string",
                          "example": "0"
                        },
                        "lastblock": {
                          "type": "string",
                          "example": "5"
                        },
                        "lastlogid": {
                          "type": "string",
                          "example": "2"
                        },
                        "lastdate": {
                          "type": "string",
                          "example": "2018-09-19T09:44:26-05:00"
                        },
                        "completedElements": {
                          "type": "string",
                          "example": "1"
                        },
                        "totalElements": {
                          "type": "string",
                          "example": "2"
                        },
                        "completed": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "completeValue": {
                          "type": "integer",
                          "example": 100,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "automation": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactAutomations/2/automation"
                            },
                            "contact": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactAutomations/2/contact"
                            },
                            "contactGoals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactAutomations/2/contactGoals"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "automation": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for SubscriberSeries with id 3\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for SubscriberSeries with id 3"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Remove a contact from an automation",
        "description": "",
        "operationId": "delete-a-contactautomation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contactAutomation to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for SubscriberSeries with id 3\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for SubscriberSeries with id 3"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/automations": {
      "get": {
        "summary": "List all automations",
        "description": "",
        "operationId": "list-all-automations",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"automations\": [\n        {\n            \"name\": \"Email Subscription\",\n            \"cdate\": \"2018-08-06T16:28:43-05:00\",\n            \"mdate\": \"2018-08-06T16:33:10-05:00\",\n            \"userid\": \"1\",\n            \"status\": \"2\",\n            \"entered\": \"0\",\n            \"exited\": \"0\",\n            \"hidden\": \"0\",\n            \"defaultscreenshot\": \"http://img-us1.com/default-series.gif\",\n            \"screenshot\": \"https://d226aj4ao1t61q.cloudfront.net/k0x4h0lr_default-automation.png\",\n            \"links\": {\n                \"campaigns\": \"https://:account.api-us1.com/api/3/automations/1/campaigns\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/3/automations/1/contactGoals\",\n                \"contactAutomations\": \"https://:account.api-us1.com/api/3/automations/1/contactAutomations\",\n                \"blocks\": \"https://:account.api-us1.com/api/3/automations/1/blocks\",\n                \"goals\": \"https://:account.api-us1.com/api/3/automations/1/goals\",\n                \"sms\": \"https://:account.api-us1.com/api/3/automations/1/sms\",\n                \"sitemessages\": \"https://:account.api-us1.com/api/3/automations/1/sitemessages\"\n            },\n            \"id\": \"1\"\n        },\n        {\n            \"name\": \"Test SMS Send\",\n            \"cdate\": \"2018-09-18T10:46:32-05:00\",\n            \"mdate\": \"2018-09-18T10:54:30-05:00\",\n            \"userid\": \"1\",\n            \"status\": \"1\",\n            \"entered\": \"2\",\n            \"exited\": \"2\",\n            \"hidden\": \"0\",\n            \"defaultscreenshot\": \"http://img-us1.com/default-series.gif\",\n            \"screenshot\": \"https://d226aj4ao1t61q.cloudfront.net/k0x4h0lr_default-automation.png\",\n            \"links\": {\n                \"campaigns\": \"https://:account.api-us1.com/api/3/automations/2/campaigns\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/3/automations/2/contactGoals\",\n                \"contactAutomations\": \"https://:account.api-us1.com/api/3/automations/2/contactAutomations\",\n                \"blocks\": \"https://:account.api-us1.com/api/3/automations/2/blocks\",\n                \"goals\": \"https://:account.api-us1.com/api/3/automations/2/goals\",\n                \"sms\": \"https://:account.api-us1.com/api/3/automations/2/sms\",\n                \"sitemessages\": \"https://:account.api-us1.com/api/3/automations/2/sitemessages\"\n            },\n            \"id\": \"2\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"2\",\n        \"starts\": [\n            {\n                \"id\": \"2\",\n                \"series\": \"1\",\n                \"type\": \"subscribe\"\n            },\n            {\n                \"id\": \"4\",\n                \"series\": \"2\",\n                \"type\": \"subscribe\"\n            }\n        ],\n        \"filtered\": false,\n        \"smsLogs\": []\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "automations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Email Subscription"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-06T16:28:43-05:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2018-08-06T16:33:10-05:00"
                          },
                          "userid": {
                            "type": "string",
                            "example": "1"
                          },
                          "status": {
                            "type": "string",
                            "example": "2"
                          },
                          "entered": {
                            "type": "string",
                            "example": "0"
                          },
                          "exited": {
                            "type": "string",
                            "example": "0"
                          },
                          "hidden": {
                            "type": "string",
                            "example": "0"
                          },
                          "defaultscreenshot": {
                            "type": "string",
                            "example": "http://img-us1.com/default-series.gif"
                          },
                          "screenshot": {
                            "type": "string",
                            "example": "https://d226aj4ao1t61q.cloudfront.net/k0x4h0lr_default-automation.png"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "campaigns": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/automations/1/campaigns"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/automations/1/contactGoals"
                              },
                              "contactAutomations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/automations/1/contactAutomations"
                              },
                              "blocks": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/automations/1/blocks"
                              },
                              "goals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/automations/1/goals"
                              },
                              "sms": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/automations/1/sms"
                              },
                              "sitemessages": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/automations/1/sitemessages"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        },
                        "starts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "2"
                              },
                              "series": {
                                "type": "string",
                                "example": "1"
                              },
                              "type": {
                                "type": "string",
                                "example": "subscribe"
                              }
                            }
                          }
                        },
                        "filtered": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "smsLogs": {
                          "type": "array"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/addresses": {
      "get": {
        "summary": "List all addresses",
        "description": "",
        "operationId": "list-all-addresses",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "GET /addresses (Example RESPONSE)": {
                    "value": "{\n    \"addresses\": [\n        {\n            \"companyName\": \"Test Company Name\",\n            \"address1\": \"Test Address\",\n            \"address2\": \"\",\n            \"city\": \"\",\n            \"state\": \"\",\n            \"district\": \"\",\n            \"zip\": \"\",\n            \"country\": \"US\",\n            \"allgroup\": \"0\",\n            \"isDefault\": \"1\",\n            \"links\": {\n                \"addressGroup\": \"https://:account.api-us1.com/api/3/addresses/1/addressGroup\",\n                \"addressList\": \"https://:account.api-us1.com/api/3/addresses/1/addressList\",\n                \"forms\": \"https://:account.api-us1.com/api/3/addresses/1/forms\"\n            },\n            \"id\": \"1\"\n        },\n        {\n            \"companyName\": \"TEST NAME\",\n            \"address1\": \"TEST ADDRESS\",\n            \"address2\": \"\",\n            \"city\": \"\",\n            \"state\": \"\",\n            \"district\": \"\",\n            \"zip\": \"\",\n            \"country\": \"US\",\n            \"allgroup\": \"0\",\n            \"isDefault\": \"0\",\n            \"links\": {\n                \"addressGroup\": \"https://:account.api-us1.com/api/3/addresses/2/addressGroup\",\n                \"addressList\": \"https://:account.api-us1.com/api/3/addresses/2/addressList\",\n                \"forms\": \"https://:account.api-us1.com/api/3/addresses/2/forms\"\n            },\n            \"id\": \"2\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "companyName": {
                            "type": "string",
                            "example": "Test Company Name"
                          },
                          "address1": {
                            "type": "string",
                            "example": "Test Address"
                          },
                          "address2": {
                            "type": "string",
                            "example": ""
                          },
                          "city": {
                            "type": "string",
                            "example": ""
                          },
                          "state": {
                            "type": "string",
                            "example": ""
                          },
                          "district": {
                            "type": "string",
                            "example": ""
                          },
                          "zip": {
                            "type": "string",
                            "example": ""
                          },
                          "country": {
                            "type": "string",
                            "example": "US"
                          },
                          "allgroup": {
                            "type": "string",
                            "example": "0"
                          },
                          "isDefault": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "addressGroup": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/addresses/1/addressGroup"
                              },
                              "addressList": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/addresses/1/addressList"
                              },
                              "forms": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/addresses/1/forms"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create an address",
        "description": "",
        "operationId": "create-an-address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "properties": {
                      "groupid": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "global": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "address_1": {
                        "type": "string"
                      },
                      "address_2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      },
                      "district": {
                        "type": "string",
                        "description": "(Optional for countries that use it)"
                      },
                      "country": {
                        "type": "string",
                        "description": "Accepts a (2) two character string - country code (eg 'US', 'CA', 'MX')"
                      },
                      "allgroup": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "is_default": {
                        "type": "boolean",
                        "description": "Indicates default address"
                      }
                    },
                    "required": [
                      "company_name",
                      "address_1",
                      "country"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "address": {
                      "company_name": "TEST NAME",
                      "address_1": "TEST ADDRESS",
                      "country": "US"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"address\": {\n        \"companyName\": \"TEST NAME\",\n        \"address1\": \"TEST ADDRESS\",\n        \"country\": 3,\n        \"links\": {\n            \"addressGroup\": \"https://:account.api-us1.com/api/3/addresses/3/addressGroup\",\n            \"addressList\": \"https://:account.api-us1.com/api/3/addresses/3/addressList\",\n            \"forms\": \"https://:account.api-us1.com/api/3/addresses/3/forms\"\n        },\n        \"id\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "companyName": {
                          "type": "string",
                          "example": "TEST NAME"
                        },
                        "address1": {
                          "type": "string",
                          "example": "TEST ADDRESS"
                        },
                        "country": {
                          "type": "integer",
                          "example": 3,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "addressGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/3/addressGroup"
                            },
                            "addressList": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/3/addressList"
                            },
                            "forms": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/3/forms"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/campaigns/{id}/links": {
      "get": {
        "summary": "Retrieve links associated to campaign",
        "description": "",
        "operationId": "retrieve-links-associated-campaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of campaign to retrieve Links for",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"links\": [\n        {\n            \"campaignid\": \"1\",\n            \"messageid\": \"3\",\n            \"link\": \"open\",\n            \"name\": \"Read Tracker\",\n            \"ref\": \"\",\n            \"tracked\": \"1\",\n            \"links\": {\n                \"campaign\": \"https://:account.api-us1.com/api/3/links/1/campaign\",\n                \"message\": \"https://:account.api-us1.com/api/3/links/1/message\"\n            },\n            \"id\": \"1\",\n            \"campaign\": \"1\",\n            \"message\": \"3\"\n        },\n        {\n            \"campaignid\": \"1\",\n            \"messageid\": \"0\",\n            \"link\": \"open\",\n            \"name\": \"Read Tracker\",\n            \"ref\": \"\",\n            \"tracked\": \"1\",\n            \"links\": {\n                \"campaign\": \"https://:account.api-us1.com/api/3/links/2/campaign\",\n                \"message\": \"https://:account.api-us1.com/api/3/links/2/message\"\n            },\n            \"id\": \"2\",\n            \"campaign\": \"1\",\n            \"message\": null\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "campaignid": {
                            "type": "string",
                            "example": "1"
                          },
                          "messageid": {
                            "type": "string",
                            "example": "3"
                          },
                          "link": {
                            "type": "string",
                            "example": "open"
                          },
                          "name": {
                            "type": "string",
                            "example": "Read Tracker"
                          },
                          "ref": {
                            "type": "string",
                            "example": ""
                          },
                          "tracked": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "campaign": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/links/1/campaign"
                              },
                              "message": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/links/1/message"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "campaign": {
                            "type": "string",
                            "example": "1"
                          },
                          "message": {
                            "type": "string",
                            "example": "3"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Campaign with id 2\"\n}{\n    \"links\": []\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/addressGroups/{id}": {
      "delete": {
        "summary": "Delete address associated with a specific user group",
        "description": "",
        "operationId": "delete-an-addressgroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the AddressGroup to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for AddressGroup with id 19\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for AddressGroup with id 19"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contactAutomations": {
      "post": {
        "summary": "Add a contact to an automation",
        "description": "",
        "operationId": "create-new-contactautomation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactAutomation": {
                    "properties": {
                      "contact": {
                        "type": "integer",
                        "description": "Contact ID of the Contact, to be linked to the contactAutomation",
                        "format": "int32"
                      },
                      "automation": {
                        "type": "integer",
                        "description": "Automation ID of the automation, to be linked to the contactAutomation",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "contact",
                      "automation"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "contactAutomation": {
                      "contact": "117",
                      "automation": "42"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contacts\": [\n        {\n            \"cdate\": \"2018-08-06T16:26:06-05:00\",\n            \"email\": \"johndoe@example.com\",\n            \"phone\": \"\",\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": null,\n            \"ip\": \"2130706433\",\n            \"ua\": null,\n            \"hash\": \"054aa0acede49e07a844420c879b3c30\",\n            \"socialdata_lastcheck\": null,\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": null,\n            \"gravatar\": \"0\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": null,\n            \"udate\": null,\n            \"edate\": null,\n            \"deleted_at\": null,\n            \"created_utc_timestamp\": \"2018-09-21 12:04:40\",\n            \"updated_utc_timestamp\": \"2018-09-21 12:04:40\",\n            \"links\": {\n                \"bounceLogs\": \"https://:account.api-us1.com/api/:version/contacts/64/bounceLogs\",\n                \"contactAutomations\": \"https://:account.api-us1.com/api/:version/contacts/64/contactAutomations\",\n                \"contactData\": \"https://:account.api-us1.com/api/:version/contacts/64/contactData\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/:version/contacts/64/contactGoals\",\n                \"contactLists\": \"https://:account.api-us1.com/api/:version/contacts/64/contactLists\",\n                \"contactLogs\": \"https://:account.api-us1.com/api/:version/contacts/64/contactLogs\",\n                \"contactTags\": \"https://:account.api-us1.com/api/:version/contacts/64/contactTags\",\n                \"contactDeals\": \"https://:account.api-us1.com/api/:version/contacts/64/contactDeals\",\n                \"deals\": \"https://:account.api-us1.com/api/:version/contacts/64/deals\",\n                \"fieldValues\": \"https://:account.api-us1.com/api/:version/contacts/64/fieldValues\",\n                \"geoIps\": \"https://:account.api-us1.com/api/:version/contacts/64/geoIps\",\n                \"notes\": \"https://:account.api-us1.com/api/:version/contacts/64/notes\",\n                \"organization\": \"https://:account.api-us1.com/api/:version/contacts/64/organization\",\n                \"plusAppend\": \"https://:account.api-us1.com/api/:version/contacts/64/plusAppend\",\n                \"trackingLogs\": \"https://:account.api-us1.com/api/:version/contacts/64/trackingLogs\",\n                \"scoreValues\": \"https://:account.api-us1.com/api/:version/contacts/64/scoreValues\"\n            },\n            \"id\": \"64\",\n            \"organization\": null\n        }\n    ],\n    \"contactAutomation\": {\n        \"contact\": \"64\",\n        \"seriesid\": \"2\",\n        \"startid\": 0,\n        \"status\": 1,\n        \"lastblock\": \"4\",\n        \"completedElements\": \"1\",\n        \"totalElements\": \"2\",\n        \"completed\": 0,\n        \"completeValue\": 50,\n        \"links\": {\n            \"automation\": \"https://:account.api-us1.com/api/:version/contactAutomations/3/automation\",\n            \"contact\": \"https://:account.api-us1.com/api/:version/contactAutomations/3/contact\",\n            \"contactGoals\": \"https://:account.api-us1.com/api/:version/contactAutomations/3/contactGoals\"\n        },\n        \"id\": \"3\",\n        \"automation\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-06T16:26:06-05:00"
                          },
                          "email": {
                            "type": "string",
                            "example": "johndoe@example.com"
                          },
                          "phone": {
                            "type": "string",
                            "example": ""
                          },
                          "firstName": {
                            "type": "string",
                            "example": ""
                          },
                          "lastName": {
                            "type": "string",
                            "example": ""
                          },
                          "orgid": {
                            "type": "string",
                            "example": "0"
                          },
                          "segmentio_id": {
                            "type": "string",
                            "example": ""
                          },
                          "bounced_hard": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_soft": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_date": {},
                          "ip": {
                            "type": "string",
                            "example": "2130706433"
                          },
                          "ua": {},
                          "hash": {
                            "type": "string",
                            "example": "054aa0acede49e07a844420c879b3c30"
                          },
                          "socialdata_lastcheck": {},
                          "email_local": {
                            "type": "string",
                            "example": ""
                          },
                          "email_domain": {
                            "type": "string",
                            "example": ""
                          },
                          "sentcnt": {
                            "type": "string",
                            "example": "0"
                          },
                          "rating_tstamp": {},
                          "gravatar": {
                            "type": "string",
                            "example": "0"
                          },
                          "deleted": {
                            "type": "string",
                            "example": "0"
                          },
                          "anonymized": {
                            "type": "string",
                            "example": "0"
                          },
                          "adate": {},
                          "udate": {},
                          "edate": {},
                          "deleted_at": {},
                          "created_utc_timestamp": {
                            "type": "string",
                            "example": "2018-09-21 12:04:40"
                          },
                          "updated_utc_timestamp": {
                            "type": "string",
                            "example": "2018-09-21 12:04:40"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "bounceLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/bounceLogs"
                              },
                              "contactAutomations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/contactAutomations"
                              },
                              "contactData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/contactData"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/contactGoals"
                              },
                              "contactLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/contactLists"
                              },
                              "contactLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/contactLogs"
                              },
                              "contactTags": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/contactTags"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/contactDeals"
                              },
                              "deals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/deals"
                              },
                              "fieldValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/fieldValues"
                              },
                              "geoIps": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/geoIps"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/organization"
                              },
                              "plusAppend": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/plusAppend"
                              },
                              "trackingLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/trackingLogs"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/64/scoreValues"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "64"
                          },
                          "organization": {}
                        }
                      }
                    },
                    "contactAutomation": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "string",
                          "example": "64"
                        },
                        "seriesid": {
                          "type": "string",
                          "example": "2"
                        },
                        "startid": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "status": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "lastblock": {
                          "type": "string",
                          "example": "4"
                        },
                        "completedElements": {
                          "type": "string",
                          "example": "1"
                        },
                        "totalElements": {
                          "type": "string",
                          "example": "2"
                        },
                        "completed": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "completeValue": {
                          "type": "integer",
                          "example": 50,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "automation": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactAutomations/3/automation"
                            },
                            "contact": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactAutomations/3/contact"
                            },
                            "contactGoals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactAutomations/3/contactGoals"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        },
                        "automation": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Could not create SubscriberSeries\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Could not create SubscriberSeries"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all automations a contact is in",
        "description": "",
        "operationId": "list-all-contact-automations",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactAutomations\": [\n        {\n            \"contact\": \"10003\",\n            \"seriesid\": \"1\",\n            \"startid\": \"0\",\n            \"status\": \"2\",\n            \"batchid\": null,\n            \"adddate\": \"2018-11-16T02:32:33-06:00\",\n            \"remdate\": \"2018-11-16T02:32:33-06:00\",\n            \"timespan\": \"0\",\n            \"lastblock\": \"1\",\n            \"lastlogid\": \"0\",\n            \"lastdate\": \"2018-11-16T02:32:33-06:00\",\n            \"completedElements\": \"0\",\n            \"totalElements\": \"1\",\n            \"completed\": 1,\n            \"completeValue\": 100,\n            \"links\": {\n                \"automation\": \"https://:account.api-us1.com/api/:version/contactAutomations/1/automation\",\n                \"contact\": \"https://:account.api-us1.com/api/:version/contactAutomations/1/contact\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/:version/contactAutomations/1/contactGoals\"\n            },\n            \"id\": \"1\",\n            \"automation\": \"1\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"1\",\n        \"showcase_stats\": []\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactAutomations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "10003"
                          },
                          "seriesid": {
                            "type": "string",
                            "example": "1"
                          },
                          "startid": {
                            "type": "string",
                            "example": "0"
                          },
                          "status": {
                            "type": "string",
                            "example": "2"
                          },
                          "batchid": {},
                          "adddate": {
                            "type": "string",
                            "example": "2018-11-16T02:32:33-06:00"
                          },
                          "remdate": {
                            "type": "string",
                            "example": "2018-11-16T02:32:33-06:00"
                          },
                          "timespan": {
                            "type": "string",
                            "example": "0"
                          },
                          "lastblock": {
                            "type": "string",
                            "example": "1"
                          },
                          "lastlogid": {
                            "type": "string",
                            "example": "0"
                          },
                          "lastdate": {
                            "type": "string",
                            "example": "2018-11-16T02:32:33-06:00"
                          },
                          "completedElements": {
                            "type": "string",
                            "example": "0"
                          },
                          "totalElements": {
                            "type": "string",
                            "example": "1"
                          },
                          "completed": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "completeValue": {
                            "type": "integer",
                            "example": 100,
                            "default": 0
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "automation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactAutomations/1/automation"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactAutomations/1/contact"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contactAutomations/1/contactGoals"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "automation": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "1"
                        },
                        "showcase_stats": {
                          "type": "array"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/addresses/{id}": {
      "get": {
        "summary": "Retrieve an address",
        "description": "",
        "operationId": "retrieve-an-address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Address to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"address\": {\n        \"companyName\": \"Test Company Name\",\n        \"address1\": \"Test Address\",\n        \"address2\": \"\",\n        \"city\": \"\",\n        \"state\": \"\",\n        \"district\": \"\",\n        \"zip\": \"\",\n        \"country\": \"US\",\n        \"allgroup\": \"0\",\n        \"isDefault\": \"1\",\n        \"links\": {\n            \"addressGroup\": \"https://:account.api-us1.com/api/3/addresses/1/addressGroup\",\n            \"addressList\": \"https://:account.api-us1.com/api/3/addresses/1/addressList\",\n            \"forms\": \"https://:account.api-us1.com/api/3/addresses/1/forms\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "companyName": {
                          "type": "string",
                          "example": "Test Company Name"
                        },
                        "address1": {
                          "type": "string",
                          "example": "Test Address"
                        },
                        "address2": {
                          "type": "string",
                          "example": ""
                        },
                        "city": {
                          "type": "string",
                          "example": ""
                        },
                        "state": {
                          "type": "string",
                          "example": ""
                        },
                        "district": {
                          "type": "string",
                          "example": ""
                        },
                        "zip": {
                          "type": "string",
                          "example": ""
                        },
                        "country": {
                          "type": "string",
                          "example": "US"
                        },
                        "allgroup": {
                          "type": "string",
                          "example": "0"
                        },
                        "isDefault": {
                          "type": "string",
                          "example": "1"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "addressGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/1/addressGroup"
                            },
                            "addressList": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/1/addressList"
                            },
                            "forms": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/1/forms"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete an address",
        "description": "",
        "operationId": "delete-an-address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Address to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Address with id 3\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Address with id 3"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update an address",
        "description": "",
        "operationId": "update-an-address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Address being changed",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "properties": {
                      "groupid": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "global": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "address_1": {
                        "type": "string"
                      },
                      "address_2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      },
                      "district": {
                        "type": "string",
                        "description": "(Optional for countries that use it)"
                      },
                      "country": {
                        "type": "string",
                        "description": "Accepts a (2) two character string - country code (eg 'US', 'CA', 'MX')"
                      },
                      "allgroup": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "is_default": {
                        "type": "boolean",
                        "description": "Indicates default address"
                      }
                    },
                    "required": [
                      "company_name",
                      "address_1",
                      "country"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "address": {
                      "companyName": "New Test Company Name",
                      "address1": "111 New Test Address",
                      "address2": "",
                      "city": "New Test City",
                      "state": "Florida",
                      "zip": "12345",
                      "country": "US"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"address\": {\n        \"companyName\": \"New Test Company Name\",\n        \"address1\": \"111 New Test Address\",\n        \"address2\": \"\",\n        \"city\": \"New Test City\",\n        \"state\": \"Florida\",\n        \"district\": \"\",\n        \"zip\": \"12345\",\n        \"country\": \"US\",\n        \"allgroup\": \"0\",\n        \"isDefault\": \"1\",\n        \"links\": {\n            \"addressGroup\": \"https://:account.api-us1.com/api/3/addresses/1/addressGroup\",\n            \"addressList\": \"https://:account.api-us1.com/api/3/addresses/1/addressList\",\n            \"forms\": \"https://:account.api-us1.com/api/3/addresses/1/forms\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "companyName": {
                          "type": "string",
                          "example": "New Test Company Name"
                        },
                        "address1": {
                          "type": "string",
                          "example": "111 New Test Address"
                        },
                        "address2": {
                          "type": "string",
                          "example": ""
                        },
                        "city": {
                          "type": "string",
                          "example": "New Test City"
                        },
                        "state": {
                          "type": "string",
                          "example": "Florida"
                        },
                        "district": {
                          "type": "string",
                          "example": ""
                        },
                        "zip": {
                          "type": "string",
                          "example": "12345"
                        },
                        "country": {
                          "type": "string",
                          "example": "US"
                        },
                        "allgroup": {
                          "type": "string",
                          "example": "0"
                        },
                        "isDefault": {
                          "type": "string",
                          "example": "1"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "addressGroup": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/1/addressGroup"
                            },
                            "addressList": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/1/addressList"
                            },
                            "forms": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/addresses/1/forms"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Address with id 3\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Address with id 3"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/notes": {
      "post": {
        "summary": "Create a note",
        "description": "",
        "operationId": "create-a-note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "properties": {
                      "note": {
                        "type": "string"
                      },
                      "reltype": {
                        "type": "string",
                        "description": "Possible Values: Activity, Deal, DealTask, Subscriber, CustomerAccount"
                      },
                      "relid": {
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "note",
                      "reltype",
                      "relid"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "note": {
                      "note": "This is the text of the note",
                      "relid": 2,
                      "reltype": "Subscriber"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contacts\": [\n        {\n            \"cdate\": \"2018-08-06T16:26:04-05:00\",\n            \"email\": \"ikreimont+2@activecampaign.com\",\n            \"phone\": \"\",\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": null,\n            \"ip\": \"0\",\n            \"ua\": null,\n            \"hash\": \"14d8c4418ae944c68e9dde4a975854cc\",\n            \"socialdata_lastcheck\": null,\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": null,\n            \"gravatar\": \"0\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": null,\n            \"udate\": \"2018-09-28T17:45:11-05:00\",\n            \"edate\": null,\n            \"deleted_at\": null,\n            \"created_utc_timestamp\": \"2018-09-21 12:04:40\",\n            \"updated_utc_timestamp\": \"2018-09-28 17:45:11\",\n            \"links\": {\n                \"bounceLogs\": \"https://:account.api-us1.com/api/:version/contacts/2/bounceLogs\",\n                \"contactAutomations\": \"https://:account.api-us1.com/api/:version/contacts/2/contactAutomations\",\n                \"contactData\": \"https://:account.api-us1.com/api/:version/contacts/2/contactData\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/:version/contacts/2/contactGoals\",\n                \"contactLists\": \"https://:account.api-us1.com/api/:version/contacts/2/contactLists\",\n                \"contactLogs\": \"https://:account.api-us1.com/api/:version/contacts/2/contactLogs\",\n                \"contactTags\": \"https://:account.api-us1.com/api/:version/contacts/2/contactTags\",\n                \"contactDeals\": \"https://:account.api-us1.com/api/:version/contacts/2/contactDeals\",\n                \"deals\": \"https://:account.api-us1.com/api/:version/contacts/2/deals\",\n                \"fieldValues\": \"https://:account.api-us1.com/api/:version/contacts/2/fieldValues\",\n                \"geoIps\": \"https://:account.api-us1.com/api/:version/contacts/2/geoIps\",\n                \"notes\": \"https://:account.api-us1.com/api/:version/contacts/2/notes\",\n                \"organization\": \"https://:account.api-us1.com/api/:version/contacts/2/organization\",\n                \"plusAppend\": \"https://:account.api-us1.com/api/:version/contacts/2/plusAppend\",\n                \"trackingLogs\": \"https://:account.api-us1.com/api/:version/contacts/2/trackingLogs\",\n                \"scoreValues\": \"https://:account.api-us1.com/api/:version/contacts/2/scoreValues\"\n            },\n            \"id\": \"2\",\n            \"organization\": null\n        }\n    ],\n    \"note\": {\n        \"note\": \"This is the text of the note\",\n        \"cdate\": \"2018-09-28T17:45:11-05:00\",\n        \"mdate\": \"2018-09-28T17:45:11-05:00\",\n        \"reltype\": \"Subscriber\",\n        \"relid\": 2,\n        \"userid\": \"1\",\n        \"links\": {\n            \"activities\": \"https://:account.api-us1.com/api/:version/notes/2/activities\",\n            \"user\": \"https://:account.api-us1.com/api/:version/notes/2/user\",\n            \"mentions\": \"https://:account.api-us1.com/api/:version/notes/2/mentions\",\n            \"notes\": \"https://:account.api-us1.com/api/:version/notes/2/notes\",\n            \"owner\": \"https://:account.api-us1.com/api/:version/notes/2/owner\"\n        },\n        \"owner\": {\n            \"type\": \"contact\",\n            \"id\": 2\n        },\n        \"id\": \"2\",\n        \"user\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-06T16:26:04-05:00"
                          },
                          "email": {
                            "type": "string",
                            "example": "ikreimont+2@activecampaign.com"
                          },
                          "phone": {
                            "type": "string",
                            "example": ""
                          },
                          "firstName": {
                            "type": "string",
                            "example": ""
                          },
                          "lastName": {
                            "type": "string",
                            "example": ""
                          },
                          "orgid": {
                            "type": "string",
                            "example": "0"
                          },
                          "segmentio_id": {
                            "type": "string",
                            "example": ""
                          },
                          "bounced_hard": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_soft": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_date": {},
                          "ip": {
                            "type": "string",
                            "example": "0"
                          },
                          "ua": {},
                          "hash": {
                            "type": "string",
                            "example": "14d8c4418ae944c68e9dde4a975854cc"
                          },
                          "socialdata_lastcheck": {},
                          "email_local": {
                            "type": "string",
                            "example": ""
                          },
                          "email_domain": {
                            "type": "string",
                            "example": ""
                          },
                          "sentcnt": {
                            "type": "string",
                            "example": "0"
                          },
                          "rating_tstamp": {},
                          "gravatar": {
                            "type": "string",
                            "example": "0"
                          },
                          "deleted": {
                            "type": "string",
                            "example": "0"
                          },
                          "anonymized": {
                            "type": "string",
                            "example": "0"
                          },
                          "adate": {},
                          "udate": {
                            "type": "string",
                            "example": "2018-09-28T17:45:11-05:00"
                          },
                          "edate": {},
                          "deleted_at": {},
                          "created_utc_timestamp": {
                            "type": "string",
                            "example": "2018-09-21 12:04:40"
                          },
                          "updated_utc_timestamp": {
                            "type": "string",
                            "example": "2018-09-28 17:45:11"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "bounceLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/bounceLogs"
                              },
                              "contactAutomations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactAutomations"
                              },
                              "contactData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactData"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactGoals"
                              },
                              "contactLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactLists"
                              },
                              "contactLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactLogs"
                              },
                              "contactTags": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactTags"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactDeals"
                              },
                              "deals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/deals"
                              },
                              "fieldValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/fieldValues"
                              },
                              "geoIps": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/geoIps"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/organization"
                              },
                              "plusAppend": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/plusAppend"
                              },
                              "trackingLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/trackingLogs"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/scoreValues"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          },
                          "organization": {}
                        }
                      }
                    },
                    "note": {
                      "type": "object",
                      "properties": {
                        "note": {
                          "type": "string",
                          "example": "This is the text of the note"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-09-28T17:45:11-05:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-09-28T17:45:11-05:00"
                        },
                        "reltype": {
                          "type": "string",
                          "example": "Subscriber"
                        },
                        "relid": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "activities": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/activities"
                            },
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/user"
                            },
                            "mentions": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/mentions"
                            },
                            "notes": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/notes"
                            },
                            "owner": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/owner"
                            }
                          }
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "contact"
                            },
                            "id": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve list of all notes",
        "description": "",
        "operationId": "retrieve-list-of-all-notes",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"notes\": [\n        {\n            \"relid\": \"126\",\n            \"reltype\": \"Activity\",\n            \"userid\": \"1\",\n            \"is_draft\": \"0\",\n            \"cdate\": \"2022-05-26T08:58:34-05:00\",\n            \"mdate\": \"2022-05-26T08:58:34-05:00\",\n            \"note\": \"Oh, hi Mark\",\n            \"links\": {\n                \"activities\": \"https://:account.api-us1.com/api/3/notes/1/activities\",\n                \"user\": \"https://:account.api-us1.com/api/3/notes/1/user\",\n                \"mentions\": \"https://:account.api-us1.com/api/3/notes/1/mentions\",\n                \"notes\": \"https://:account.api-us1.com/api/3/notes/1/notes\",\n                \"owner\": \"https://:account.api-us1.com/api/3/notes/1/owner\"\n            },\n            \"id\": \"1\",\n            \"user\": \"1\",\n            \"owner\": {\n                \"type\": \"activity\",\n                \"id\": \"126\"\n            }\n        },\n        {\n            \"relid\": \"6\",\n            \"reltype\": \"Deal\",\n            \"userid\": \"1\",\n            \"is_draft\": \"0\",\n            \"cdate\": \"2023-08-18T11:09:38-05:00\",\n            \"mdate\": \"2023-08-18T11:09:40-05:00\",\n            \"note\": \"Here is a note\",\n            \"links\": {\n                \"activities\": \"https://:account.api-us1.com/api/3/notes/2/activities\",\n                \"user\": \"https://:account.api-us1.com/api/3/notes/2/user\",\n                \"mentions\": \":account.api-us1.com/api/3/notes/2/mentions\",\n                \"notes\": \":account.api-us1.com/api/3/notes/2/notes\",\n                \"owner\": \":account.api-us1.com/api/3/notes/2/owner\"\n            },\n            \"id\": \"2\",\n            \"user\": \"1\",\n            \"owner\": {\n                \"type\": \"deal\",\n                \"id\": \"6\"\n            }\n        }\n    ],\n    \"meta\": {\n        \"total\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relid": {
                            "type": "string",
                            "example": "126"
                          },
                          "reltype": {
                            "type": "string",
                            "example": "Activity"
                          },
                          "userid": {
                            "type": "string",
                            "example": "1"
                          },
                          "is_draft": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2022-05-26T08:58:34-05:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2022-05-26T08:58:34-05:00"
                          },
                          "note": {
                            "type": "string",
                            "example": "Oh, hi Mark"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "activities": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/activities"
                              },
                              "user": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/user"
                              },
                              "mentions": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/mentions"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/notes"
                              },
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/owner"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "user": {
                            "type": "string",
                            "example": "1"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "activity"
                              },
                              "id": {
                                "type": "string",
                                "example": "126"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/notes/{id}": {
      "delete": {
        "summary": "Delete a note",
        "description": "",
        "operationId": "delete-note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the note to delete",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Note with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Note with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a note",
        "description": "",
        "operationId": "update-a-note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the note to update",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "properties": {
                      "note": {
                        "type": "string"
                      },
                      "reltype": {
                        "type": "string",
                        "description": "Possible Values: Activity, Deal, DealTask, Subscriber, CustomerAccount"
                      },
                      "relid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "note",
                      "reltype",
                      "relid"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "note": {
                      "note": "This is the text of the note",
                      "relid": 2,
                      "reltype": "Subscriber"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"note\": {\n        \"relid\": \"107\",\n        \"reltype\": \"Subscriber\",\n        \"userid\": \"1\",\n        \"cdate\": \"2018-09-21T11:52:41-05:00\",\n        \"mdate\": \"2018-09-28T18:39:44-05:00\",\n        \"note\": \"This is the text of the note\",\n        \"links\": {\n            \"activities\": \"https://:account.api-us1.com/api/:version/notes/1/activities\",\n            \"user\": \"https://:account.api-us1.com/api/:version/notes/1/user\",\n            \"mentions\": \"https://:account.api-us1.com/api/:version/notes/1/mentions\",\n            \"notes\": \"https://:account.api-us1.com/api/:version/notes/1/notes\",\n            \"owner\": \"https://:account.api-us1.com/api/:version/notes/1/owner\"\n        },\n        \"id\": \"1\",\n        \"user\": \"1\",\n        \"owner\": {\n            \"type\": \"contact\",\n            \"id\": \"107\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "note": {
                      "type": "object",
                      "properties": {
                        "relid": {
                          "type": "string",
                          "example": "107"
                        },
                        "reltype": {
                          "type": "string",
                          "example": "Subscriber"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-09-21T11:52:41-05:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-09-28T18:39:44-05:00"
                        },
                        "note": {
                          "type": "string",
                          "example": "This is the text of the note"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "activities": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/1/activities"
                            },
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/1/user"
                            },
                            "mentions": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/1/mentions"
                            },
                            "notes": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/1/notes"
                            },
                            "owner": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/1/owner"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "contact"
                            },
                            "id": {
                              "type": "string",
                              "example": "107"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a note",
        "description": "",
        "operationId": "retrieve-a-note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the note to retrieve",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"note\": {\n        \"relid\": \"2\",\n        \"reltype\": \"Subscriber\",\n        \"userid\": \"1\",\n        \"cdate\": \"2018-09-12T17:20:20-05:00\",\n        \"mdate\": \"2018-09-20T09:10:06-05:00\",\n        \"note\": \"TEST NOTE\",\n        \"links\": {\n            \"activities\": \"https://:account.api-us1.com/api/:version/notes/2/activities\",\n            \"user\": \"https://:account.api-us1.com/api/:version/notes/2/user\",\n            \"mentions\": \"https://:account.api-us1.com/api/:version/notes/2/mentions\",\n            \"notes\": \"https://:account.api-us1.com/api/:version/notes/2/notes\",\n            \"owner\": \"https://:account.api-us1.com/api/:version/notes/2/owner\"\n        },\n        \"id\": \"2\",\n        \"user\": \"1\",\n        \"owner\": {\n            \"type\": \"contact\",\n            \"id\": \"2\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "note": {
                      "type": "object",
                      "properties": {
                        "relid": {
                          "type": "string",
                          "example": "2"
                        },
                        "reltype": {
                          "type": "string",
                          "example": "Subscriber"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-09-12T17:20:20-05:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-09-20T09:10:06-05:00"
                        },
                        "note": {
                          "type": "string",
                          "example": "TEST NOTE"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "activities": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/activities"
                            },
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/user"
                            },
                            "mentions": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/mentions"
                            },
                            "notes": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/notes"
                            },
                            "owner": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/notes/2/owner"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "contact"
                            },
                            "id": {
                              "type": "string",
                              "example": "2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/segments": {
      "get": {
        "summary": "List all segments",
        "description": "",
        "operationId": "list-all-segments",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"segments\": [\n        {\n            \"name\": \"Segment of Automation 1\",\n            \"logic\": \"and\",\n            \"hidden\": \"0\",\n            \"seriesid\": \"1\",\n            \"links\": [],\n            \"id\": \"1\"\n        },\n        {\n            \"name\": \"Segment of Email Subscription\",\n            \"logic\": \"and\",\n            \"hidden\": \"0\",\n            \"seriesid\": \"1\",\n            \"links\": [],\n            \"id\": \"2\"\n        },\n        {\n            \"name\": \"Segment of daasf\",\n            \"logic\": \"and\",\n            \"hidden\": \"0\",\n            \"seriesid\": \"0\",\n            \"links\": [],\n            \"id\": \"3\"\n        },\n        {\n            \"name\": \"Segment of Automation 2\",\n            \"logic\": \"and\",\n            \"hidden\": \"0\",\n            \"seriesid\": \"2\",\n            \"links\": [],\n            \"id\": \"4\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"4\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "segments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Segment of Automation 1"
                          },
                          "logic": {
                            "type": "string",
                            "example": "and"
                          },
                          "hidden": {
                            "type": "string",
                            "example": "0"
                          },
                          "seriesid": {
                            "type": "string",
                            "example": "1"
                          },
                          "links": {
                            "type": "array"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/templates/{id}": {
      "get": {
        "summary": "Retrieve a template",
        "description": "",
        "operationId": "retrieve-a-template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the template to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"template\": {\n        \"userid\": \"1\",\n        \"ed_instanceid\": \"0\",\n        \"ed_version\": \"0\",\n        \"name\": \"Test 2\",\n        \"subject\": null,\n        \"content\": \"sdsf\",\n        \"categoryid\": \"1\",\n        \"used\": \"1\",\n        \"waitpreview\": \"1\",\n        \"importnum\": \"0\",\n        \"mdate\": \"2018-08-28 11:54:54\",\n        \"preview_content\": null,\n        \"modified\": \"1\",\n        \"hidden\": \"0\",\n        \"links\": [],\n        \"id\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "template": {
                      "type": "object",
                      "properties": {
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "ed_instanceid": {
                          "type": "string",
                          "example": "0"
                        },
                        "ed_version": {
                          "type": "string",
                          "example": "0"
                        },
                        "name": {
                          "type": "string",
                          "example": "Test 2"
                        },
                        "subject": {},
                        "content": {
                          "type": "string",
                          "example": "sdsf"
                        },
                        "categoryid": {
                          "type": "string",
                          "example": "1"
                        },
                        "used": {
                          "type": "string",
                          "example": "1"
                        },
                        "waitpreview": {
                          "type": "string",
                          "example": "1"
                        },
                        "importnum": {
                          "type": "string",
                          "example": "0"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-08-28 11:54:54"
                        },
                        "preview_content": {},
                        "modified": {
                          "type": "string",
                          "example": "1"
                        },
                        "hidden": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Template with id 10\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Template with id 10"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groups/{id}": {
      "delete": {
        "summary": "Delete a group",
        "description": "",
        "operationId": "delete-a-group-1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group to be deleted",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a group",
        "description": "",
        "operationId": "update-a-group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "descript": {
                        "type": "string",
                        "description": "Group description"
                      },
                      "pgMessageAdd": {
                        "type": "boolean",
                        "description": "Permission for adding messages",
                        "default": false
                      },
                      "unsubscribelink": {
                        "type": "boolean",
                        "description": "Whether or not to force unsubscribe links",
                        "default": false
                      },
                      "optinconfirm": {
                        "type": "boolean",
                        "description": "Whether or not to force optin confirm for this group",
                        "default": false
                      },
                      "pgListAdd": {
                        "type": "boolean",
                        "description": "Permission for adding lists",
                        "default": false
                      },
                      "pgListEdit": {
                        "type": "boolean",
                        "description": "Permission for editing lists",
                        "default": false
                      },
                      "pgListDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting lists",
                        "default": false
                      },
                      "pgListHeaders": {
                        "type": "boolean",
                        "description": "Permission for managing custom email headers",
                        "default": false
                      },
                      "pgListEmailaccount": {
                        "type": "boolean",
                        "description": "Permission for managing Unsubscribe By Email",
                        "default": false
                      },
                      "pgListBounce": {
                        "type": "boolean",
                        "description": "Permission for accessing list bounce settings",
                        "default": false
                      },
                      "pgMessageEdit": {
                        "type": "boolean",
                        "description": "Permission for editing messages",
                        "default": false
                      },
                      "pgMessageDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting messages",
                        "default": false
                      },
                      "pgMessageSend": {
                        "type": "boolean",
                        "description": "Permission for sending messages",
                        "default": false
                      },
                      "pgContactAdd": {
                        "type": "boolean",
                        "description": "Permission for adding contacts",
                        "default": false
                      },
                      "pgContactEdit": {
                        "type": "boolean",
                        "description": "Permission for editing contacts",
                        "default": false
                      },
                      "pgContactDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting contacts",
                        "default": false
                      },
                      "pgContactMerge": {
                        "type": "boolean",
                        "description": "Permission for merging contacts",
                        "default": false
                      },
                      "pgContactImport": {
                        "type": "boolean",
                        "description": "Permission for importing contacts",
                        "default": false
                      },
                      "pgContactApprove": {
                        "type": "boolean",
                        "description": "Permission for approving contacts",
                        "default": false
                      },
                      "pgContactExport": {
                        "type": "boolean",
                        "description": "Permission for exporting contacts",
                        "default": false
                      },
                      "pgContactSync": {
                        "type": "boolean",
                        "description": "Permission for syncing contacts",
                        "default": false
                      },
                      "pgContactFilters": {
                        "type": "boolean",
                        "description": "Permission for managing contact list segments",
                        "default": false
                      },
                      "pgContactActions": {
                        "type": "boolean",
                        "description": "Permission for managing contact actions",
                        "default": false
                      },
                      "pgContactFields": {
                        "type": "boolean",
                        "description": "Permission for managing contact custom fields",
                        "default": false
                      },
                      "pg_user_add": {
                        "type": "boolean",
                        "description": "Permission for adding users",
                        "default": false
                      },
                      "pg_user_edit": {
                        "type": "boolean",
                        "description": "Permission for editing users",
                        "default": false
                      },
                      "pg_user_delete": {
                        "type": "boolean",
                        "description": "Permission for deleting users",
                        "default": false
                      },
                      "pgGroupAdd": {
                        "type": "boolean",
                        "description": "Permission for adding groups",
                        "default": false
                      },
                      "pgGroupEdit": {
                        "type": "boolean",
                        "description": "Permission for editing groups",
                        "default": false
                      },
                      "pgGroupDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting groups",
                        "default": false
                      },
                      "pgTemplateAdd": {
                        "type": "boolean",
                        "description": "Permission for adding templates",
                        "default": false
                      },
                      "pgTemplateEdit": {
                        "type": "boolean",
                        "description": "Permission for editing templates",
                        "default": false
                      },
                      "pgTemplateDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting templates",
                        "default": false
                      },
                      "pgPersonalizationAdd": {
                        "type": "boolean",
                        "description": "Permission for adding personalization tags",
                        "default": false
                      },
                      "pgPersonalizationEdit": {
                        "type": "boolean",
                        "description": "Permission for editing personalization tags",
                        "default": false
                      },
                      "pgPersonalizationDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting personalization tags",
                        "default": false
                      },
                      "pgAutomationManage": {
                        "type": "boolean",
                        "default": false
                      },
                      "pgFormEdit": {
                        "type": "boolean",
                        "description": "Permission for editing subscription forms",
                        "default": false
                      },
                      "pgReportsCampaign": {
                        "type": "boolean",
                        "description": "Permission for viewing campaign reports",
                        "default": false
                      },
                      "pgReportsList": {
                        "type": "boolean",
                        "description": "Permission for viewing list reports",
                        "default": false
                      },
                      "pgReportsUser": {
                        "type": "boolean",
                        "description": "Permission for viewing user reports",
                        "default": false
                      },
                      "pgStartupReports": {
                        "type": "boolean",
                        "description": "Campaign ID of last campaign report viewed to decide whether to show link on startup",
                        "default": false
                      },
                      "pgReportsTrend": {
                        "type": "boolean",
                        "description": "Permission for viewing trend reports",
                        "default": false
                      },
                      "pgStartupGettingstarted": {
                        "type": "boolean",
                        "description": "Whether or not to show the \"getting started\" tutorial on overview page",
                        "default": false
                      },
                      "pgDeal": {
                        "type": "boolean",
                        "description": "Permission for viewing deals",
                        "default": false
                      },
                      "pgDealDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting deals",
                        "default": false
                      },
                      "pgDealReassign": {
                        "type": "boolean",
                        "description": "Permission for reassigning deals",
                        "default": false
                      },
                      "pgDealGroupAdd": {
                        "type": "boolean",
                        "description": "Permission for adding deal groups",
                        "default": false
                      },
                      "pgDealGroupEdit": {
                        "type": "boolean",
                        "description": "Permission for editing deal groups",
                        "default": false
                      },
                      "pgDealGroupDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting deals groups",
                        "default": false
                      },
                      "pgSavedResponsesManage": {
                        "type": "boolean",
                        "description": "Permission for managing saved responses",
                        "default": false
                      },
                      "reqApproval": {
                        "type": "boolean",
                        "description": "Whether or not this group requires all campaigns to be approved",
                        "default": false
                      },
                      "reqApproval1st": {
                        "type": "boolean",
                        "description": "Whether or not this group requires first campaign to be approved",
                        "default": false
                      },
                      "reqApprovalNotify": {
                        "type": "string",
                        "description": "Who to notify for approval related issues (email)"
                      },
                      "socialdata": {
                        "type": "boolean",
                        "description": "Whether or not to show social links in campaigns sent from this group",
                        "default": false
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "group": {
                      "title": "TEST TITLE",
                      "descript": "Description Text",
                      "unsubscribelink": "0",
                      "optinconfirm": "0",
                      "pgListAdd": 1,
                      "pgListEdit": 1,
                      "pgListDelete": 1,
                      "pgListHeaders": 1,
                      "pgListEmailaccount": 1,
                      "pgListBounce": 1,
                      "pgMessageAdd": 1,
                      "pgMessageEdit": 1,
                      "pgMessageDelete": 1,
                      "pgMessageSend": 1,
                      "pgContactAdd": 1,
                      "pgContactEdit": 1,
                      "pgContactDelete": 1,
                      "pgContactMerge": 1,
                      "pgContactImport": 1,
                      "pgContactApprove": 1,
                      "pgContactExport": 1,
                      "pgContactSync": 1,
                      "pgContactFilters": 1,
                      "pgContactActions": 1,
                      "pgContactFields": 1,
                      "pg_user_add": "0",
                      "pg_user_edit": "0",
                      "pg_user_delete": "0",
                      "pgGroupAdd": 1,
                      "pgGroupEdit": 1,
                      "pgGroupDelete": 1,
                      "pgTemplateAdd": 1,
                      "pgTemplateEdit": 1,
                      "pgTemplateDelete": 1,
                      "pgPersonalizationAdd": 1,
                      "pgPersonalizationEdit": 1,
                      "pgPersonalizationDelete": 1,
                      "pgAutomationManage": 1,
                      "pgFormEdit": 1,
                      "pgReportsCampaign": 1,
                      "pgReportsList": 1,
                      "pgReportsUser": 1,
                      "pgReportsTrend": 1,
                      "pgStartupReports": 1,
                      "pgStartupGettingstarted": 1,
                      "pgDeal": 1,
                      "pgDealDelete": 1,
                      "pgDealReassign": 1,
                      "pgDealGroupAdd": 1,
                      "pgDealGroupEdit": 1,
                      "pgDealGroupDelete": 1,
                      "pgSavedResponsesManage": 1,
                      "reqApproval": 1,
                      "reqApproval1st": 1,
                      "reqApprovalNotify": "JohnDoe@gmail.com",
                      "socialdata": 0
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"group\": {\n        \"title\": \"My Groups Title\",\n        \"p_admin\": 1,\n        \"links\": {\n            \"userGroups\": \"https://:account.api-us1.com/api/:version/groups/7/userGroups\",\n            \"groupLimit\": \"https://:account.api-us1.com/api/:version/groups/7/groupLimit\",\n            \"dealGroupGroups\": \"https://:account.api-us1.com/api/:version/groups/7/dealGroupGroups\",\n            \"listGroups\": \"https://:account.api-us1.com/api/:version/groups/7/listGroups\",\n            \"addressGroups\": \"https://:account.api-us1.com/api/:version/groups/7/addressGroups\",\n            \"automationGroups\": \"https://:account.api-us1.com/api/:version/groups/7/automationGroups\"\n        },\n        \"id\": \"7\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "My Groups Title"
                        },
                        "p_admin": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "userGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/userGroups"
                            },
                            "groupLimit": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/groupLimit"
                            },
                            "dealGroupGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/dealGroupGroups"
                            },
                            "listGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/listGroups"
                            },
                            "addressGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/addressGroups"
                            },
                            "automationGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/automationGroups"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "7"
                        }
                      }
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"group\": {\n        \"title\": \"TEST TITLE\",\n        \"descript\": \"Description Text\",\n        \"unsubscribelink\": \"0\",\n        \"optinconfirm\": \"0\",\n        \"p_admin\": \"1\",\n        \"pgListAdd\": 1,\n        \"pgListEdit\": 1,\n        \"pgListDelete\": 1,\n        \"pgListHeaders\": 1,\n        \"pgListEmailaccount\": 1,\n        \"pgListBounce\": 1,\n        \"pgMessageAdd\": 1,\n        \"pgMessageEdit\": 1,\n        \"pgMessageDelete\": 1,\n        \"pgMessageSend\": 1,\n        \"pgContactAdd\": 1,\n        \"pgContactEdit\": 1,\n        \"pgContactDelete\": 1,\n        \"pgContactMerge\": 1,\n        \"pgContactImport\": 1,\n        \"pgContactApprove\": 1,\n        \"pgContactExport\": 1,\n        \"pgContactSync\": 1,\n        \"pgContactFilters\": 1,\n        \"pgContactActions\": 1,\n        \"pgContactFields\": 1,\n        \"pg_user_add\": \"0\",\n        \"pg_user_edit\": \"0\",\n        \"pg_user_delete\": \"0\",\n        \"pgGroupAdd\": 1,\n        \"pgGroupEdit\": 1,\n        \"pgGroupDelete\": 1,\n        \"pgTemplateAdd\": 1,\n        \"pgTemplateEdit\": 1,\n        \"pgTemplateDelete\": 1,\n        \"pgPersonalizationAdd\": 1,\n        \"pgPersonalizationEdit\": 1,\n        \"pgPersonalizationDelete\": 1,\n        \"pgAutomationManage\": 1,\n        \"pgFormEdit\": 1,\n        \"pgReportsCampaign\": 1,\n        \"pgReportsList\": 1,\n        \"pgReportsUser\": 1,\n        \"pgReportsTrend\": 1,\n        \"pgStartupReports\": 1,\n        \"pgStartupGettingstarted\": 1,\n        \"pgDeal\": 1,\n        \"pgDealDelete\": 1,\n        \"pgDealReassign\": 1,\n        \"pgDealGroupAdd\": 1,\n        \"pgDealGroupEdit\": 1,\n        \"pgDealGroupDelete\": 1,\n        \"pgSavedResponsesManage\": 1,\n        \"sdate\": \"2018-09-29T22:08:36-05:00\",\n        \"reqApproval\": 1,\n        \"reqApproval1st\": 1,\n        \"reqApprovalNotify\": \"JohnDoe@gmail.com\",\n        \"socialdata\": \"0\",\n        \"links\": {\n            \"userGroups\": \"https://:account.api-us1.com/api/:version/groups/5/userGroups\",\n            \"groupLimit\": \"https://:account.api-us1.com/api/:version/groups/5/groupLimit\",\n            \"dealGroupGroups\": \"https://:account.api-us1.com/api/:version/groups/5/dealGroupGroups\",\n            \"listGroups\": \"https://:account.api-us1.com/api/:version/groups/5/listGroups\",\n            \"addressGroups\": \"https://:account.api-us1.com/api/:version/groups/5/addressGroups\",\n            \"automationGroups\": \"https://:account.api-us1.com/api/:version/groups/5/automationGroups\"\n        },\n        \"id\": \"5\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "TEST TITLE"
                        },
                        "descript": {
                          "type": "string",
                          "example": "Description Text"
                        },
                        "unsubscribelink": {
                          "type": "string",
                          "example": "0"
                        },
                        "optinconfirm": {
                          "type": "string",
                          "example": "0"
                        },
                        "p_admin": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgListAdd": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgListEdit": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgListDelete": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgListHeaders": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgListEmailaccount": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgListBounce": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgMessageAdd": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgMessageEdit": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgMessageDelete": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgMessageSend": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactAdd": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactEdit": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactDelete": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactMerge": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactImport": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactApprove": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactExport": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactSync": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactFilters": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactActions": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgContactFields": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pg_user_add": {
                          "type": "string",
                          "example": "0"
                        },
                        "pg_user_edit": {
                          "type": "string",
                          "example": "0"
                        },
                        "pg_user_delete": {
                          "type": "string",
                          "example": "0"
                        },
                        "pgGroupAdd": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgGroupEdit": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgGroupDelete": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgTemplateAdd": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgTemplateEdit": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgTemplateDelete": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgPersonalizationAdd": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgPersonalizationEdit": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgPersonalizationDelete": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgAutomationManage": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgFormEdit": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgReportsCampaign": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgReportsList": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgReportsUser": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgReportsTrend": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgStartupReports": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgStartupGettingstarted": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgDeal": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgDealDelete": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgDealReassign": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgDealGroupAdd": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgDealGroupEdit": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgDealGroupDelete": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "pgSavedResponsesManage": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "sdate": {
                          "type": "string",
                          "example": "2018-09-29T22:08:36-05:00"
                        },
                        "reqApproval": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "reqApproval1st": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "reqApprovalNotify": {
                          "type": "string",
                          "example": "JohnDoe@gmail.com"
                        },
                        "socialdata": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "userGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/5/userGroups"
                            },
                            "groupLimit": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/5/groupLimit"
                            },
                            "dealGroupGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/5/dealGroupGroups"
                            },
                            "listGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/5/listGroups"
                            },
                            "addressGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/5/addressGroups"
                            },
                            "automationGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/5/automationGroups"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Group with id 8\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Group with id 8"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a group",
        "description": "",
        "operationId": "retrieve-a-group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group to retrieve",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"group\": {\n        \"title\": \"TEST TITLE\",\n        \"descript\": \"This is a group for admin users (people that can manage content)\",\n        \"unsubscribelink\": \"0\",\n        \"optinconfirm\": \"0\",\n        \"p_admin\": \"1\",\n        \"pgListAdd\": \"1\",\n        \"pgListEdit\": \"1\",\n        \"pgListDelete\": \"1\",\n        \"pgListHeaders\": \"1\",\n        \"pgListEmailaccount\": \"1\",\n        \"pgListBounce\": \"1\",\n        \"pgMessageAdd\": \"1\",\n        \"pgMessageEdit\": \"1\",\n        \"pgMessageDelete\": \"1\",\n        \"pgMessageSend\": \"1\",\n        \"pgContactAdd\": \"1\",\n        \"pgContactEdit\": \"1\",\n        \"pgContactDelete\": \"1\",\n        \"pgContactMerge\": \"1\",\n        \"pgContactImport\": \"1\",\n        \"pgContactApprove\": \"1\",\n        \"pgContactExport\": \"1\",\n        \"pgContactSync\": \"1\",\n        \"pgContactFilters\": \"1\",\n        \"pgContactActions\": \"0\",\n        \"pgContactFields\": \"1\",\n        \"pg_user_add\": \"1\",\n        \"pg_user_edit\": \"1\",\n        \"pg_user_delete\": \"1\",\n        \"pgGroupAdd\": \"1\",\n        \"pgGroupEdit\": \"1\",\n        \"pgGroupDelete\": \"1\",\n        \"pgTemplateAdd\": \"1\",\n        \"pgTemplateEdit\": \"1\",\n        \"pgTemplateDelete\": \"1\",\n        \"pgPersonalizationAdd\": \"1\",\n        \"pgPersonalizationEdit\": \"1\",\n        \"pgPersonalizationDelete\": \"1\",\n        \"pgAutomationManage\": \"1\",\n        \"pgFormEdit\": \"1\",\n        \"pgReportsCampaign\": \"1\",\n        \"pgReportsList\": \"1\",\n        \"pgReportsUser\": \"1\",\n        \"pgReportsTrend\": \"1\",\n        \"pgStartupReports\": \"1\",\n        \"pgStartupGettingstarted\": \"1\",\n        \"pgDeal\": \"1\",\n        \"pgDealDelete\": \"1\",\n        \"pgDealReassign\": \"1\",\n        \"pgDealGroupAdd\": \"1\",\n        \"pgDealGroupEdit\": \"1\",\n        \"pgDealGroupDelete\": \"1\",\n        \"pgSavedResponsesManage\": \"1\",\n        \"sdate\": \"2018-09-20T10:51:14-05:00\",\n        \"reqApproval\": \"0\",\n        \"reqApproval1st\": \"2\",\n        \"reqApprovalNotify\": \"\",\n        \"socialdata\": \"0\",\n        \"links\": {\n            \"userGroups\": \"https://:account.api-us1.com/api/3/groups/3/userGroups\",\n            \"groupLimit\": \"https://:account.api-us1.com/api/3/groups/3/groupLimit\",\n            \"dealGroupGroups\": \"https://:account.api-us1.com/api/3/groups/3/dealGroupGroups\",\n            \"listGroups\": \"https://:account.api-us1.com/api/3/groups/3/listGroups\",\n            \"addressGroups\": \"https://:account.api-us1.com/api/3/groups/3/addressGroups\",\n            \"automationGroups\": \"https://:account.api-us1.com/api/3/groups/3/automationGroups\"\n        },\n        \"id\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "TEST TITLE"
                        },
                        "descript": {
                          "type": "string",
                          "example": "This is a group for admin users (people that can manage content)"
                        },
                        "unsubscribelink": {
                          "type": "string",
                          "example": "0"
                        },
                        "optinconfirm": {
                          "type": "string",
                          "example": "0"
                        },
                        "p_admin": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgListAdd": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgListEdit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgListDelete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgListHeaders": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgListEmailaccount": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgListBounce": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgMessageAdd": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgMessageEdit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgMessageDelete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgMessageSend": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactAdd": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactEdit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactDelete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactMerge": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactImport": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactApprove": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactExport": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactSync": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactFilters": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgContactActions": {
                          "type": "string",
                          "example": "0"
                        },
                        "pgContactFields": {
                          "type": "string",
                          "example": "1"
                        },
                        "pg_user_add": {
                          "type": "string",
                          "example": "1"
                        },
                        "pg_user_edit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pg_user_delete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgGroupAdd": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgGroupEdit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgGroupDelete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgTemplateAdd": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgTemplateEdit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgTemplateDelete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgPersonalizationAdd": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgPersonalizationEdit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgPersonalizationDelete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgAutomationManage": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgFormEdit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgReportsCampaign": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgReportsList": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgReportsUser": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgReportsTrend": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgStartupReports": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgStartupGettingstarted": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgDeal": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgDealDelete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgDealReassign": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgDealGroupAdd": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgDealGroupEdit": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgDealGroupDelete": {
                          "type": "string",
                          "example": "1"
                        },
                        "pgSavedResponsesManage": {
                          "type": "string",
                          "example": "1"
                        },
                        "sdate": {
                          "type": "string",
                          "example": "2018-09-20T10:51:14-05:00"
                        },
                        "reqApproval": {
                          "type": "string",
                          "example": "0"
                        },
                        "reqApproval1st": {
                          "type": "string",
                          "example": "2"
                        },
                        "reqApprovalNotify": {
                          "type": "string",
                          "example": ""
                        },
                        "socialdata": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "userGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/groups/3/userGroups"
                            },
                            "groupLimit": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/groups/3/groupLimit"
                            },
                            "dealGroupGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/groups/3/dealGroupGroups"
                            },
                            "listGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/groups/3/listGroups"
                            },
                            "addressGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/groups/3/addressGroups"
                            },
                            "automationGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/groups/3/automationGroups"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Group with id 10\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Group with id 10"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/messages": {
      "get": {
        "summary": "List all messages",
        "description": "",
        "operationId": "list-all-messages",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"messages\": [\n        {\n            \"userid\": \"1\",\n            \"ed_instanceid\": \"0\",\n            \"ed_version\": \"1\",\n            \"cdate\": \"2018-08-17T09:47:38-05:00\",\n            \"mdate\": \"2018-08-17T09:47:38-05:00\",\n            \"name\": \"\",\n            \"fromname\": \"John Doe\",\n            \"fromemail\": \"noreply@example.com\",\n            \"reply2\": \"hello@example.com\",\n            \"priority\": \"3\",\n            \"charset\": \"utf-8\",\n            \"encoding\": \"quoted-printable\",\n            \"format\": \"mime\",\n            \"subject\": \"Update your subscription to %LISTNAME%\",\n            \"preheader_text\": \"\",\n            \"text\": \" \\n\\n**Update your subscription details for %LISTNAME%** \\n\\n \\n\\nYou or someone entering your email has requested to update your\\nsubscription details for the address %EMAIL%.\\n\\n**To update your subscription details click the link below.**\\n\\nUpdate My Subscription <%LINK%> \\n\\n \\n\\n{\\\"If you believe that this is a mistake and you did not intend on\\nupdating your subscription to this list, you can ignore this message and\\nnothing else will happen.\\\"|alang\\n\\n \",\n            \"html\": \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\\n<html lang=\\\"en\\\" style=\\\"margin: 0; outline: none; padding: 0;\\\">\\n<head>\\n    <!--[if !mso]><meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"><!--<![endif]-->\\n    <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\">\\n    <meta http-equiv=\\\"Content-Language\\\" content=\\\"en-us\\\">\\n    <title>Preview</title>\\n    <style>\\n        .ExternalClass         .ExternalClass p,\\n        .ExternalClass ul,\\n        .ExternalClass ol         .undoreset div p,\\n        .undoreset p     </style>\\n    <style>\\n        @media only screen and (max-width: 600px),\\n        only screen and (max-device-width: 600px)             *             table             thead,\\n            tbody,\\n            tr             th,\\n            td,\\n            p         }\\n    </style>\\n</head>\\n<body style=\\\"font-family: Arial; line-height: 1.1; margin: 0px; background-color: #F2F2F2; width: 100%; text-align: center;\\\">\\n    <div class=\\\"divbody\\\" style=\\\"margin: 0px; outline: none; padding: 0px; font-family: arial; line-height: 1.1; width: 100%; background-color: #F2F2F2; background: #F2F2F2; text-align: center;\\\">\\n        <table border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 16px;\\\">\\n            <tr>\\n                <td valign=\\\"top\\\" height=\\\"40\\\" align=\\\"center\\\">&nbsp;</td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"center\\\" valign=\\\"top\\\" width=\\\"100%\\\">\\n                    <table border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" bgcolor=\\\"#F2F2F2\\\" style=\\\"font-size: 16px; min-width: 650px;\\\">\\n                        <tr>\\n                            <td valign=\\\"top\\\" align=\\\"center\\\">\\n                                <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 16px;\\\">\\n                                    <tr>\\n                                        <td valign=\\\"top\\\" style=\\\"padding: 0;\\\">\\n                                            <table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 14px;\\\">\\n                                                <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                                    <td valign=\\\"top\\\">\\n                                                        <table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 14px;\\\">\\n                                                            <tr>\\n                                                                <td valign=\\\"top\\\" align=\\\"center\\\" style=\\\"Margin:0; padding:0; font-size:20px; font-family:Arial,Helvetica; line-height:26px; text-align:center!important;\\\"><strong style=\\\"font-weight:bold;\\\">Update your subscription details for %LISTNAME%</strong>\\n                                                                </td>\\n                                                            </tr>\\n                                                        </table>\\n                                                    </td>\\n                                                </tr>\\n                                            </table>\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td height=\\\"20\\\">&nbsp;</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td valign=\\\"top\\\" style=\\\"padding: 0;\\\">\\n                                            <table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 14px;\\\">\\n                                                <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                                    <td valign=\\\"top\\\">\\n                                                        <table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 14px;\\\">\\n                                                            <tr>\\n                                                                <td valign=\\\"top\\\" align=\\\"center\\\" width=\\\"610\\\" style=\\\"color: inherit; font-size: inherit; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\">You or someone entering your email has requested to update your subscription details for the address %EMAIL%.</td>\\n                                                            </tr>\\n                                                        </table>\\n                                                    </td>\\n                                                </tr>\\n                                            </table>\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td valign=\\\"top\\\" style=\\\"padding: 20px;\\\">\\n                                            <table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; border-collapse: initial !important;\\\">\\n                                                <tr style=\\\"background-color: #ffffff;\\\">\\n                                                    <td valign=\\\"top\\\" style=\\\"border-color: #c2c2c2; border-style: solid; border-width: 1px;\\\">\\n                                                        <table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px;\\\">\\n                                                            <tr>\\n                                                                <td valign=\\\"top\\\" align=\\\"center\\\" style=\\\"padding:20px; font-size:16px; font-family:Arial,Helvetica; text-align:center;\\\"><strong style=\\\"font-weight:bold;\\\">To update your subscription details click the link below.</strong></td> </tr> <tr> <td valign=\\\"top\\\" align=\\\"center\\\"> <table border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px;\\\"> <tr> <td valign=\\\"top\\\" align=\\\"left\\\" width=\\\"558\\\">\\n                                                                                <div class=\\\"button-wrapper\\\" style=\\\"margin: 0; outline: none; padding: 0; text-align: center;\\\">\\n                                                                                    <!--[if mso]> <v:roundrect xmlns:v=\\\"urn:schemas-microsoft-com:vml\\\" xmlns:w=\\\"urn:schemas-microsoft-com:office:word\\\" href=\\\"%LINK%\\\" style=\\\"v-text-anchor:middle; width: 558px; height: 50px;\\\" arcsize=\\\"10%\\\" strokecolor=\\\"#4DCBA9\\\" strokeweight=\\\"1pt\\\" fillcolor=\\\"#4DCBA9\\\" > <w:anchorlock/> <center style=\\\"color:#ffffff;font-family:'Arial'; font-size:16px;\\\">Update My Subscription</center> </v:roundrect> <![endif]-->\\n                                                                                    <a href=\\\"%LINK%\\\" style=\\\"margin: 0; outline: none; padding: 16px; background-color: #4DCBA9; border: 1px solid #4DCBA9; border-radius: 4px; color: #ffffff; font-family: Arial; font-size: 16px; display: inline-block; text-align: center; text-decoration: none; mso-hide: all;\\\"> <span style=\\\"color:#ffffff;\\\">Update My Subscription</span> </a>\\n                                                                                </div>\\n                                                                            </td>\\n    </tr>\\n    </table>\\n    </td>\\n    </tr>\\n    <tr>\\n        <td height=\\\"20\\\">&nbsp;</td>\\n    </tr>\\n    </table>\\n    </td>\\n    </tr>\\n    </table>\\n    </td>\\n    </tr>\\n    <tr>\\n        <td valign=\\\"top\\\" style=\\\"padding: 0;\\\">\\n            <table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 14px;\\\">\\n                <tr style=\\\"margin: 0; padding: 0;\\\">\\n                    <td valign=\\\"top\\\" style=\\\"padding: 20px;\\\">\\n                        <table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 14px;\\\">\\n                            <tr>\\n                                <td valign=\\\"top\\\" height=\\\"25\\\" align=\\\"center\\\" style=\\\"Margin:0; padding:0; font-size:13px; line-height:13px; font-family:Arial,Helvetica; text-align:center!important; line-height:20px; text-align:center!important;\\\">{\\\"If you believe that this is a mistake and you did not intend on updating your subscription to this list, you can ignore this message and nothing else will happen.\\\"|alang</td>\\n                            </tr>\\n                        </table>\\n                    </td>\\n                </tr>\\n            </table>\\n        </td>\\n    </tr>\\n    </table>\\n    </td>\\n    </tr>\\n    </table>\\n    </td>\\n    </tr>\\n    <tr>\\n        <td valign=\\\"top\\\" height=\\\"40\\\" align=\\\"center\\\">&nbsp;</td>\\n    </tr>\\n    </table>\\n    </div>\\n</body>\\n\\n</html>\",\n            \"htmlfetch\": \"now\",\n            \"textfetch\": \"now\",\n            \"hidden\": \"0\",\n            \"preview_mime\": \"\",\n            \"preview_data\": null,\n            \"links\": {\n                \"user\": \"https://:account.api-us1.com/api/3/messages/2/user\"\n            },\n            \"id\": \"2\",\n            \"user\": \"1\"\n        },\n        {\n            \"userid\": \"1\",\n            \"ed_instanceid\": \"1\",\n            \"ed_version\": \"2\",\n            \"cdate\": \"2018-08-17T13:47:32-05:00\",\n            \"mdate\": \"2018-08-17T13:47:32-05:00\",\n            \"name\": \"Please confirm your subscription to %LISTNAME%\",\n            \"fromname\": \"AC Admin\",\n            \"fromemail\": \"ac_test@activecampaign.com\",\n            \"reply2\": \"\",\n            \"priority\": \"3\",\n            \"charset\": \"utf-8\",\n            \"encoding\": \"8bit\",\n            \"format\": \"mime\",\n            \"subject\": \"Please confirm your subscription to %LISTNAME%\",\n            \"preheader_text\": \"\",\n            \"text\": \" \\n\\nThank you for subscribing to %LISTNAME%!\\n\\nYou or someone has subscribed to this list on %SUBDATE% using the\\naddress %EMAIL%.\\n\\nTo confirm that you wish to be subscribed, please click the link below:\\n\\nConfirm My Subscription <%CONFIRMLINK%> \\n\\nIf you believe that this is a mistake and you did not intend on\\nsubscribing to this list,\\nyou can ignore this message and nothing else will happen.\",\n            \"html\": \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\\n<html lang=\\\"en\\\" style=\\\"margin: 0; outline: none; padding: 0;\\\"><head><!--[if !mso]><meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"><!--<![endif]--><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"Content-Language\\\" content=\\\"locale_contentlang\\\"><meta name=\\\"format-detection\\\" content=\\\"telephone=no\\\"><meta name=\\\"format-detection\\\" content=\\\"date=no\\\"><meta name=\\\"format-detection\\\" content=\\\"address=no\\\"><meta name=\\\"format-detection\\\" content=\\\"email=no\\\"><title>Preview</title><style data-ac-keep=\\\"true\\\">\\n.ExternalClass {width:100%; background:inherit; background-color:inherit;}\\n.ExternalClass p, .ExternalClass ul, .ExternalClass ol { Margin: 0; }\\n.undoreset div p, .undoreset p { margin-bottom: 20px; }\\ndiv[class^=\\\"aolmail_divbody\\\"] { overflow: auto; }\\n[owa] #ac-footer { padding: 20px 0px!important; background:inherit; background-color:inherit; }\\n</style><style data-ac-keep=\\\"true\\\">\\n@media only screen and (max-width: 600px) {\\t/*-------------------------------------------------------------------------*\\\\ Abandoned Cart widget \\\\*------------------------------------------------------------------------*/ .td_abandoned-cart img {display: block;padding-right: 0 !important;padding-bottom: 0 !important;width: 100% !important;max-width: 100% !important;height: auto !important;} body { padding: 0!important; font-size:1em!important; } * { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; } *[class].divbody {-webkit-text-size-adjust:none !important; width:auto !important;} *[class].td_picture img {width:auto !important;} *[class].td_text { line-height: 110%; } *[class].td_button { width: auto; } /* Collapse all block elements */ :not(.body) table { display: block!important; float:none!important; border-collapse:collapse !important; width:100% !important; min-width:100% !important; clear:both!important; } :not(.body) thead, :not(.body) tbody, :not(.body) tr { display:block!important; float:none!important; width:100% !important; } :not(.body) th, :not(.body) td, :not(.body) p { display:block!important; float:none!important; width:100% !important; clear:both!important; } /* Remove browser default styling for elements */ ul, ol { margin-left: 20px; margin-bottom: 10px; margin-top: 10px; -webkit-margin-before: 0; -webkit-margin-after: 0; -webkit-padding-start: 0; } /* Set default height for spacer once collapse */ *[class].spacer { height: auto!important; } a[href^=date]{ color:inherit !important; text-decoration:none !important;} a[href^=telephone]{ color:inherit !important; text-decoration:none !important;} a[href^=address]{ color:inherit !important; text-decoration:none !important;} a[href^=email]{ color:inherit !important; text-decoration:none !important;} /* Default table cell height */ td[height=\\\"10\\\"]{height:10px!important;font-size:10px!important;line-height:10px!important;}\\ntd[height=\\\"13\\\"]{height:13px!important;font-size:13px!important;line-height:13px!important;}\\ntd[height=\\\"14\\\"]{height:14px!important;font-size:14px!important;line-height:14px!important;}\\ntd[height=\\\"12\\\"]{height:12px!important;font-size:12px!important;line-height:12px!important;} /* Default social icons */ *[class].ac-social-icon-16 {width:16px !important; height:16px !important;} *[class].ac-social-icon-24 {width:24px !important; height:24px !important;} *[class].ac-social-icon-28 {width:28px !important; height:28px !important;} *[class].__ac_social_icons { margin-right: 0px !important; } }\\n</style><style data-ac-keep=\\\"true\\\"> </style><!--[if !mso]><!-- webfonts --><!--<![endif]--><!--[if lt mso 12]> <![endif]--></head><body id=\\\"ac-designer\\\" class=\\\"body\\\" style=\\\"font-family: Arial; line-height: 1.1; margin: 0px; background-color: #f5f5f5; width: 100%; text-align: center;\\\"><div class=\\\"divbody\\\" style=\\\"margin: 0px; outline: none; padding: 0px; color: #000000; font-family: arial; line-height: 1.1; width: 100%; background-color: #f5f5f5; background: #f5f5f5; text-align: center;\\\"><table class=\\\"template-table\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" align=\\\"left\\\" style=\\\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #f5f5f5; background: #f5f5f5;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" width=\\\"100%\\\"><table class=\\\"template-table\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"650\\\" bgcolor=\\\"#f5f5f5\\\" style=\\\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; max-width: 650px;\\\"><tr><td id=\\\"layout_table_4c01fd59953b175598dbdb0163afc56680171ae4\\\" valign=\\\"top\\\" align=\\\"center\\\" width=\\\"650\\\" style=\\\"background-color: #f5f5f5;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table root-table\\\" width=\\\"650\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #f5f5f5;\\\"><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin2\\\" valign=\\\"top\\\" style=\\\"background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row2\\\" class=\\\"layout layout-row widget _widget_spacer \\\"><td id=\\\"layout-row-padding2\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"30\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 30px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"30\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin1\\\" valign=\\\"top\\\" style=\\\"padding: 0; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row1\\\" class=\\\"layout layout-row widget _widget_text style1\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding1\\\" valign=\\\"top\\\" style=\\\"padding: 0 20px 20px 20px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div1\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\"> <span class=\\\"\\\" style=\\\"color: inherit; font-size: 10px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"> </span><p style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\\\"><span style=\\\"color: #000000; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">Thank you for subscribing to %LISTNAME%!</span></p></td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin3\\\" valign=\\\"top\\\" style=\\\"padding: 0; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row3\\\" class=\\\"layout layout-row widget _widget_text style3\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding3\\\" valign=\\\"top\\\" style=\\\"padding: 0 20px 20px 20px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div3\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\"> <span class=\\\"\\\" style=\\\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"> </span><p style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\\\"><span style=\\\"color: inherit; font-size: 13px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">You or someone has subscribed to this list on %SUBDATE% using the address %EMAIL%.</span></p></td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin4\\\" valign=\\\"top\\\" style=\\\"padding: 0 20px 0 20px; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row4\\\" class=\\\"layout layout-row widget _widget_text style4\\\" style=\\\"margin: 0; padding: 0; background-color: #ffffff;\\\"><td id=\\\"layout-row-padding4\\\" valign=\\\"top\\\" style=\\\"background-color: #ffffff; padding: 30px 30px 20px 30px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div4\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\"> <span class=\\\"\\\" style=\\\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"> </span><p style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\\\"><span class=\\\"\\\" style=\\\"color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\">To confirm that you wish to be subscribed, please click the link below:</span></p></td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin5\\\" valign=\\\"top\\\" style=\\\"padding: 0 20px 0 20px; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row5\\\" class=\\\"layout layout-row widget _widget_button style5\\\" style=\\\"background-color: #ffffff;\\\"><td id=\\\"layout-row-padding5\\\" valign=\\\"top\\\" style=\\\"background-color: #ffffff; padding: 0px 30px 30px 30px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td class=\\\"td_button td_block customizable\\\" valign=\\\"top\\\" align=\\\"left\\\" width=\\\"550\\\"> <div class=\\\"button-wrapper\\\" style=\\\"margin: 0; outline: none; padding: 0; text-align: center;\\\">\\n<!--[if mso]> <v:roundrect xmlns:v=\\\"urn:schemas-microsoft-com:vml\\\" xmlns:w=\\\"urn:schemas-microsoft-com:office:word\\\" href=\\\"%CONFIRMLINK%\\\" style=\\\"v-text-anchor:middle; width:202px; height:64px; \\\" arcsize=\\\"10%\\\" strokecolor=\\\"#4dcba9\\\" strokeweight=\\\"1pt\\\" fillcolor=\\\"#4dcba9\\\" o:button=\\\"true\\\" o:allowincell=\\\"true\\\" o:allowoverlap=\\\"false\\\" > <v:textbox inset=\\\"2px,2px,2px,2px\\\"> <center style=\\\"color:#ffffff;font-family:Arial; font-size:14px; line-height: 1.1;\\\">Confirm My Subscription</center> </v:textbox> </v:roundrect>\\n<![endif]--> <a href=\\\"%CONFIRMLINK%\\\" style=\\\"margin: 0; outline: none; padding: 14px; color: #ffffff; background-color: #4dcba9; border: 1px solid #4dcba9; border-radius: 4px; font-family: Arial; font-size: 14px; display: inline-block; line-height: 1.1; text-align: center; text-decoration: none; mso-hide: all;\\\"> <span style=\\\"color:#ffffff;font-family:Arial;font-size:14px;\\\"> Confirm My Subscription </span> </a> </div>\\n</td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin6\\\" valign=\\\"top\\\" style=\\\"padding: 0; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row6\\\" class=\\\"layout layout-row widget _widget_text style6\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding6\\\" valign=\\\"top\\\" style=\\\"padding: 20px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div6\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\"> <span class=\\\"\\\" style=\\\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"> </span><p style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\\\"><span style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">If you believe that this is a mistake and you did not intend on subscribing to this list,<br>you can ignore this message and nothing else will happen.</span></p></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></div></body></html>\\n\",\n            \"htmlfetch\": \"now\",\n            \"textfetch\": \"now\",\n            \"hidden\": \"0\",\n            \"preview_mime\": \"\",\n            \"preview_data\": \"\",\n            \"links\": {\n                \"user\": \"https://:account.api-us1.com/api/3/messages/3/user\"\n            },\n            \"id\": \"3\",\n            \"user\": \"1\"\n        },\n        {\n            \"userid\": \"1\",\n            \"ed_instanceid\": \"0\",\n            \"ed_version\": \"1\",\n            \"cdate\": \"2018-08-17T13:48:45-05:00\",\n            \"mdate\": \"2018-08-17T13:48:45-05:00\",\n            \"name\": \"testing\",\n            \"fromname\": \"John Doe\",\n            \"fromemail\": \"noreply@example.com\",\n            \"reply2\": \"\",\n            \"priority\": \"3\",\n            \"charset\": \"utf-8\",\n            \"encoding\": \"8bit\",\n            \"format\": \"mime\",\n            \"subject\": \"testing\",\n            \"preheader_text\": \"\",\n            \"text\": \"testing testing testing\",\n            \"html\": \"<br>\\ntesting testing testing\",\n            \"htmlfetch\": \"now\",\n            \"textfetch\": \"now\",\n            \"hidden\": \"0\",\n            \"preview_mime\": \"\",\n            \"preview_data\": null,\n            \"links\": {\n                \"user\": \"https://:account.api-us1.com/api/3/messages/4/user\"\n            },\n            \"id\": \"4\",\n            \"user\": \"1\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userid": {
                            "type": "string",
                            "example": "1"
                          },
                          "ed_instanceid": {
                            "type": "string",
                            "example": "0"
                          },
                          "ed_version": {
                            "type": "string",
                            "example": "1"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-17T09:47:38-05:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2018-08-17T09:47:38-05:00"
                          },
                          "name": {
                            "type": "string",
                            "example": ""
                          },
                          "fromname": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "fromemail": {
                            "type": "string",
                            "example": "noreply@example.com"
                          },
                          "reply2": {
                            "type": "string",
                            "example": "hello@example.com"
                          },
                          "priority": {
                            "type": "string",
                            "example": "3"
                          },
                          "charset": {
                            "type": "string",
                            "example": "utf-8"
                          },
                          "encoding": {
                            "type": "string",
                            "example": "quoted-printable"
                          },
                          "format": {
                            "type": "string",
                            "example": "mime"
                          },
                          "subject": {
                            "type": "string",
                            "example": "Update your subscription to %LISTNAME%"
                          },
                          "preheader_text": {
                            "type": "string",
                            "example": ""
                          },
                          "text": {
                            "type": "string",
                            "example": " \n\n**Update your subscription details for %LISTNAME%** \n\n \n\nYou or someone entering your email has requested to update your\nsubscription details for the address %EMAIL%.\n\n**To update your subscription details click the link below.**\n\nUpdate My Subscription <%LINK%> \n\n \n\n{\"If you believe that this is a mistake and you did not intend on\nupdating your subscription to this list, you can ignore this message and\nnothing else will happen.\"|alang\n\n "
                          },
                          "html": {
                            "type": "string",
                            "example": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html lang=\"en\" style=\"margin: 0; outline: none; padding: 0;\">\n<head>\n    <!--[if !mso]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><!--<![endif]-->\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <meta http-equiv=\"Content-Language\" content=\"en-us\">\n    <title>Preview</title>\n    <style>\n        .ExternalClass         .ExternalClass p,\n        .ExternalClass ul,\n        .ExternalClass ol         .undoreset div p,\n        .undoreset p     </style>\n    <style>\n        @media only screen and (max-width: 600px),\n        only screen and (max-device-width: 600px)             *             table             thead,\n            tbody,\n            tr             th,\n            td,\n            p         }\n    </style>\n</head>\n<body style=\"font-family: Arial; line-height: 1.1; margin: 0px; background-color: #F2F2F2; width: 100%; text-align: center;\">\n    <div class=\"divbody\" style=\"margin: 0px; outline: none; padding: 0px; font-family: arial; line-height: 1.1; width: 100%; background-color: #F2F2F2; background: #F2F2F2; text-align: center;\">\n        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"font-size: 16px;\">\n            <tr>\n                <td valign=\"top\" height=\"40\" align=\"center\">&nbsp;</td>\n            </tr>\n            <tr>\n                <td align=\"center\" valign=\"top\" width=\"100%\">\n                    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" bgcolor=\"#F2F2F2\" style=\"font-size: 16px; min-width: 650px;\">\n                        <tr>\n                            <td valign=\"top\" align=\"center\">\n                                <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 16px;\">\n                                    <tr>\n                                        <td valign=\"top\" style=\"padding: 0;\">\n                                            <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 14px;\">\n                                                <tr style=\"margin: 0; padding: 0;\">\n                                                    <td valign=\"top\">\n                                                        <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 14px;\">\n                                                            <tr>\n                                                                <td valign=\"top\" align=\"center\" style=\"Margin:0; padding:0; font-size:20px; font-family:Arial,Helvetica; line-height:26px; text-align:center!important;\"><strong style=\"font-weight:bold;\">Update your subscription details for %LISTNAME%</strong>\n                                                                </td>\n                                                            </tr>\n                                                        </table>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td height=\"20\">&nbsp;</td>\n                                    </tr>\n                                    <tr>\n                                        <td valign=\"top\" style=\"padding: 0;\">\n                                            <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 14px;\">\n                                                <tr style=\"margin: 0; padding: 0;\">\n                                                    <td valign=\"top\">\n                                                        <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 14px;\">\n                                                            <tr>\n                                                                <td valign=\"top\" align=\"center\" width=\"610\" style=\"color: inherit; font-size: inherit; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\">You or someone entering your email has requested to update your subscription details for the address %EMAIL%.</td>\n                                                            </tr>\n                                                        </table>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td valign=\"top\" style=\"padding: 20px;\">\n                                            <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; border-collapse: initial !important;\">\n                                                <tr style=\"background-color: #ffffff;\">\n                                                    <td valign=\"top\" style=\"border-color: #c2c2c2; border-style: solid; border-width: 1px;\">\n                                                        <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px;\">\n                                                            <tr>\n                                                                <td valign=\"top\" align=\"center\" style=\"padding:20px; font-size:16px; font-family:Arial,Helvetica; text-align:center;\"><strong style=\"font-weight:bold;\">To update your subscription details click the link below.</strong></td> </tr> <tr> <td valign=\"top\" align=\"center\"> <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px;\"> <tr> <td valign=\"top\" align=\"left\" width=\"558\">\n                                                                                <div class=\"button-wrapper\" style=\"margin: 0; outline: none; padding: 0; text-align: center;\">\n                                                                                    <!--[if mso]> <v:roundrect xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:w=\"urn:schemas-microsoft-com:office:word\" href=\"%LINK%\" style=\"v-text-anchor:middle; width: 558px; height: 50px;\" arcsize=\"10%\" strokecolor=\"#4DCBA9\" strokeweight=\"1pt\" fillcolor=\"#4DCBA9\" > <w:anchorlock/> <center style=\"color:#ffffff;font-family:'Arial'; font-size:16px;\">Update My Subscription</center> </v:roundrect> <![endif]-->\n                                                                                    <a href=\"%LINK%\" style=\"margin: 0; outline: none; padding: 16px; background-color: #4DCBA9; border: 1px solid #4DCBA9; border-radius: 4px; color: #ffffff; font-family: Arial; font-size: 16px; display: inline-block; text-align: center; text-decoration: none; mso-hide: all;\"> <span style=\"color:#ffffff;\">Update My Subscription</span> </a>\n                                                                                </div>\n                                                                            </td>\n    </tr>\n    </table>\n    </td>\n    </tr>\n    <tr>\n        <td height=\"20\">&nbsp;</td>\n    </tr>\n    </table>\n    </td>\n    </tr>\n    </table>\n    </td>\n    </tr>\n    <tr>\n        <td valign=\"top\" style=\"padding: 0;\">\n            <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 14px;\">\n                <tr style=\"margin: 0; padding: 0;\">\n                    <td valign=\"top\" style=\"padding: 20px;\">\n                        <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 14px;\">\n                            <tr>\n                                <td valign=\"top\" height=\"25\" align=\"center\" style=\"Margin:0; padding:0; font-size:13px; line-height:13px; font-family:Arial,Helvetica; text-align:center!important; line-height:20px; text-align:center!important;\">{\"If you believe that this is a mistake and you did not intend on updating your subscription to this list, you can ignore this message and nothing else will happen.\"|alang</td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n            </table>\n        </td>\n    </tr>\n    </table>\n    </td>\n    </tr>\n    </table>\n    </td>\n    </tr>\n    <tr>\n        <td valign=\"top\" height=\"40\" align=\"center\">&nbsp;</td>\n    </tr>\n    </table>\n    </div>\n</body>\n\n</html>"
                          },
                          "htmlfetch": {
                            "type": "string",
                            "example": "now"
                          },
                          "textfetch": {
                            "type": "string",
                            "example": "now"
                          },
                          "hidden": {
                            "type": "string",
                            "example": "0"
                          },
                          "preview_mime": {
                            "type": "string",
                            "example": ""
                          },
                          "preview_data": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/messages/2/user"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          },
                          "user": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a message",
        "description": "",
        "operationId": "create-a-new-message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "properties": {
                      "fromname": {
                        "type": "string",
                        "description": "Name of sender"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of sender"
                      },
                      "reply2": {
                        "type": "string",
                        "description": "Reply email for the recipient to reply to"
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject of message"
                      },
                      "preheader_text": {
                        "type": "string",
                        "description": "Preheader Text"
                      }
                    },
                    "required": [
                      "fromname",
                      "email",
                      "reply2"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "message": {
                      "fromname": "AC Admin",
                      "fromemail": "noreply@example.com",
                      "reply2": "hello@example.com",
                      "subject": "You are subscribing to %LISTNAME%",
                      "preheader_text": "Pre-header Text"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": {\n        \"fromname\": \"AC Admin\",\n        \"fromemail\": \"noreply@example.com\",\n        \"reply2\": \"hello@example.com\",\n        \"subject\": \"You are subscribing to %LISTNAME%\",\n        \"preheader_text\": \"Pre-header Text\",\n        \"text\": \"hello\",\n        \"html\": \"<div>hello</div>\",\n        \"links\": {\n            \"user\": \"https://yourAccountName.api-us1.com/api/3/messages/28/user\",\n            \"hyperlinks\": \"https://yourAccountName.api-us1.com/api/3/messages/28/hyperlinks\"\n        },\n        \"id\": \"28\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "fromname": {
                          "type": "string",
                          "example": "AC Admin"
                        },
                        "fromemail": {
                          "type": "string",
                          "example": "noreply@example.com"
                        },
                        "reply2": {
                          "type": "string",
                          "example": "hello@example.com"
                        },
                        "subject": {
                          "type": "string",
                          "example": "You are subscribing to %LISTNAME%"
                        },
                        "preheader_text": {
                          "type": "string",
                          "example": "Pre-header Text"
                        },
                        "text": {
                          "type": "string",
                          "example": "hello"
                        },
                        "html": {
                          "type": "string",
                          "example": "<div>hello</div>"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/messages/28/user"
                            },
                            "hyperlinks": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/messages/28/hyperlinks"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "28"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groups": {
      "get": {
        "summary": "List all groups",
        "description": "",
        "operationId": "list-all-groups",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"groups\": [\n        {\n            \"title\": \"TEST TITLE\",\n            \"descript\": \"This is a group for admin users (people that can manage content)\",\n            \"unsubscribelink\": \"0\",\n            \"optinconfirm\": \"0\",\n            \"p_admin\": \"1\",\n            \"pgListAdd\": \"1\",\n            \"pgListEdit\": \"1\",\n            \"pgListDelete\": \"1\",\n            \"pgListHeaders\": \"1\",\n            \"pgListEmailaccount\": \"1\",\n            \"pgListBounce\": \"1\",\n            \"pgMessageAdd\": \"1\",\n            \"pgMessageEdit\": \"1\",\n            \"pgMessageDelete\": \"1\",\n            \"pgMessageSend\": \"1\",\n            \"pgContactAdd\": \"1\",\n            \"pgContactEdit\": \"1\",\n            \"pgContactDelete\": \"1\",\n            \"pgContactMerge\": \"1\",\n            \"pgContactImport\": \"1\",\n            \"pgContactApprove\": \"1\",\n            \"pgContactExport\": \"1\",\n            \"pgContactSync\": \"1\",\n            \"pgContactFilters\": \"1\",\n            \"pgContactActions\": \"0\",\n            \"pgContactFields\": \"1\",\n            \"pg_user_add\": \"1\",\n            \"pg_user_edit\": \"1\",\n            \"pg_user_delete\": \"1\",\n            \"pgGroupAdd\": \"1\",\n            \"pgGroupEdit\": \"1\",\n            \"pgGroupDelete\": \"1\",\n            \"pgTemplateAdd\": \"1\",\n            \"pgTemplateEdit\": \"1\",\n            \"pgTemplateDelete\": \"1\",\n            \"pgPersonalizationAdd\": \"1\",\n            \"pgPersonalizationEdit\": \"1\",\n            \"pgPersonalizationDelete\": \"1\",\n            \"pgAutomationManage\": \"1\",\n            \"pgFormEdit\": \"1\",\n            \"pgReportsCampaign\": \"1\",\n            \"pgReportsList\": \"1\",\n            \"pgReportsUser\": \"1\",\n            \"pgReportsTrend\": \"1\",\n            \"pgStartupReports\": \"1\",\n            \"pgStartupGettingstarted\": \"1\",\n            \"pgDeal\": \"1\",\n            \"pgDealDelete\": \"1\",\n            \"pgDealReassign\": \"1\",\n            \"pgDealGroupAdd\": \"1\",\n            \"pgDealGroupEdit\": \"1\",\n            \"pgDealGroupDelete\": \"1\",\n            \"pgSavedResponsesManage\": \"1\",\n            \"sdate\": \"2018-09-20T10:51:14-05:00\",\n            \"reqApproval\": \"0\",\n            \"reqApproval1st\": \"2\",\n            \"reqApprovalNotify\": \"\",\n            \"socialdata\": \"0\",\n            \"links\": {\n                \"userGroups\": \"https://:account.api-us1.com/api/3/groups/3/userGroups\",\n                \"groupLimit\": \"https://:account.api-us1.com/api/3/groups/3/groupLimit\",\n                \"dealGroupGroups\": \"https://:account.api-us1.com/api/3/groups/3/dealGroupGroups\",\n                \"listGroups\": \"https://:account.api-us1.com/api/3/groups/3/listGroups\",\n                \"addressGroups\": \"https://:account.api-us1.com/api/3/groups/3/addressGroups\",\n                \"automationGroups\": \"https://:account.api-us1.com/api/3/groups/3/automationGroups\"\n            },\n            \"id\": \"3\"\n        },\n        {\n            \"title\": \"TEST TITLE\",\n            \"descript\": null,\n            \"unsubscribelink\": \"0\",\n            \"optinconfirm\": \"0\",\n            \"p_admin\": \"1\",\n            \"pgListAdd\": \"0\",\n            \"pgListEdit\": \"0\",\n            \"pgListDelete\": \"0\",\n            \"pgListHeaders\": \"0\",\n            \"pgListEmailaccount\": \"0\",\n            \"pgListBounce\": \"0\",\n            \"pgMessageAdd\": \"0\",\n            \"pgMessageEdit\": \"0\",\n            \"pgMessageDelete\": \"0\",\n            \"pgMessageSend\": \"0\",\n            \"pgContactAdd\": \"0\",\n            \"pgContactEdit\": \"0\",\n            \"pgContactDelete\": \"0\",\n            \"pgContactMerge\": \"0\",\n            \"pgContactImport\": \"0\",\n            \"pgContactApprove\": \"0\",\n            \"pgContactExport\": \"0\",\n            \"pgContactSync\": \"0\",\n            \"pgContactFilters\": \"0\",\n            \"pgContactActions\": \"0\",\n            \"pgContactFields\": \"0\",\n            \"pg_user_add\": \"0\",\n            \"pg_user_edit\": \"0\",\n            \"pg_user_delete\": \"0\",\n            \"pgGroupAdd\": \"0\",\n            \"pgGroupEdit\": \"0\",\n            \"pgGroupDelete\": \"0\",\n            \"pgTemplateAdd\": \"0\",\n            \"pgTemplateEdit\": \"0\",\n            \"pgTemplateDelete\": \"0\",\n            \"pgPersonalizationAdd\": \"0\",\n            \"pgPersonalizationEdit\": \"0\",\n            \"pgPersonalizationDelete\": \"0\",\n            \"pgAutomationManage\": \"0\",\n            \"pgFormEdit\": \"0\",\n            \"pgReportsCampaign\": \"0\",\n            \"pgReportsList\": \"0\",\n            \"pgReportsUser\": \"0\",\n            \"pgReportsTrend\": \"1\",\n            \"pgStartupReports\": \"0\",\n            \"pgStartupGettingstarted\": \"1\",\n            \"pgDeal\": \"1\",\n            \"pgDealDelete\": \"1\",\n            \"pgDealReassign\": \"1\",\n            \"pgDealGroupAdd\": \"1\",\n            \"pgDealGroupEdit\": \"1\",\n            \"pgDealGroupDelete\": \"1\",\n            \"pgSavedResponsesManage\": \"0\",\n            \"sdate\": null,\n            \"reqApproval\": \"0\",\n            \"reqApproval1st\": \"2\",\n            \"reqApprovalNotify\": \"\",\n            \"socialdata\": \"0\",\n            \"links\": {\n                \"userGroups\": \"https://:account.api-us1.com/api/3/groups/5/userGroups\",\n                \"groupLimit\": \"https://:account.api-us1.com/api/3/groups/5/groupLimit\",\n                \"dealGroupGroups\": \"https://:account.api-us1.com/api/3/groups/5/dealGroupGroups\",\n                \"listGroups\": \"https://:account.api-us1.com/api/3/groups/5/listGroups\",\n                \"addressGroups\": \"https://:account.api-us1.com/api/3/groups/5/addressGroups\",\n                \"automationGroups\": \"https://:account.api-us1.com/api/3/groups/5/automationGroups\"\n            },\n            \"id\": \"5\"\n        },\n        {\n            \"title\": \"TEST TITLE\",\n            \"descript\": null,\n            \"unsubscribelink\": \"0\",\n            \"optinconfirm\": \"0\",\n            \"p_admin\": \"1\",\n            \"pgListAdd\": \"0\",\n            \"pgListEdit\": \"0\",\n            \"pgListDelete\": \"0\",\n            \"pgListHeaders\": \"0\",\n            \"pgListEmailaccount\": \"0\",\n            \"pgListBounce\": \"0\",\n            \"pgMessageAdd\": \"0\",\n            \"pgMessageEdit\": \"0\",\n            \"pgMessageDelete\": \"0\",\n            \"pgMessageSend\": \"0\",\n            \"pgContactAdd\": \"0\",\n            \"pgContactEdit\": \"0\",\n            \"pgContactDelete\": \"0\",\n            \"pgContactMerge\": \"0\",\n            \"pgContactImport\": \"0\",\n            \"pgContactApprove\": \"0\",\n            \"pgContactExport\": \"0\",\n            \"pgContactSync\": \"0\",\n            \"pgContactFilters\": \"0\",\n            \"pgContactActions\": \"0\",\n            \"pgContactFields\": \"0\",\n            \"pg_user_add\": \"0\",\n            \"pg_user_edit\": \"0\",\n            \"pg_user_delete\": \"0\",\n            \"pgGroupAdd\": \"0\",\n            \"pgGroupEdit\": \"0\",\n            \"pgGroupDelete\": \"0\",\n            \"pgTemplateAdd\": \"0\",\n            \"pgTemplateEdit\": \"0\",\n            \"pgTemplateDelete\": \"0\",\n            \"pgPersonalizationAdd\": \"0\",\n            \"pgPersonalizationEdit\": \"0\",\n            \"pgPersonalizationDelete\": \"0\",\n            \"pgAutomationManage\": \"0\",\n            \"pgFormEdit\": \"0\",\n            \"pgReportsCampaign\": \"0\",\n            \"pgReportsList\": \"0\",\n            \"pgReportsUser\": \"0\",\n            \"pgReportsTrend\": \"1\",\n            \"pgStartupReports\": \"0\",\n            \"pgStartupGettingstarted\": \"1\",\n            \"pgDeal\": \"1\",\n            \"pgDealDelete\": \"1\",\n            \"pgDealReassign\": \"1\",\n            \"pgDealGroupAdd\": \"1\",\n            \"pgDealGroupEdit\": \"1\",\n            \"pgDealGroupDelete\": \"1\",\n            \"pgSavedResponsesManage\": \"0\",\n            \"sdate\": null,\n            \"reqApproval\": \"0\",\n            \"reqApproval1st\": \"2\",\n            \"reqApprovalNotify\": \"\",\n            \"socialdata\": \"0\",\n            \"links\": {\n                \"userGroups\": \"https://:account.api-us1.com/api/3/groups/6/userGroups\",\n                \"groupLimit\": \"https://:account.api-us1.com/api/3/groups/6/groupLimit\",\n                \"dealGroupGroups\": \"https://:account.api-us1.com/api/3/groups/6/dealGroupGroups\",\n                \"listGroups\": \"https://:account.api-us1.com/api/3/groups/6/listGroups\",\n                \"addressGroups\": \"https://:account.api-us1.com/api/3/groups/6/addressGroups\",\n                \"automationGroups\": \"https://:account.api-us1.com/api/3/groups/6/automationGroups\"\n            },\n            \"id\": \"6\"\n        },\n        {\n            \"title\": \"TEST TITLE\",\n            \"descript\": null,\n            \"unsubscribelink\": \"0\",\n            \"optinconfirm\": \"0\",\n            \"p_admin\": \"1\",\n            \"pgListAdd\": \"0\",\n            \"pgListEdit\": \"0\",\n            \"pgListDelete\": \"0\",\n            \"pgListHeaders\": \"0\",\n            \"pgListEmailaccount\": \"0\",\n            \"pgListBounce\": \"0\",\n            \"pgMessageAdd\": \"0\",\n            \"pgMessageEdit\": \"0\",\n            \"pgMessageDelete\": \"0\",\n            \"pgMessageSend\": \"0\",\n            \"pgContactAdd\": \"0\",\n            \"pgContactEdit\": \"0\",\n            \"pgContactDelete\": \"0\",\n            \"pgContactMerge\": \"0\",\n            \"pgContactImport\": \"0\",\n            \"pgContactApprove\": \"0\",\n            \"pgContactExport\": \"0\",\n            \"pgContactSync\": \"0\",\n            \"pgContactFilters\": \"0\",\n            \"pgContactActions\": \"0\",\n            \"pgContactFields\": \"0\",\n            \"pg_user_add\": \"0\",\n            \"pg_user_edit\": \"0\",\n            \"pg_user_delete\": \"0\",\n            \"pgGroupAdd\": \"0\",\n            \"pgGroupEdit\": \"0\",\n            \"pgGroupDelete\": \"0\",\n            \"pgTemplateAdd\": \"0\",\n            \"pgTemplateEdit\": \"0\",\n            \"pgTemplateDelete\": \"0\",\n            \"pgPersonalizationAdd\": \"0\",\n            \"pgPersonalizationEdit\": \"0\",\n            \"pgPersonalizationDelete\": \"0\",\n            \"pgAutomationManage\": \"0\",\n            \"pgFormEdit\": \"0\",\n            \"pgReportsCampaign\": \"0\",\n            \"pgReportsList\": \"0\",\n            \"pgReportsUser\": \"0\",\n            \"pgReportsTrend\": \"1\",\n            \"pgStartupReports\": \"0\",\n            \"pgStartupGettingstarted\": \"1\",\n            \"pgDeal\": \"1\",\n            \"pgDealDelete\": \"1\",\n            \"pgDealReassign\": \"1\",\n            \"pgDealGroupAdd\": \"1\",\n            \"pgDealGroupEdit\": \"1\",\n            \"pgDealGroupDelete\": \"1\",\n            \"pgSavedResponsesManage\": \"0\",\n            \"sdate\": null,\n            \"reqApproval\": \"0\",\n            \"reqApproval1st\": \"2\",\n            \"reqApprovalNotify\": \"\",\n            \"socialdata\": \"0\",\n            \"links\": {\n                \"userGroups\": \"https://:account.api-us1.com/api/3/groups/7/userGroups\",\n                \"groupLimit\": \"https://:account.api-us1.com/api/3/groups/7/groupLimit\",\n                \"dealGroupGroups\": \"https://:account.api-us1.com/api/3/groups/7/dealGroupGroups\",\n                \"listGroups\": \"https://:account.api-us1.com/api/3/groups/7/listGroups\",\n                \"addressGroups\": \"https://:account.api-us1.com/api/3/groups/7/addressGroups\",\n                \"automationGroups\": \"https://:account.api-us1.com/api/3/groups/7/automationGroups\"\n            },\n            \"id\": \"7\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"4\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "TEST TITLE"
                          },
                          "descript": {
                            "type": "string",
                            "example": "This is a group for admin users (people that can manage content)"
                          },
                          "unsubscribelink": {
                            "type": "string",
                            "example": "0"
                          },
                          "optinconfirm": {
                            "type": "string",
                            "example": "0"
                          },
                          "p_admin": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgListAdd": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgListEdit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgListDelete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgListHeaders": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgListEmailaccount": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgListBounce": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgMessageAdd": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgMessageEdit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgMessageDelete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgMessageSend": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactAdd": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactEdit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactDelete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactMerge": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactImport": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactApprove": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactExport": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactSync": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactFilters": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgContactActions": {
                            "type": "string",
                            "example": "0"
                          },
                          "pgContactFields": {
                            "type": "string",
                            "example": "1"
                          },
                          "pg_user_add": {
                            "type": "string",
                            "example": "1"
                          },
                          "pg_user_edit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pg_user_delete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgGroupAdd": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgGroupEdit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgGroupDelete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgTemplateAdd": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgTemplateEdit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgTemplateDelete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgPersonalizationAdd": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgPersonalizationEdit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgPersonalizationDelete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgAutomationManage": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgFormEdit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgReportsCampaign": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgReportsList": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgReportsUser": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgReportsTrend": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgStartupReports": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgStartupGettingstarted": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgDeal": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgDealDelete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgDealReassign": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgDealGroupAdd": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgDealGroupEdit": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgDealGroupDelete": {
                            "type": "string",
                            "example": "1"
                          },
                          "pgSavedResponsesManage": {
                            "type": "string",
                            "example": "1"
                          },
                          "sdate": {
                            "type": "string",
                            "example": "2018-09-20T10:51:14-05:00"
                          },
                          "reqApproval": {
                            "type": "string",
                            "example": "0"
                          },
                          "reqApproval1st": {
                            "type": "string",
                            "example": "2"
                          },
                          "reqApprovalNotify": {
                            "type": "string",
                            "example": ""
                          },
                          "socialdata": {
                            "type": "string",
                            "example": "0"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "userGroups": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/groups/3/userGroups"
                              },
                              "groupLimit": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/groups/3/groupLimit"
                              },
                              "dealGroupGroups": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/groups/3/dealGroupGroups"
                              },
                              "listGroups": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/groups/3/listGroups"
                              },
                              "addressGroups": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/groups/3/addressGroups"
                              },
                              "automationGroups": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/groups/3/automationGroups"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "3"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "4"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a group",
        "description": "",
        "operationId": "create-a-new-group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the group to be created"
                      },
                      "descript": {
                        "type": "string",
                        "description": "Group description"
                      },
                      "pgMessageAdd": {
                        "type": "boolean",
                        "description": "Permission for adding messages",
                        "default": false
                      },
                      "unsubscribelink": {
                        "type": "boolean",
                        "description": "Whether or not to force unsubscribe links",
                        "default": false
                      },
                      "optinconfirm": {
                        "type": "boolean",
                        "description": "Whether or not to force optin confirm for this group",
                        "default": false
                      },
                      "pgListAdd": {
                        "type": "boolean",
                        "description": "Permission for adding lists",
                        "default": false
                      },
                      "pgListEdit": {
                        "type": "boolean",
                        "description": "Permission for editing lists",
                        "default": false
                      },
                      "pgListDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting lists",
                        "default": false
                      },
                      "pgListHeaders": {
                        "type": "boolean",
                        "description": "Permission for managing custom email headers",
                        "default": false
                      },
                      "pgListEmailaccount": {
                        "type": "boolean",
                        "description": "Permission for managing Unsubscribe By Email",
                        "default": false
                      },
                      "pgListBounce": {
                        "type": "boolean",
                        "description": "Permission for accessing list bounce settings",
                        "default": false
                      },
                      "pgMessageEdit": {
                        "type": "boolean",
                        "description": "Permission for editing messages",
                        "default": false
                      },
                      "pgMessageDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting messages",
                        "default": false
                      },
                      "pgMessageSend": {
                        "type": "boolean",
                        "description": "Permission for sending messages",
                        "default": false
                      },
                      "pgContactAdd": {
                        "type": "boolean",
                        "description": "Permission for adding contacts",
                        "default": false
                      },
                      "pgContactEdit": {
                        "type": "boolean",
                        "description": "Permission for editing contacts",
                        "default": false
                      },
                      "pgContactDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting contacts",
                        "default": false
                      },
                      "pgContactMerge": {
                        "type": "boolean",
                        "description": "Permission for merging contacts",
                        "default": false
                      },
                      "pgContactImport": {
                        "type": "boolean",
                        "description": "Permission for importing contacts",
                        "default": false
                      },
                      "pgContactApprove": {
                        "type": "boolean",
                        "description": "Permission for approving contacts",
                        "default": false
                      },
                      "pgContactExport": {
                        "type": "boolean",
                        "description": "Permission for exporting contacts",
                        "default": false
                      },
                      "pgContactSync": {
                        "type": "boolean",
                        "description": "Permission for syncing contacts",
                        "default": false
                      },
                      "pgContactFilters": {
                        "type": "boolean",
                        "description": "Permission for managing contact list segments",
                        "default": false
                      },
                      "pgContactActions": {
                        "type": "boolean",
                        "description": "Permission for managing contact actions",
                        "default": false
                      },
                      "pgContactFields": {
                        "type": "boolean",
                        "description": "Permission for managing contact custom fields",
                        "default": false
                      },
                      "pg_user_add": {
                        "type": "boolean",
                        "description": "Permission for adding users",
                        "default": false
                      },
                      "pg_user_edit": {
                        "type": "boolean",
                        "description": "Permission for editing users",
                        "default": false
                      },
                      "pg_user_delete": {
                        "type": "boolean",
                        "description": "Permission for deleting users",
                        "default": false
                      },
                      "pgGroupAdd": {
                        "type": "boolean",
                        "description": "Permission for adding groups",
                        "default": false
                      },
                      "pgGroupEdit": {
                        "type": "boolean",
                        "description": "Permission for editing groups",
                        "default": false
                      },
                      "pgGroupDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting groups",
                        "default": false
                      },
                      "pgTemplateAdd": {
                        "type": "boolean",
                        "description": "Permission for adding templates",
                        "default": false
                      },
                      "pgTemplateEdit": {
                        "type": "boolean",
                        "description": "Permission for editing templates",
                        "default": false
                      },
                      "pgTemplateDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting templates",
                        "default": false
                      },
                      "pgPersonalizationAdd": {
                        "type": "boolean",
                        "description": "Permission for adding personalization tags",
                        "default": false
                      },
                      "pgPersonalizationEdit": {
                        "type": "boolean",
                        "description": "Permission for editing personalization tags",
                        "default": false
                      },
                      "pgPersonalizationDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting personalization tags",
                        "default": false
                      },
                      "pgAutomationManage": {
                        "type": "boolean",
                        "default": false
                      },
                      "pgFormEdit": {
                        "type": "boolean",
                        "description": "Permission for editing subscription forms",
                        "default": false
                      },
                      "pgReportsCampaign": {
                        "type": "boolean",
                        "description": "Permission for viewing campaign reports",
                        "default": false
                      },
                      "pgReportsList": {
                        "type": "boolean",
                        "description": "Permission for viewing list reports",
                        "default": false
                      },
                      "pgReportsUser": {
                        "type": "boolean",
                        "description": "Permission for viewing user reports",
                        "default": false
                      },
                      "pgStartupReports": {
                        "type": "boolean",
                        "description": "Campaign ID of last campaign report viewed to decide whether to show link on startup",
                        "default": false
                      },
                      "pgReportsTrend": {
                        "type": "boolean",
                        "description": "Permission for viewing trend reports",
                        "default": false
                      },
                      "pgStartupGettingstarted": {
                        "type": "boolean",
                        "description": "Whether or not to show the \"getting started\" tutorial on overview page",
                        "default": false
                      },
                      "pgDeal": {
                        "type": "boolean",
                        "description": "Permission for viewing deals",
                        "default": false
                      },
                      "pgDealDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting deals",
                        "default": false
                      },
                      "pgDealReassign": {
                        "type": "boolean",
                        "description": "Permission for reassigning deals",
                        "default": false
                      },
                      "pgDealGroupAdd": {
                        "type": "boolean",
                        "description": "Permission for adding deal groups",
                        "default": false
                      },
                      "pgDealGroupEdit": {
                        "type": "boolean",
                        "description": "Permission for editing deal groups",
                        "default": false
                      },
                      "pgDealGroupDelete": {
                        "type": "boolean",
                        "description": "Permission for deleting deals groups",
                        "default": false
                      },
                      "pgSavedResponsesManage": {
                        "type": "boolean",
                        "description": "Permission for managing saved responses",
                        "default": false
                      },
                      "pgTagManage": {
                        "type": "boolean",
                        "description": "Permission for managing tags",
                        "default": false
                      },
                      "reqApproval": {
                        "type": "boolean",
                        "description": "Whether or not this group requires all campaigns to be approved",
                        "default": false
                      },
                      "reqApproval1st": {
                        "type": "boolean",
                        "description": "Whether or not this group requires first campaign to be approved",
                        "default": false
                      },
                      "reqApprovalNotify": {
                        "type": "string",
                        "description": "Who to notify for approval related issues (email)"
                      },
                      "socialdata": {
                        "type": "boolean",
                        "description": "Whether or not to show social links in campaigns sent from this group",
                        "default": false
                      }
                    },
                    "required": [
                      "title"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "group": {
                      "title": "TEST TITLE",
                      "descript": "Description Text",
                      "unsubscribelink": "0",
                      "optinconfirm": "0",
                      "pgListAdd": 1,
                      "pgListEdit": 1,
                      "pgListDelete": 1,
                      "pgListHeaders": 1,
                      "pgListEmailaccount": 1,
                      "pgListBounce": 1,
                      "pgMessageAdd": 1,
                      "pgMessageEdit": 1,
                      "pgMessageDelete": 1,
                      "pgMessageSend": 1,
                      "pgContactAdd": 1,
                      "pgContactEdit": 1,
                      "pgContactDelete": 1,
                      "pgContactMerge": 1,
                      "pgContactImport": 1,
                      "pgContactApprove": 1,
                      "pgContactExport": 1,
                      "pgContactSync": 1,
                      "pgContactFilters": 1,
                      "pgContactActions": 1,
                      "pgContactFields": 1,
                      "pg_user_add": "0",
                      "pg_user_edit": "0",
                      "pg_user_delete": "0",
                      "pgGroupAdd": 1,
                      "pgGroupEdit": 1,
                      "pgGroupDelete": 1,
                      "pgTemplateAdd": 1,
                      "pgTemplateEdit": 1,
                      "pgTemplateDelete": 1,
                      "pgPersonalizationAdd": 1,
                      "pgPersonalizationEdit": 1,
                      "pgPersonalizationDelete": 1,
                      "pgAutomationManage": 1,
                      "pgFormEdit": 1,
                      "pgReportsCampaign": 1,
                      "pgReportsList": 1,
                      "pgReportsUser": 1,
                      "pgReportsTrend": 1,
                      "pgStartupReports": 1,
                      "pgStartupGettingstarted": 1,
                      "pgDeal": 1,
                      "pgDealDelete": 1,
                      "pgDealReassign": 1,
                      "pgDealGroupAdd": 1,
                      "pgDealGroupEdit": 1,
                      "pgDealGroupDelete": 1,
                      "pgSavedResponsesManage": 1,
                      "reqApproval": 1,
                      "reqApproval1st": 1,
                      "reqApprovalNotify": "JohnDoe@gmail.com",
                      "socialdata": 0
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"group\": {\n        \"title\": \"My Groups Title\",\n        \"p_admin\": 1,\n        \"links\": {\n            \"userGroups\": \"https://:account.api-us1.com/api/:version/groups/7/userGroups\",\n            \"groupLimit\": \"https://:account.api-us1.com/api/:version/groups/7/groupLimit\",\n            \"dealGroupGroups\": \"https://:account.api-us1.com/api/:version/groups/7/dealGroupGroups\",\n            \"listGroups\": \"https://:account.api-us1.com/api/:version/groups/7/listGroups\",\n            \"addressGroups\": \"https://:account.api-us1.com/api/:version/groups/7/addressGroups\",\n            \"automationGroups\": \"https://:account.api-us1.com/api/:version/groups/7/automationGroups\"\n        },\n        \"id\": \"7\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "My Groups Title"
                        },
                        "p_admin": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "userGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/userGroups"
                            },
                            "groupLimit": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/groupLimit"
                            },
                            "dealGroupGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/dealGroupGroups"
                            },
                            "listGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/listGroups"
                            },
                            "addressGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/addressGroups"
                            },
                            "automationGroups": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/groups/7/automationGroups"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "7"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/messages/{id}": {
      "put": {
        "summary": "Update a message",
        "description": "",
        "operationId": "update-a-message",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the message to update",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "message.fromname",
            "in": "header",
            "description": "Name of sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message.email",
            "in": "header",
            "description": "Email of sender",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message.reply2",
            "in": "header",
            "description": "Reply email for the recipient to reply to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message.subject",
            "in": "header",
            "description": "Subject of message",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message.preheader_text",
            "in": "header",
            "description": "Preheader Text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": {\n        \"userid\": \"1\",\n        \"ed_instanceid\": \"1\",\n        \"ed_version\": \"2\",\n        \"cdate\": \"2018-08-06T16:31:45-05:00\",\n        \"mdate\": \"2018-08-06T16:33:23-05:00\",\n        \"name\": \"Hello, %FIRSTNAME%\",\n        \"fromname\": \"John Doe\",\n        \"fromemail\": \"noreply@example.com\",\n        \"reply2\": \"hello@example.com\",\n        \"priority\": \"3\",\n        \"charset\": \"utf-8\",\n        \"encoding\": \"8bit\",\n        \"format\": \"mime\",\n        \"subject\": \"You are subscribing to %LISTNAME%\",\n        \"preheader_text\": \"Pre-header Text\",\n        \"text\": \" \\n\\n \\n\\n \\n\\nUndercover \\n\\n**Lorem ipsum dolar sit amet, consectetur adipiscing elit.**\\n\\n**A**liquam finibus tempus nulla gravida tincidunt. Donec auctor a felis\\nnon pulvinar. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\nVestibulum at hendrerit lectus. Mauris turpis ligula, rutrum quis leo\\nsit amet, finibus laoreet urna. Nullam et lacinia nunc, ac gravida\\nlibero. Nunc tellus erat, ullamcorper a nulla ut, pharetra auctor justo.\\n\\nProin volutpat nunc at nulla consectetur suscipit. Fusce malesuada nisi\\nnulla, sed ornare turpis gravida at. Nam mollis ipsum eu vestibulum\\nscelerisque.\\n\\nSuspendisse ultrices a arcu vel cursus. Mauris quis luctus lacus.\\nAliquam iaculis, augue sit amet euismod viverra, lorem nulla consequat\\nleo, non congue lorem ipsum nec magna. Donec a lorem eget nunc posuere\\nconvallis vitae imperdiet purus.\\n\\nMauris turpis ligula, rutrum quis leo sit amet, finibus laoreet urna.\\nNullam et lacinia nunc, ac gravida libero. Nunc tellus erat, ullamcorper\\na nulla ut, pharetra auctor justo.\\n\\n \\n\\n01 - Lorem ipsum dolar sit \\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit.  Donec\\ntristique, tellus et sodales ornare, orci risus venenatis metus, et\\nscelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed\\nmetus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus\\negestas.\\n\\n02 - Lorem ipsum dolar sit \\n\\n \\n\\n \\n\\n \\n\\n\\\"Lorem ipsum dolar sit amet, consectetur.\\\"\\n\\n- S. Williams\\n\\n \\n\\n \\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\\ntristique, tellus et sodales ornare, orci risus venenatis metus, et\\nscelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed\\nmetus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus\\negestas.\\n\\nDonec tristique, tellus et sodales ornare, orci risus venenatis metus,\\net scelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed\\nmetus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus\\negestas.\\n\\n \\n\\n%SENDER-INFO-SINGLELINE%\\n\\nClick here to unsubscribe <%UNSUBSCRIBELINK%>\",\n        \"html\": \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\\n<html lang=\\\"en\\\" style=\\\"margin: 0; outline: none; padding: 0;\\\"><head><!--[if !mso]><meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"><!--<![endif]--><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"Content-Language\\\" content=\\\"locale_contentlang\\\"><meta name=\\\"format-detection\\\" content=\\\"telephone=no\\\"><meta name=\\\"format-detection\\\" content=\\\"date=no\\\"><meta name=\\\"format-detection\\\" content=\\\"address=no\\\"><meta name=\\\"format-detection\\\" content=\\\"email=no\\\"><style data-ac-keep=\\\"true\\\">\\n.ExternalClass {width:100%; background:inherit; background-color:inherit;}\\n.ExternalClass p, .ExternalClass ul, .ExternalClass ol { Margin: 0; }\\n.undoreset div p, .undoreset p { margin-bottom: 20px; }\\ndiv[class^=\\\"aolmail_divbody\\\"] { overflow: auto; }\\n[owa] #ac-footer { padding: 20px 0px!important; background:inherit; background-color:inherit; }\\n</style><style data-ac-keep=\\\"true\\\">\\n@media only screen and (max-width: 600px) {\\t/*-------------------------------------------------------------------------*\\\\ Abandoned Cart widget \\\\*------------------------------------------------------------------------*/ .td_abandoned-cart img {display: block;padding-right: 0 !important;padding-bottom: 0 !important;width: 100% !important;max-width: 100% !important;height: auto !important;} body { padding: 0!important; font-size:1em!important; } * { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; } *[class].divbody {-webkit-text-size-adjust:none !important; width:auto !important;} *[class].td_picture img {width:auto !important;} *[class].td_text { line-height: 110%; } *[class].td_button { width: auto; } /* Collapse all block elements */ :not(.body) table { display: block!important; float:none!important; border-collapse:collapse !important; width:100% !important; min-width:100% !important; clear:both!important; } :not(.body) thead, :not(.body) tbody, :not(.body) tr { display:block!important; float:none!important; width:100% !important; } :not(.body) th, :not(.body) td, :not(.body) p { display:block!important; float:none!important; width:100% !important; clear:both!important; } /* Remove browser default styling for elements */ ul, ol { margin-left: 20px; margin-bottom: 10px; margin-top: 10px; -webkit-margin-before: 0; -webkit-margin-after: 0; -webkit-padding-start: 0; } /* Set default height for spacer once collapse */ *[class].spacer { height: auto!important; } a[href^=date]{ color:inherit !important; text-decoration:none !important;} a[href^=telephone]{ color:inherit !important; text-decoration:none !important;} a[href^=address]{ color:inherit !important; text-decoration:none !important;} a[href^=email]{ color:inherit !important; text-decoration:none !important;} /* Default table cell height */ /* Default social icons */ *[class].ac-social-icon-16 {width:16px !important; height:16px !important;} *[class].ac-social-icon-24 {width:24px !important; height:24px !important;} *[class].ac-social-icon-28 {width:28px !important; height:28px !important;} *[class].__ac_social_icons { margin-right: 0px !important; } }\\n</style><style data-ac-keep=\\\"true\\\"> @media only screen and (max-width: 320px) { #layout-row1 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row3 img { width: 100% !important; height: auto !important; max-width: 184px !important; } #layout-row4 img { width: 100% !important; height: auto !important; max-width: 320px !important; } #layout-row10 .break-line { width: 100% !important; margin: auto !important; } #layout-row13 img { width: 100% !important; height: auto !important; max-width: 320px !important; } #layout-row14 img { width: 100% !important; height: auto !important; max-width: 320px !important; } #layout-row18 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row20 .break-line { width: 100% !important; margin: auto !important; } #layout-row25 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row29 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } .td_rss .rss-item img.iphone_large_image { width: auto !important; } u + .body { display: table !important; width: 100vw !important; min-width: 100vw !important; } u + .body table { display: table !important; width: 100% !important; min-width: 100% !important; } u + .body td { display: block !important; width: 100% !important; min-width: 100% !important; } u + .body img { display: inline-block !important; margin: auto !important; width: auto !important; vertical-align: bottom !important; } u + .body center { display: block !important; margin: auto !important; width: 100% !important; min-width: 100% !important; text-align: center !important; } u + .body table._ac_social_table, u + .body table._ac_social_table td, u + .body table._ac_social_table div, u + .body table._ac_social_table a { display: inline-block !important; margin: auto !important; width: auto !important; min-width: auto !important; text-align: center !important; } u + .body table._ac_social_table img { display: inline-block !important; margin: auto !important; width: 32px !important; min-width: 32px !important; max-width: 32px !important; }\\n}\\n@media only screen and (max-width: 375px) { #layout-row1 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row3 img { width: 100% !important; height: auto !important; max-width: 184px !important; } #layout-row4 img { width: 100% !important; height: auto !important; max-width: 375px !important; } #layout-row10 .break-line { width: 100% !important; margin: auto !important; } #layout-row13 img { width: 100% !important; height: auto !important; max-width: 375px !important; } #layout-row14 img { width: 100% !important; height: auto !important; max-width: 375px !important; } #layout-row18 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row20 .break-line { width: 100% !important; margin: auto !important; } #layout-row25 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row29 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } .td_rss .rss-item img.iphone_large_image { width: auto !important; } u + .body { display: table !important; width: 100vw !important; min-width: 100vw !important; } u + .body table { display: table !important; width: 100% !important; min-width: 100% !important; } u + .body td { display: block !important; width: 100% !important; min-width: 100% !important; } u + .body img { display: inline-block !important; margin: auto !important; width: auto !important; vertical-align: bottom !important; } u + .body center { display: block !important; margin: auto !important; width: 100% !important; min-width: 100% !important; text-align: center !important; } u + .body table._ac_social_table, u + .body table._ac_social_table td, u + .body table._ac_social_table div, u + .body table._ac_social_table a { display: inline-block !important; margin: auto !important; width: auto !important; min-width: auto !important; text-align: center !important; } u + .body table._ac_social_table img { display: inline-block !important; margin: auto !important; width: 32px !important; min-width: 32px !important; max-width: 32px !important; }\\n}\\n@media only screen and (max-width: 414px) { #layout-row1 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row3 img { width: 100% !important; height: auto !important; max-width: 184px !important; } #layout-row4 img { width: 100% !important; height: auto !important; max-width: 414px !important; } #layout-row10 .break-line { width: 100% !important; margin: auto !important; } #layout-row13 img { width: 100% !important; height: auto !important; max-width: 414px !important; } #layout-row14 img { width: 100% !important; height: auto !important; max-width: 414px !important; } #layout-row18 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row20 .break-line { width: 100% !important; margin: auto !important; } #layout-row25 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row29 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } .td_rss .rss-item img.iphone_large_image { width: auto !important; } u + .body { display: table !important; width: 100vw !important; min-width: 100vw !important; } u + .body table { display: table !important; width: 100% !important; min-width: 100% !important; } u + .body td { display: block !important; width: 100% !important; min-width: 100% !important; } u + .body img { display: inline-block !important; margin: auto !important; width: auto !important; vertical-align: bottom !important; } u + .body center { display: block !important; margin: auto !important; width: 100% !important; min-width: 100% !important; text-align: center !important; } u + .body table._ac_social_table, u + .body table._ac_social_table td, u + .body table._ac_social_table div, u + .body table._ac_social_table a { display: inline-block !important; margin: auto !important; width: auto !important; min-width: auto !important; text-align: center !important; } u + .body table._ac_social_table img { display: inline-block !important; margin: auto !important; width: 32px !important; min-width: 32px !important; max-width: 32px !important; }\\n}\\n@media only screen and (max-width: 667px) { #layout-row1 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row3 img { width: 100% !important; height: auto !important; max-width: 184px !important; } #layout-row4 img { width: 100% !important; height: auto !important; max-width: 667px !important; } #layout-row10 .break-line { width: 100% !important; margin: auto !important; } #layout-row13 img { width: 100% !important; height: auto !important; max-width: 536px !important; } #layout-row14 img { width: 100% !important; height: auto !important; max-width: 534px !important; } #layout-row18 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row20 .break-line { width: 100% !important; margin: auto !important; } #layout-row25 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row29 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } .td_rss .rss-item img.iphone_large_image { width: auto !important; } u + .body { display: table !important; width: 100vw !important; min-width: 100vw !important; } u + .body table { display: table !important; width: 100% !important; min-width: 100% !important; } u + .body td { display: block !important; width: 100% !important; min-width: 100% !important; } u + .body img { display: inline-block !important; margin: auto !important; width: auto !important; vertical-align: bottom !important; } u + .body center { display: block !important; margin: auto !important; width: 100% !important; min-width: 100% !important; text-align: center !important; } u + .body table._ac_social_table, u + .body table._ac_social_table td, u + .body table._ac_social_table div, u + .body table._ac_social_table a { display: inline-block !important; margin: auto !important; width: auto !important; min-width: auto !important; text-align: center !important; } u + .body table._ac_social_table img { display: inline-block !important; margin: auto !important; width: 32px !important; min-width: 32px !important; max-width: 32px !important; }\\n}\\n</style><!--[if !mso]><!-- webfonts --><!--<![endif]--><!--[if lt mso 12]> <![endif]--></head><body id=\\\"ac-designer\\\" class=\\\"body\\\" style=\\\"font-family: Arial; line-height: 1.1; margin: 0px; background-color: #343434; width: 100%; text-align: center;\\\"><div class=\\\"divbody\\\" style=\\\"margin: 0px; outline: none; padding: 0px; color: #000000; font-family: arial; line-height: 1.1; width: 100%; background-color: #343434; background: #343434; text-align: center;\\\"><table class=\\\"template-table\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" align=\\\"left\\\" style=\\\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #343434; background: #343434;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" width=\\\"100%\\\"><table class=\\\"template-table\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"650\\\" bgcolor=\\\"#343434\\\" style=\\\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; max-width: 650px;\\\"><tr><td id=\\\"layout_table_1021313e38e49afad28844ffa18a6c210aadc587\\\" valign=\\\"top\\\" align=\\\"center\\\" width=\\\"650\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table root-table\\\" width=\\\"650\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin31\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row31\\\" class=\\\"layout layout-row widget _widget_spacer \\\"><td id=\\\"layout-row-padding31\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"25\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 25px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"25\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin3\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row3\\\" class=\\\"layout layout-row widget _widget_picture style3\\\" align=\\\"center\\\" style=\\\"background-color: #343434;\\\"><td id=\\\"layout-row-padding3\\\" valign=\\\"top\\\" style=\\\"background-color: #343434; padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td class=\\\"image-td\\\" align=\\\"center\\\" valign=\\\"top\\\" width=\\\"650\\\"><img src=\\\"http://test-enterprise-8./public//4f397db254489cbcc56cec456cd7b3db.png?r=871859732\\\" alt=\\\"\\\" width=\\\"184\\\" style=\\\"display: block; border: none; outline: none; width: 184px; opacity: 1; max-width: 100%;\\\"></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin27\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row27\\\" class=\\\"layout layout-row widget _widget_spacer \\\"><td id=\\\"layout-row-padding27\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"30\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 30px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"30\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin4\\\" valign=\\\"top\\\" style=\\\"padding: 0px 0 0 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row4\\\" class=\\\"layout layout-row widget _widget_picture style4\\\" align=\\\"left\\\" style=\\\"background-color: #343434;\\\"><td id=\\\"layout-row-padding4\\\" valign=\\\"top\\\" style=\\\"background-color: #343434; padding: 0px 0 0 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td class=\\\"image-td\\\" align=\\\"left\\\" valign=\\\"top\\\" width=\\\"650\\\"><img src=\\\"http://test-enterprise-8./public//714a6a68462f305dcc07900019176da9.png?r=92350116\\\" alt=\\\"\\\" width=\\\"650\\\" style=\\\"display: block; border: none; outline: none; width: 650px; opacity: 1; max-width: 100%;\\\"></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin5\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row5\\\" class=\\\"layout layout-row widget _widget_spacer style5\\\" style=\\\"\\\"><td id=\\\"layout-row-padding5\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"52\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 52px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"52\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr id=\\\"layout-row8\\\" class=\\\"layout layout-row clear-this \\\"><td id=\\\"layout-row-padding8\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout_table_3f45c3a8c98792148cfe613227982408eef75ad2\\\" valign=\\\"top\\\" width=\\\"325\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"325\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin6\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row6\\\" class=\\\"layout layout-row widget _widget_text style6\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding6\\\" valign=\\\"top\\\" style=\\\"padding: 0 26px 10px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div6\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 100%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div style=\\\"line-height: 100%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1;\\\" data-line-height=\\\"1\\\"> <span class=\\\"\\\" style=\\\"color: #999999; font-size: 48px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia; font-style: italic;\\\">Undercover</span> </div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div6, #text_div6 div { line-height: 100% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin9\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row9\\\" class=\\\"layout layout-row widget _widget_text style9\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding9\\\" valign=\\\"top\\\" style=\\\"padding: 0 26px 16px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div8\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 110%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.1; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div data-line-height=\\\"1.1\\\" style=\\\"line-height: 110%; margin: 0; outline: none; padding: 0; mso-line-height-rule: exactly; line-height: 1.1;\\\"> <p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><i class=\\\"\\\" style=\\\"margin: 0; outline: none; padding: 0; font-family: 'times new roman'; font-size: 26px; color: #999999;\\\">Lorem ipsum dolar sit amet, consectetur adipiscing elit.</i></p> </div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div8, #text_div8 div { line-height: 110% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin10\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row10\\\" class=\\\"layout layout-row widget _widget_break style10\\\" style=\\\"\\\"><td id=\\\"layout-row-padding10\\\" valign=\\\"top\\\" style=\\\"line-height: 0; mso-line-height-rule: exactly; padding: 0 26px 0 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: collapse; line-height: 0; mso-line-height-rule: exactly;\\\"><tr><td height=\\\"10\\\" style=\\\"line-height: 0; mso-line-height-rule: exactly;\\\"></td></tr><tr><td align=\\\"center\\\" height=\\\"1\\\" width=\\\"273\\\" style=\\\"line-height: 0; mso-line-height-rule: exactly;\\\"> <table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" height=\\\"1\\\" width=\\\"273\\\" style=\\\"font-size: 13px; min-width: auto!important; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: collapse; line-height: 0; mso-line-height-rule: exactly; width: 100%; max-width: 100%;\\\"><tr><td class=\\\"break-line\\\" bgcolor=\\\"#999999\\\" height=\\\"1\\\" width=\\\"273\\\" style=\\\"line-height: 1px; mso-line-height-rule: exactly; height: 1px; width: 273px; background-color: #999999;\\\"> </td> </tr></table></td> </tr><tr><td height=\\\"10\\\" style=\\\"line-height: 0; mso-line-height-rule: exactly;\\\"></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin11\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row11\\\" class=\\\"layout layout-row widget _widget_text style11\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding11\\\" valign=\\\"top\\\" style=\\\"padding: 20px 26px 26px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div10\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 140%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.4; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div style=\\\"line-height: 140%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.4;\\\" data-line-height=\\\"1.4\\\"> <p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span class=\\\"\\\" style=\\\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\"><b class=\\\"\\\" style=\\\"margin: 0; outline: none; padding: 0; font-size: 27px; color: #999999;\\\">A</b>liquam finibus tempus nulla gravida tincidunt. Donec auctor a felis non pulvinar. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum at hendrerit lectus. Mauris turpis ligula, rutrum quis leo sit amet, finibus laoreet urna. Nullam et lacinia nunc, ac gravida libero. Nunc tellus erat, ullamcorper a nulla ut, pharetra auctor justo.</span></p> </div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div10, #text_div10 div { line-height: 140% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td><td id=\\\"layout_table_671b17cb4782b654db485de21cbc09bb8b42a7c1\\\" valign=\\\"top\\\" width=\\\"325\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"325\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin7\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row7\\\" class=\\\"layout layout-row widget _widget_text style7\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding7\\\" valign=\\\"top\\\" style=\\\"padding: 10px 26px 0 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div7\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 140%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.4; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div data-line-height=\\\"1.4\\\" style=\\\"line-height: 140%; margin: 0; outline: none; padding: 0; mso-line-height-rule: exactly; line-height: 1.4; color: #999999;\\\"> <p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span class=\\\"\\\" style=\\\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\">Proin volutpat nunc at nulla consectetur suscipit. Fusce malesuada nisi nulla, sed ornare turpis gravida at. Nam mollis ipsum eu vestibulum scelerisque.</span></p> <p class=\\\"p2\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><br style=\\\"font-family: georgia; font-size: 16px; color: #999999;color: #999999;\\\"></p> <p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span class=\\\"\\\" style=\\\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\">Suspendisse ultrices a arcu vel cursus. Mauris quis luctus lacus. Aliquam iaculis, augue sit amet euismod viverra, lorem nulla consequat leo, non congue lorem ipsum nec magna. Donec a lorem eget nunc posuere convallis vitae imperdiet purus.</span></p><p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><br style=\\\"font-family: georgia; font-size: 16px; color: #999999;color: #999999;\\\"></p><p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span class=\\\"\\\" style=\\\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\"><span style=\\\"color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\">Mauris turpis ligula, rutrum quis leo sit amet, finibus laoreet urna. Nullam et lacinia nunc, ac gravida libero. Nunc tellus erat, ullamcorper a nulla ut, pharetra auctor justo.</span><br style=\\\"color: #999999;\\\"></span></p><p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><br style=\\\"color: #999999;color: #999999;\\\"></p><br></div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div7, #text_div7 div { line-height: 140% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin12\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row12\\\" class=\\\"layout layout-row widget _widget_spacer style12\\\" style=\\\"\\\"><td id=\\\"layout-row-padding12\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"30\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 30px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"30\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr id=\\\"layout-row15\\\" class=\\\"layout layout-row clear-this \\\"><td id=\\\"layout-row-padding15\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout_table_fda5dd4152a83e24c40d194350d6d45090bf0979\\\" valign=\\\"top\\\" width=\\\"325\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"325\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin13\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row13\\\" class=\\\"layout layout-row widget _widget_picture style13\\\" align=\\\"left\\\" style=\\\"\\\"><td id=\\\"layout-row-padding13\\\" valign=\\\"top\\\" style=\\\"padding: 0 26px 10px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td class=\\\"image-td\\\" align=\\\"left\\\" valign=\\\"top\\\" width=\\\"273\\\"><img src=\\\"http://test-enterprise-8./public//a85847a4efbab68055b6ada532261c12.png?r=704215052\\\" alt=\\\"\\\" width=\\\"273\\\" style=\\\"display: block; border: none; outline: none; width: 273px; opacity: 1; max-width: 100%;\\\"></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin16\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row16\\\" class=\\\"layout layout-row widget _widget_text style16\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding16\\\" valign=\\\"top\\\" style=\\\"padding: 0 26px 30px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div14\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 130%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.3; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div style=\\\"line-height: 130%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.3;\\\" data-line-height=\\\"1.3\\\"> <span class=\\\"\\\" style='color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: \\\"times new roman\\\"; font-style: italic;'><span style=\\\"color: #999999; font-size: inherit; font-weight: bold; line-height: inherit; text-decoration: inherit;\\\"> 01 -</span> Lorem ipsum dolar sit</span> </div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div14, #text_div14 div { line-height: 130% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin17\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row17\\\" class=\\\"layout layout-row widget _widget_text style17\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding17\\\" valign=\\\"top\\\" style=\\\"padding: 0 26px 39px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div15\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 140%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.4; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div style=\\\"line-height: 140%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.4;\\\" data-line-height=\\\"1.4\\\"> <p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span class=\\\"\\\" style=\\\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.  Donec tristique, tellus et sodales ornare, orci risus venenatis metus, et scelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed metus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus egestas.</span></p> </div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div15, #text_div15 div { line-height: 140% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td><td id=\\\"layout_table_1903ee6fde2ab10b81f6790da79880e983ad0639\\\" valign=\\\"top\\\" width=\\\"325\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"325\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin14\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row14\\\" class=\\\"layout layout-row widget _widget_picture style14\\\" align=\\\"left\\\" style=\\\"\\\"><td id=\\\"layout-row-padding14\\\" valign=\\\"top\\\" style=\\\"padding: 0 26px 10px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td class=\\\"image-td\\\" align=\\\"left\\\" valign=\\\"top\\\" width=\\\"273\\\"><img src=\\\"http://test-enterprise-8./public//19e0532e4430dd99a6d8e3d9a69e8722.png?r=2014676670\\\" alt=\\\"\\\" width=\\\"273\\\" style=\\\"display: block; border: none; outline: none; width: 273px; opacity: 1; max-width: 100%;\\\"></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin19\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row19\\\" class=\\\"layout layout-row widget _widget_text style19\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding19\\\" valign=\\\"top\\\" style=\\\"padding: 0 26px 30px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div17\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 130%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.3; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div style=\\\"line-height: 130%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.3;\\\" data-line-height=\\\"1.3\\\"> <span class=\\\"\\\" style='color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: \\\"times new roman\\\"; font-style: italic;'><span style=\\\"color: #999999; font-size: inherit; font-weight: bold; line-height: inherit; text-decoration: inherit;\\\"> 02 -</span> Lorem ipsum dolar sit</span> </div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div17, #text_div17 div { line-height: 130% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin18\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row18\\\" class=\\\"layout layout-row widget _widget_spacer style18\\\" style=\\\"\\\"><td id=\\\"layout-row-padding18\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"30\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 30px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"30\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin20\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row20\\\" class=\\\"layout layout-row widget _widget_break style20\\\" style=\\\"\\\"><td id=\\\"layout-row-padding20\\\" valign=\\\"top\\\" style=\\\"line-height: 0; mso-line-height-rule: exactly; padding: 0 26px 0 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: collapse; line-height: 0; mso-line-height-rule: exactly;\\\"><tr><td height=\\\"10\\\" style=\\\"line-height: 0; mso-line-height-rule: exactly;\\\"></td></tr><tr><td align=\\\"center\\\" height=\\\"1\\\" width=\\\"598\\\" style=\\\"line-height: 0; mso-line-height-rule: exactly;\\\"> <table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" height=\\\"1\\\" width=\\\"598\\\" style=\\\"font-size: 13px; min-width: auto!important; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: collapse; line-height: 0; mso-line-height-rule: exactly; width: 100%; max-width: 100%;\\\"><tr><td class=\\\"break-line\\\" bgcolor=\\\"#999999\\\" height=\\\"1\\\" width=\\\"598\\\" style=\\\"line-height: 1px; mso-line-height-rule: exactly; height: 1px; width: 598px; background-color: #999999;\\\"> </td> </tr></table></td> </tr><tr><td height=\\\"10\\\" style=\\\"line-height: 0; mso-line-height-rule: exactly;\\\"></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin21\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row21\\\" class=\\\"layout layout-row widget _widget_spacer style21\\\" style=\\\"\\\"><td id=\\\"layout-row-padding21\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"43\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 43px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"43\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr id=\\\"layout-row23\\\" class=\\\"layout layout-row clear-this \\\"><td id=\\\"layout-row-padding23\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout_table_9929bd7219b5a483f72e371041f557266f23face\\\" valign=\\\"top\\\" width=\\\"295\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"295\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row26\\\" class=\\\"layout layout-row clear-this \\\"><td id=\\\"layout-row-padding26\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout_table_a5d42e4016ba95676c5d0c08dded0a92da76cf78\\\" valign=\\\"top\\\" width=\\\"26\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"26\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin25\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row25\\\" class=\\\"layout layout-row widget _widget_spacer style25\\\" style=\\\"\\\"><td id=\\\"layout-row-padding25\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"388\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 388px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"388\\\" width=\\\"26\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr></table></td><td id=\\\"layout_table_2a8bd49bfe6839890ddad1d3770bbc80e298784c\\\" valign=\\\"top\\\" width=\\\"269\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"269\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin22\\\" valign=\\\"top\\\" style=\\\"padding: 0px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row22\\\" class=\\\"layout layout-row widget _widget_text style22\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-border22\\\" valign=\\\"top\\\" style=\\\"border-color: #999999; border-style: solid; border-width: 1px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-padding22\\\" valign=\\\"top\\\" style=\\\"padding: 20px 20px 30px 20px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div20\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 100%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div style=\\\"line-height: 100%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1;\\\" data-line-height=\\\"1\\\"> <span class=\\\"\\\" style='color: #999999; font-size: 34px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: \\\"times new roman\\\"; font-style: italic;'><span style=\\\"color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">\\\"Lorem ipsum dolar sit amet, consectetur.\\\"<br style=\\\"color: #999999;\\\"><br style=\\\"color: #999999;\\\"></span><span class=\\\"\\\" style=\\\"color: #999999; font-size: 26px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span style=\\\"color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">- S. Williams</span><br style=\\\"color: #999999;\\\"></span></span> </div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div20, #text_div20 div { line-height: 100% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin28\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row28\\\" class=\\\"layout layout-row widget _widget_spacer \\\"><td id=\\\"layout-row-padding28\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"30\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 30px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"30\\\" width=\\\"269\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td><td id=\\\"layout_table_07718ed3fc601a3c0d938b6fc0e27261628cdabc\\\" valign=\\\"top\\\" width=\\\"355\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"355\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row30\\\" class=\\\"layout layout-row clear-this \\\"><td id=\\\"layout-row-padding30\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout_table_8d9015d9aacd6b421019b80822dc49a7c0f795e5\\\" valign=\\\"top\\\" width=\\\"30\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"30\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin29\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row29\\\" class=\\\"layout layout-row widget _widget_spacer \\\"><td id=\\\"layout-row-padding29\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"325\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 325px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"325\\\" width=\\\"30\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr></table></td><td id=\\\"layout_table_1b61b68595417473009d9c168031e942c5c96f11\\\" valign=\\\"top\\\" width=\\\"325\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table \\\" width=\\\"325\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"layout-row-margin24\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row24\\\" class=\\\"layout layout-row widget _widget_text style24\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding24\\\" valign=\\\"top\\\" style=\\\"padding: 0 26px 36px 26px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div21\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 140%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.4; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div style=\\\"line-height: 140%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.4;\\\" data-line-height=\\\"1.4\\\"> <p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span class=\\\"\\\" style=\\\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec tristique, tellus et sodales ornare, orci risus venenatis metus, et scelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed metus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus egestas.</span></p><p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><br style=\\\"font-family: georgia; font-size: 16px; color: #999999;color: #999999;\\\"></p><p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span class=\\\"\\\" style=\\\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\"><span style=\\\"color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\\\" class=\\\"\\\">Donec tristique, tellus et sodales ornare, orci risus venenatis metus, et scelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed metus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus egestas.</span><br style=\\\"color: #999999;\\\"></span></p> </div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div21, #text_div21 div { line-height: 140% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin1\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row1\\\" class=\\\"layout layout-row widget _widget_spacer \\\"><td id=\\\"layout-row-padding1\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"30\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 30px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"30\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr><td id=\\\"layout-row-margin2\\\" valign=\\\"top\\\" style=\\\"padding: 0;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row2\\\" class=\\\"layout layout-row widget _widget_text style2\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding2\\\" valign=\\\"top\\\" style=\\\"padding: 20px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div2\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"line-height: 150%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.5; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\\\"> <div style=\\\"line-height: 150%; margin: 0; outline: none; padding: 0; text-align: center; mso-line-height-rule: exactly; line-height: 1.5;\\\" data-line-height=\\\"1.5\\\"> <p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><span style=\\\"color: #555555; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">%SENDER-INFO-SINGLELINE%</span></p><p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><br style=\\\"color: #555555;\\\"></p><p class=\\\"p1\\\" style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"><a href=\\\"%UNSUBSCRIBELINK%\\\" target=\\\"_blank\\\" style=\\\"margin: 0; outline: none; padding: 0; color: #555555; text-decoration: underline;\\\" class=\\\"\\\"><span style=\\\"color: #555555; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\">Click here to unsubscribe</span></a></p></div><!--[if (gte mso 12)&(lte mso 15) ]>\\n<style data-ac-keep=\\\"true\\\" data-ac-inline=\\\"false\\\"> #text_div2, #text_div2 div { line-height: 150% !important; };\\n</style>\\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></div></body></html>\\n\",\n        \"htmlfetch\": \"now\",\n        \"textfetch\": \"now\",\n        \"hidden\": \"0\",\n        \"preview_mime\": \"\",\n        \"preview_data\": \"\",\n        \"links\": {\n            \"user\": \"https://:account.api-us1.com/api/3/messages/3/user\"\n        },\n        \"id\": \"3\",\n        \"user\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "ed_instanceid": {
                          "type": "string",
                          "example": "1"
                        },
                        "ed_version": {
                          "type": "string",
                          "example": "2"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-08-06T16:31:45-05:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-08-06T16:33:23-05:00"
                        },
                        "name": {
                          "type": "string",
                          "example": "Hello, %FIRSTNAME%"
                        },
                        "fromname": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "fromemail": {
                          "type": "string",
                          "example": "noreply@example.com"
                        },
                        "reply2": {
                          "type": "string",
                          "example": "hello@example.com"
                        },
                        "priority": {
                          "type": "string",
                          "example": "3"
                        },
                        "charset": {
                          "type": "string",
                          "example": "utf-8"
                        },
                        "encoding": {
                          "type": "string",
                          "example": "8bit"
                        },
                        "format": {
                          "type": "string",
                          "example": "mime"
                        },
                        "subject": {
                          "type": "string",
                          "example": "You are subscribing to %LISTNAME%"
                        },
                        "preheader_text": {
                          "type": "string",
                          "example": "Pre-header Text"
                        },
                        "text": {
                          "type": "string",
                          "example": " \n\n \n\n \n\nUndercover \n\n**Lorem ipsum dolar sit amet, consectetur adipiscing elit.**\n\n**A**liquam finibus tempus nulla gravida tincidunt. Donec auctor a felis\nnon pulvinar. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\nVestibulum at hendrerit lectus. Mauris turpis ligula, rutrum quis leo\nsit amet, finibus laoreet urna. Nullam et lacinia nunc, ac gravida\nlibero. Nunc tellus erat, ullamcorper a nulla ut, pharetra auctor justo.\n\nProin volutpat nunc at nulla consectetur suscipit. Fusce malesuada nisi\nnulla, sed ornare turpis gravida at. Nam mollis ipsum eu vestibulum\nscelerisque.\n\nSuspendisse ultrices a arcu vel cursus. Mauris quis luctus lacus.\nAliquam iaculis, augue sit amet euismod viverra, lorem nulla consequat\nleo, non congue lorem ipsum nec magna. Donec a lorem eget nunc posuere\nconvallis vitae imperdiet purus.\n\nMauris turpis ligula, rutrum quis leo sit amet, finibus laoreet urna.\nNullam et lacinia nunc, ac gravida libero. Nunc tellus erat, ullamcorper\na nulla ut, pharetra auctor justo.\n\n \n\n01 - Lorem ipsum dolar sit \n\nLorem ipsum dolor sit amet, consectetur adipiscing elit.  Donec\ntristique, tellus et sodales ornare, orci risus venenatis metus, et\nscelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed\nmetus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus\negestas.\n\n02 - Lorem ipsum dolar sit \n\n \n\n \n\n \n\n\"Lorem ipsum dolar sit amet, consectetur.\"\n\n- S. Williams\n\n \n\n \n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\ntristique, tellus et sodales ornare, orci risus venenatis metus, et\nscelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed\nmetus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus\negestas.\n\nDonec tristique, tellus et sodales ornare, orci risus venenatis metus,\net scelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed\nmetus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus\negestas.\n\n \n\n%SENDER-INFO-SINGLELINE%\n\nClick here to unsubscribe <%UNSUBSCRIBELINK%>"
                        },
                        "html": {
                          "type": "string",
                          "example": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html lang=\"en\" style=\"margin: 0; outline: none; padding: 0;\"><head><!--[if !mso]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><!--<![endif]--><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"><meta http-equiv=\"Content-Language\" content=\"locale_contentlang\"><meta name=\"format-detection\" content=\"telephone=no\"><meta name=\"format-detection\" content=\"date=no\"><meta name=\"format-detection\" content=\"address=no\"><meta name=\"format-detection\" content=\"email=no\"><style data-ac-keep=\"true\">\n.ExternalClass {width:100%; background:inherit; background-color:inherit;}\n.ExternalClass p, .ExternalClass ul, .ExternalClass ol { Margin: 0; }\n.undoreset div p, .undoreset p { margin-bottom: 20px; }\ndiv[class^=\"aolmail_divbody\"] { overflow: auto; }\n[owa] #ac-footer { padding: 20px 0px!important; background:inherit; background-color:inherit; }\n</style><style data-ac-keep=\"true\">\n@media only screen and (max-width: 600px) {\t/*-------------------------------------------------------------------------*\\ Abandoned Cart widget \\*------------------------------------------------------------------------*/ .td_abandoned-cart img {display: block;padding-right: 0 !important;padding-bottom: 0 !important;width: 100% !important;max-width: 100% !important;height: auto !important;} body { padding: 0!important; font-size:1em!important; } * { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; } *[class].divbody {-webkit-text-size-adjust:none !important; width:auto !important;} *[class].td_picture img {width:auto !important;} *[class].td_text { line-height: 110%; } *[class].td_button { width: auto; } /* Collapse all block elements */ :not(.body) table { display: block!important; float:none!important; border-collapse:collapse !important; width:100% !important; min-width:100% !important; clear:both!important; } :not(.body) thead, :not(.body) tbody, :not(.body) tr { display:block!important; float:none!important; width:100% !important; } :not(.body) th, :not(.body) td, :not(.body) p { display:block!important; float:none!important; width:100% !important; clear:both!important; } /* Remove browser default styling for elements */ ul, ol { margin-left: 20px; margin-bottom: 10px; margin-top: 10px; -webkit-margin-before: 0; -webkit-margin-after: 0; -webkit-padding-start: 0; } /* Set default height for spacer once collapse */ *[class].spacer { height: auto!important; } a[href^=date]{ color:inherit !important; text-decoration:none !important;} a[href^=telephone]{ color:inherit !important; text-decoration:none !important;} a[href^=address]{ color:inherit !important; text-decoration:none !important;} a[href^=email]{ color:inherit !important; text-decoration:none !important;} /* Default table cell height */ /* Default social icons */ *[class].ac-social-icon-16 {width:16px !important; height:16px !important;} *[class].ac-social-icon-24 {width:24px !important; height:24px !important;} *[class].ac-social-icon-28 {width:28px !important; height:28px !important;} *[class].__ac_social_icons { margin-right: 0px !important; } }\n</style><style data-ac-keep=\"true\"> @media only screen and (max-width: 320px) { #layout-row1 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row3 img { width: 100% !important; height: auto !important; max-width: 184px !important; } #layout-row4 img { width: 100% !important; height: auto !important; max-width: 320px !important; } #layout-row10 .break-line { width: 100% !important; margin: auto !important; } #layout-row13 img { width: 100% !important; height: auto !important; max-width: 320px !important; } #layout-row14 img { width: 100% !important; height: auto !important; max-width: 320px !important; } #layout-row18 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row20 .break-line { width: 100% !important; margin: auto !important; } #layout-row25 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row29 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } .td_rss .rss-item img.iphone_large_image { width: auto !important; } u + .body { display: table !important; width: 100vw !important; min-width: 100vw !important; } u + .body table { display: table !important; width: 100% !important; min-width: 100% !important; } u + .body td { display: block !important; width: 100% !important; min-width: 100% !important; } u + .body img { display: inline-block !important; margin: auto !important; width: auto !important; vertical-align: bottom !important; } u + .body center { display: block !important; margin: auto !important; width: 100% !important; min-width: 100% !important; text-align: center !important; } u + .body table._ac_social_table, u + .body table._ac_social_table td, u + .body table._ac_social_table div, u + .body table._ac_social_table a { display: inline-block !important; margin: auto !important; width: auto !important; min-width: auto !important; text-align: center !important; } u + .body table._ac_social_table img { display: inline-block !important; margin: auto !important; width: 32px !important; min-width: 32px !important; max-width: 32px !important; }\n}\n@media only screen and (max-width: 375px) { #layout-row1 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row3 img { width: 100% !important; height: auto !important; max-width: 184px !important; } #layout-row4 img { width: 100% !important; height: auto !important; max-width: 375px !important; } #layout-row10 .break-line { width: 100% !important; margin: auto !important; } #layout-row13 img { width: 100% !important; height: auto !important; max-width: 375px !important; } #layout-row14 img { width: 100% !important; height: auto !important; max-width: 375px !important; } #layout-row18 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row20 .break-line { width: 100% !important; margin: auto !important; } #layout-row25 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row29 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } .td_rss .rss-item img.iphone_large_image { width: auto !important; } u + .body { display: table !important; width: 100vw !important; min-width: 100vw !important; } u + .body table { display: table !important; width: 100% !important; min-width: 100% !important; } u + .body td { display: block !important; width: 100% !important; min-width: 100% !important; } u + .body img { display: inline-block !important; margin: auto !important; width: auto !important; vertical-align: bottom !important; } u + .body center { display: block !important; margin: auto !important; width: 100% !important; min-width: 100% !important; text-align: center !important; } u + .body table._ac_social_table, u + .body table._ac_social_table td, u + .body table._ac_social_table div, u + .body table._ac_social_table a { display: inline-block !important; margin: auto !important; width: auto !important; min-width: auto !important; text-align: center !important; } u + .body table._ac_social_table img { display: inline-block !important; margin: auto !important; width: 32px !important; min-width: 32px !important; max-width: 32px !important; }\n}\n@media only screen and (max-width: 414px) { #layout-row1 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row3 img { width: 100% !important; height: auto !important; max-width: 184px !important; } #layout-row4 img { width: 100% !important; height: auto !important; max-width: 414px !important; } #layout-row10 .break-line { width: 100% !important; margin: auto !important; } #layout-row13 img { width: 100% !important; height: auto !important; max-width: 414px !important; } #layout-row14 img { width: 100% !important; height: auto !important; max-width: 414px !important; } #layout-row18 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row20 .break-line { width: 100% !important; margin: auto !important; } #layout-row25 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row29 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } .td_rss .rss-item img.iphone_large_image { width: auto !important; } u + .body { display: table !important; width: 100vw !important; min-width: 100vw !important; } u + .body table { display: table !important; width: 100% !important; min-width: 100% !important; } u + .body td { display: block !important; width: 100% !important; min-width: 100% !important; } u + .body img { display: inline-block !important; margin: auto !important; width: auto !important; vertical-align: bottom !important; } u + .body center { display: block !important; margin: auto !important; width: 100% !important; min-width: 100% !important; text-align: center !important; } u + .body table._ac_social_table, u + .body table._ac_social_table td, u + .body table._ac_social_table div, u + .body table._ac_social_table a { display: inline-block !important; margin: auto !important; width: auto !important; min-width: auto !important; text-align: center !important; } u + .body table._ac_social_table img { display: inline-block !important; margin: auto !important; width: 32px !important; min-width: 32px !important; max-width: 32px !important; }\n}\n@media only screen and (max-width: 667px) { #layout-row1 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row3 img { width: 100% !important; height: auto !important; max-width: 184px !important; } #layout-row4 img { width: 100% !important; height: auto !important; max-width: 667px !important; } #layout-row10 .break-line { width: 100% !important; margin: auto !important; } #layout-row13 img { width: 100% !important; height: auto !important; max-width: 536px !important; } #layout-row14 img { width: 100% !important; height: auto !important; max-width: 534px !important; } #layout-row18 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row20 .break-line { width: 100% !important; margin: auto !important; } #layout-row25 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } #layout-row29 { max-height: 0px!important; font-size: 0px!important; display: none!important; visibility: hidden!important; } .td_rss .rss-item img.iphone_large_image { width: auto !important; } u + .body { display: table !important; width: 100vw !important; min-width: 100vw !important; } u + .body table { display: table !important; width: 100% !important; min-width: 100% !important; } u + .body td { display: block !important; width: 100% !important; min-width: 100% !important; } u + .body img { display: inline-block !important; margin: auto !important; width: auto !important; vertical-align: bottom !important; } u + .body center { display: block !important; margin: auto !important; width: 100% !important; min-width: 100% !important; text-align: center !important; } u + .body table._ac_social_table, u + .body table._ac_social_table td, u + .body table._ac_social_table div, u + .body table._ac_social_table a { display: inline-block !important; margin: auto !important; width: auto !important; min-width: auto !important; text-align: center !important; } u + .body table._ac_social_table img { display: inline-block !important; margin: auto !important; width: 32px !important; min-width: 32px !important; max-width: 32px !important; }\n}\n</style><!--[if !mso]><!-- webfonts --><!--<![endif]--><!--[if lt mso 12]> <![endif]--></head><body id=\"ac-designer\" class=\"body\" style=\"font-family: Arial; line-height: 1.1; margin: 0px; background-color: #343434; width: 100%; text-align: center;\"><div class=\"divbody\" style=\"margin: 0px; outline: none; padding: 0px; color: #000000; font-family: arial; line-height: 1.1; width: 100%; background-color: #343434; background: #343434; text-align: center;\"><table class=\"template-table\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" align=\"left\" style=\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #343434; background: #343434;\"><tr><td align=\"center\" valign=\"top\" width=\"100%\"><table class=\"template-table\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"650\" bgcolor=\"#343434\" style=\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; max-width: 650px;\"><tr><td id=\"layout_table_1021313e38e49afad28844ffa18a6c210aadc587\" valign=\"top\" align=\"center\" width=\"650\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table root-table\" width=\"650\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin31\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr id=\"layout-row31\" class=\"layout layout-row widget _widget_spacer \"><td id=\"layout-row-padding31\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"25\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 25px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"25\" width=\"650\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin3\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row3\" class=\"layout layout-row widget _widget_picture style3\" align=\"center\" style=\"background-color: #343434;\"><td id=\"layout-row-padding3\" valign=\"top\" style=\"background-color: #343434; padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td class=\"image-td\" align=\"center\" valign=\"top\" width=\"650\"><img src=\"http://test-enterprise-8./public//4f397db254489cbcc56cec456cd7b3db.png?r=871859732\" alt=\"\" width=\"184\" style=\"display: block; border: none; outline: none; width: 184px; opacity: 1; max-width: 100%;\"></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin27\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr id=\"layout-row27\" class=\"layout layout-row widget _widget_spacer \"><td id=\"layout-row-padding27\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"30\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 30px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"30\" width=\"650\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin4\" valign=\"top\" style=\"padding: 0px 0 0 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row4\" class=\"layout layout-row widget _widget_picture style4\" align=\"left\" style=\"background-color: #343434;\"><td id=\"layout-row-padding4\" valign=\"top\" style=\"background-color: #343434; padding: 0px 0 0 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td class=\"image-td\" align=\"left\" valign=\"top\" width=\"650\"><img src=\"http://test-enterprise-8./public//714a6a68462f305dcc07900019176da9.png?r=92350116\" alt=\"\" width=\"650\" style=\"display: block; border: none; outline: none; width: 650px; opacity: 1; max-width: 100%;\"></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin5\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row5\" class=\"layout layout-row widget _widget_spacer style5\" style=\"\"><td id=\"layout-row-padding5\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"52\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 52px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"52\" width=\"650\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr id=\"layout-row8\" class=\"layout layout-row clear-this \"><td id=\"layout-row-padding8\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout_table_3f45c3a8c98792148cfe613227982408eef75ad2\" valign=\"top\" width=\"325\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"325\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin6\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row6\" class=\"layout layout-row widget _widget_text style6\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding6\" valign=\"top\" style=\"padding: 0 26px 10px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div6\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 100%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div style=\"line-height: 100%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1;\" data-line-height=\"1\"> <span class=\"\" style=\"color: #999999; font-size: 48px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia; font-style: italic;\">Undercover</span> </div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div6, #text_div6 div { line-height: 100% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin9\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row9\" class=\"layout layout-row widget _widget_text style9\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding9\" valign=\"top\" style=\"padding: 0 26px 16px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div8\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 110%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.1; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div data-line-height=\"1.1\" style=\"line-height: 110%; margin: 0; outline: none; padding: 0; mso-line-height-rule: exactly; line-height: 1.1;\"> <p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><i class=\"\" style=\"margin: 0; outline: none; padding: 0; font-family: 'times new roman'; font-size: 26px; color: #999999;\">Lorem ipsum dolar sit amet, consectetur adipiscing elit.</i></p> </div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div8, #text_div8 div { line-height: 110% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin10\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row10\" class=\"layout layout-row widget _widget_break style10\" style=\"\"><td id=\"layout-row-padding10\" valign=\"top\" style=\"line-height: 0; mso-line-height-rule: exactly; padding: 0 26px 0 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: collapse; line-height: 0; mso-line-height-rule: exactly;\"><tr><td height=\"10\" style=\"line-height: 0; mso-line-height-rule: exactly;\"></td></tr><tr><td align=\"center\" height=\"1\" width=\"273\" style=\"line-height: 0; mso-line-height-rule: exactly;\"> <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" height=\"1\" width=\"273\" style=\"font-size: 13px; min-width: auto!important; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: collapse; line-height: 0; mso-line-height-rule: exactly; width: 100%; max-width: 100%;\"><tr><td class=\"break-line\" bgcolor=\"#999999\" height=\"1\" width=\"273\" style=\"line-height: 1px; mso-line-height-rule: exactly; height: 1px; width: 273px; background-color: #999999;\"> </td> </tr></table></td> </tr><tr><td height=\"10\" style=\"line-height: 0; mso-line-height-rule: exactly;\"></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin11\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row11\" class=\"layout layout-row widget _widget_text style11\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding11\" valign=\"top\" style=\"padding: 20px 26px 26px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div10\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 140%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.4; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div style=\"line-height: 140%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.4;\" data-line-height=\"1.4\"> <p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span class=\"\" style=\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\"><b class=\"\" style=\"margin: 0; outline: none; padding: 0; font-size: 27px; color: #999999;\">A</b>liquam finibus tempus nulla gravida tincidunt. Donec auctor a felis non pulvinar. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum at hendrerit lectus. Mauris turpis ligula, rutrum quis leo sit amet, finibus laoreet urna. Nullam et lacinia nunc, ac gravida libero. Nunc tellus erat, ullamcorper a nulla ut, pharetra auctor justo.</span></p> </div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div10, #text_div10 div { line-height: 140% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td><td id=\"layout_table_671b17cb4782b654db485de21cbc09bb8b42a7c1\" valign=\"top\" width=\"325\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"325\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin7\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row7\" class=\"layout layout-row widget _widget_text style7\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding7\" valign=\"top\" style=\"padding: 10px 26px 0 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div7\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 140%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.4; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div data-line-height=\"1.4\" style=\"line-height: 140%; margin: 0; outline: none; padding: 0; mso-line-height-rule: exactly; line-height: 1.4; color: #999999;\"> <p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span class=\"\" style=\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\">Proin volutpat nunc at nulla consectetur suscipit. Fusce malesuada nisi nulla, sed ornare turpis gravida at. Nam mollis ipsum eu vestibulum scelerisque.</span></p> <p class=\"p2\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><br style=\"font-family: georgia; font-size: 16px; color: #999999;color: #999999;\"></p> <p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span class=\"\" style=\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\">Suspendisse ultrices a arcu vel cursus. Mauris quis luctus lacus. Aliquam iaculis, augue sit amet euismod viverra, lorem nulla consequat leo, non congue lorem ipsum nec magna. Donec a lorem eget nunc posuere convallis vitae imperdiet purus.</span></p><p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><br style=\"font-family: georgia; font-size: 16px; color: #999999;color: #999999;\"></p><p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span class=\"\" style=\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\"><span style=\"color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\">Mauris turpis ligula, rutrum quis leo sit amet, finibus laoreet urna. Nullam et lacinia nunc, ac gravida libero. Nunc tellus erat, ullamcorper a nulla ut, pharetra auctor justo.</span><br style=\"color: #999999;\"></span></p><p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><br style=\"color: #999999;color: #999999;\"></p><br></div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div7, #text_div7 div { line-height: 140% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin12\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row12\" class=\"layout layout-row widget _widget_spacer style12\" style=\"\"><td id=\"layout-row-padding12\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"30\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 30px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"30\" width=\"650\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr id=\"layout-row15\" class=\"layout layout-row clear-this \"><td id=\"layout-row-padding15\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout_table_fda5dd4152a83e24c40d194350d6d45090bf0979\" valign=\"top\" width=\"325\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"325\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin13\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row13\" class=\"layout layout-row widget _widget_picture style13\" align=\"left\" style=\"\"><td id=\"layout-row-padding13\" valign=\"top\" style=\"padding: 0 26px 10px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td class=\"image-td\" align=\"left\" valign=\"top\" width=\"273\"><img src=\"http://test-enterprise-8./public//a85847a4efbab68055b6ada532261c12.png?r=704215052\" alt=\"\" width=\"273\" style=\"display: block; border: none; outline: none; width: 273px; opacity: 1; max-width: 100%;\"></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin16\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row16\" class=\"layout layout-row widget _widget_text style16\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding16\" valign=\"top\" style=\"padding: 0 26px 30px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div14\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 130%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.3; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div style=\"line-height: 130%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.3;\" data-line-height=\"1.3\"> <span class=\"\" style='color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: \"times new roman\"; font-style: italic;'><span style=\"color: #999999; font-size: inherit; font-weight: bold; line-height: inherit; text-decoration: inherit;\"> 01 -</span> Lorem ipsum dolar sit</span> </div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div14, #text_div14 div { line-height: 130% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin17\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row17\" class=\"layout layout-row widget _widget_text style17\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding17\" valign=\"top\" style=\"padding: 0 26px 39px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div15\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 140%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.4; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div style=\"line-height: 140%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.4;\" data-line-height=\"1.4\"> <p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span class=\"\" style=\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.  Donec tristique, tellus et sodales ornare, orci risus venenatis metus, et scelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed metus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus egestas.</span></p> </div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div15, #text_div15 div { line-height: 140% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td><td id=\"layout_table_1903ee6fde2ab10b81f6790da79880e983ad0639\" valign=\"top\" width=\"325\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"325\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin14\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row14\" class=\"layout layout-row widget _widget_picture style14\" align=\"left\" style=\"\"><td id=\"layout-row-padding14\" valign=\"top\" style=\"padding: 0 26px 10px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td class=\"image-td\" align=\"left\" valign=\"top\" width=\"273\"><img src=\"http://test-enterprise-8./public//19e0532e4430dd99a6d8e3d9a69e8722.png?r=2014676670\" alt=\"\" width=\"273\" style=\"display: block; border: none; outline: none; width: 273px; opacity: 1; max-width: 100%;\"></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin19\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row19\" class=\"layout layout-row widget _widget_text style19\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding19\" valign=\"top\" style=\"padding: 0 26px 30px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div17\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 130%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.3; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div style=\"line-height: 130%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.3;\" data-line-height=\"1.3\"> <span class=\"\" style='color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: \"times new roman\"; font-style: italic;'><span style=\"color: #999999; font-size: inherit; font-weight: bold; line-height: inherit; text-decoration: inherit;\"> 02 -</span> Lorem ipsum dolar sit</span> </div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div17, #text_div17 div { line-height: 130% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin18\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row18\" class=\"layout layout-row widget _widget_spacer style18\" style=\"\"><td id=\"layout-row-padding18\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"30\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 30px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"30\" width=\"650\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin20\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row20\" class=\"layout layout-row widget _widget_break style20\" style=\"\"><td id=\"layout-row-padding20\" valign=\"top\" style=\"line-height: 0; mso-line-height-rule: exactly; padding: 0 26px 0 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: collapse; line-height: 0; mso-line-height-rule: exactly;\"><tr><td height=\"10\" style=\"line-height: 0; mso-line-height-rule: exactly;\"></td></tr><tr><td align=\"center\" height=\"1\" width=\"598\" style=\"line-height: 0; mso-line-height-rule: exactly;\"> <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" height=\"1\" width=\"598\" style=\"font-size: 13px; min-width: auto!important; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: collapse; line-height: 0; mso-line-height-rule: exactly; width: 100%; max-width: 100%;\"><tr><td class=\"break-line\" bgcolor=\"#999999\" height=\"1\" width=\"598\" style=\"line-height: 1px; mso-line-height-rule: exactly; height: 1px; width: 598px; background-color: #999999;\"> </td> </tr></table></td> </tr><tr><td height=\"10\" style=\"line-height: 0; mso-line-height-rule: exactly;\"></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin21\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row21\" class=\"layout layout-row widget _widget_spacer style21\" style=\"\"><td id=\"layout-row-padding21\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"43\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 43px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"43\" width=\"650\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr id=\"layout-row23\" class=\"layout layout-row clear-this \"><td id=\"layout-row-padding23\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout_table_9929bd7219b5a483f72e371041f557266f23face\" valign=\"top\" width=\"295\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"295\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr id=\"layout-row26\" class=\"layout layout-row clear-this \"><td id=\"layout-row-padding26\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout_table_a5d42e4016ba95676c5d0c08dded0a92da76cf78\" valign=\"top\" width=\"26\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"26\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin25\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row25\" class=\"layout layout-row widget _widget_spacer style25\" style=\"\"><td id=\"layout-row-padding25\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"388\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 388px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"388\" width=\"26\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr></table></td><td id=\"layout_table_2a8bd49bfe6839890ddad1d3770bbc80e298784c\" valign=\"top\" width=\"269\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"269\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin22\" valign=\"top\" style=\"padding: 0px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row22\" class=\"layout layout-row widget _widget_text style22\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-border22\" valign=\"top\" style=\"border-color: #999999; border-style: solid; border-width: 1px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-padding22\" valign=\"top\" style=\"padding: 20px 20px 30px 20px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div20\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 100%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div style=\"line-height: 100%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1;\" data-line-height=\"1\"> <span class=\"\" style='color: #999999; font-size: 34px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: \"times new roman\"; font-style: italic;'><span style=\"color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\" class=\"\">\"Lorem ipsum dolar sit amet, consectetur.\"<br style=\"color: #999999;\"><br style=\"color: #999999;\"></span><span class=\"\" style=\"color: #999999; font-size: 26px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span style=\"color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\" class=\"\">- S. Williams</span><br style=\"color: #999999;\"></span></span> </div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div20, #text_div20 div { line-height: 100% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin28\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr id=\"layout-row28\" class=\"layout layout-row widget _widget_spacer \"><td id=\"layout-row-padding28\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"30\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 30px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"30\" width=\"269\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td><td id=\"layout_table_07718ed3fc601a3c0d938b6fc0e27261628cdabc\" valign=\"top\" width=\"355\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"355\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr id=\"layout-row30\" class=\"layout layout-row clear-this \"><td id=\"layout-row-padding30\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout_table_8d9015d9aacd6b421019b80822dc49a7c0f795e5\" valign=\"top\" width=\"30\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"30\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin29\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr id=\"layout-row29\" class=\"layout layout-row widget _widget_spacer \"><td id=\"layout-row-padding29\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"325\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 325px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"325\" width=\"30\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr></table></td><td id=\"layout_table_1b61b68595417473009d9c168031e942c5c96f11\" valign=\"top\" width=\"325\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table \" width=\"325\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"layout-row-margin24\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row24\" class=\"layout layout-row widget _widget_text style24\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding24\" valign=\"top\" style=\"padding: 0 26px 36px 26px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div21\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 140%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.4; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div style=\"line-height: 140%; margin: 0; outline: none; padding: 0; color: #999999; mso-line-height-rule: exactly; line-height: 1.4;\" data-line-height=\"1.4\"> <p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span class=\"\" style=\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec tristique, tellus et sodales ornare, orci risus venenatis metus, et scelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed metus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus egestas.</span></p><p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><br style=\"font-family: georgia; font-size: 16px; color: #999999;color: #999999;\"></p><p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span class=\"\" style=\"color: #999999; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\"><span style=\"color: #999999; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; font-family: georgia;\" class=\"\">Donec tristique, tellus et sodales ornare, orci risus venenatis metus, et scelerisque erat quam sed est. Donec dictum fermentum feugiat. In sed metus sed eros ullamcorper cursus. Vivamus eu magna at lacus tempus egestas.</span><br style=\"color: #999999;\"></span></p> </div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div21, #text_div21 div { line-height: 140% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin1\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr id=\"layout-row1\" class=\"layout layout-row widget _widget_spacer \"><td id=\"layout-row-padding1\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"30\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 30px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"30\" width=\"650\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr><td id=\"layout-row-margin2\" valign=\"top\" style=\"padding: 0;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row2\" class=\"layout layout-row widget _widget_text style2\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding2\" valign=\"top\" style=\"padding: 20px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div2\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"line-height: 150%; color: inherit; font-size: 12px; font-weight: inherit; line-height: 1.5; text-decoration: inherit; font-family: Arial; mso-line-height-rule: exactly;\"> <div style=\"line-height: 150%; margin: 0; outline: none; padding: 0; text-align: center; mso-line-height-rule: exactly; line-height: 1.5;\" data-line-height=\"1.5\"> <p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><span style=\"color: #555555; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\" class=\"\">%SENDER-INFO-SINGLELINE%</span></p><p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><br style=\"color: #555555;\"></p><p class=\"p1\" style=\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"><a href=\"%UNSUBSCRIBELINK%\" target=\"_blank\" style=\"margin: 0; outline: none; padding: 0; color: #555555; text-decoration: underline;\" class=\"\"><span style=\"color: #555555; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\">Click here to unsubscribe</span></a></p></div><!--[if (gte mso 12)&(lte mso 15) ]>\n<style data-ac-keep=\"true\" data-ac-inline=\"false\"> #text_div2, #text_div2 div { line-height: 150% !important; };\n</style>\n<![endif]--></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></div></body></html>\n"
                        },
                        "htmlfetch": {
                          "type": "string",
                          "example": "now"
                        },
                        "textfetch": {
                          "type": "string",
                          "example": "now"
                        },
                        "hidden": {
                          "type": "string",
                          "example": "0"
                        },
                        "preview_mime": {
                          "type": "string",
                          "example": ""
                        },
                        "preview_data": {
                          "type": "string",
                          "example": ""
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/messages/3/user"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Message with id 10\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Message with id 10"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {},
              "examples": {
                "Request Example": {
                  "value": {
                    "message": {
                      "fromname": "John Doe",
                      "fromemail": "noreply@example.com",
                      "reply2": "hello@example.com",
                      "subject": "You are subscribing to %LISTNAME%",
                      "preheader_text": "Pre-header Text"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a message",
        "description": "",
        "operationId": "delete-a-message",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the message to delete",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a message",
        "description": "",
        "operationId": "retrieve-a-message",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the message to retrieve",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": {\n        \"userid\": \"1\",\n        \"ed_instanceid\": \"1\",\n        \"ed_version\": \"2\",\n        \"cdate\": \"2018-08-17T13:47:32-05:00\",\n        \"mdate\": \"2018-08-17T13:47:32-05:00\",\n        \"name\": \"Please confirm your subscription to %LISTNAME%\",\n        \"fromname\": \"John Doe\",\n        \"fromemail\": \"noreply@example.com\",\n        \"reply2\": \"\",\n        \"priority\": \"3\",\n        \"charset\": \"utf-8\",\n        \"encoding\": \"8bit\",\n        \"format\": \"mime\",\n        \"subject\": \"Please confirm your subscription to %LISTNAME%\",\n        \"preheader_text\": \"\",\n        \"text\": \" \\n\\nThank you for subscribing to %LISTNAME%!\\n\\nYou or someone has subscribed to this list on %SUBDATE% using the\\naddress %EMAIL%.\\n\\nTo confirm that you wish to be subscribed, please click the link below:\\n\\nConfirm My Subscription <%CONFIRMLINK%> \\n\\nIf you believe that this is a mistake and you did not intend on\\nsubscribing to this list,\\nyou can ignore this message and nothing else will happen.\",\n        \"html\": \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\\n<html lang=\\\"en\\\" style=\\\"margin: 0; outline: none; padding: 0;\\\"><head><!--[if !mso]><meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"><!--<![endif]--><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"Content-Language\\\" content=\\\"locale_contentlang\\\"><meta name=\\\"format-detection\\\" content=\\\"telephone=no\\\"><meta name=\\\"format-detection\\\" content=\\\"date=no\\\"><meta name=\\\"format-detection\\\" content=\\\"address=no\\\"><meta name=\\\"format-detection\\\" content=\\\"email=no\\\"><title>Preview</title><style data-ac-keep=\\\"true\\\">\\n.ExternalClass {width:100%; background:inherit; background-color:inherit;}\\n.ExternalClass p, .ExternalClass ul, .ExternalClass ol { Margin: 0; }\\n.undoreset div p, .undoreset p { margin-bottom: 20px; }\\ndiv[class^=\\\"aolmail_divbody\\\"] { overflow: auto; }\\n[owa] #ac-footer { padding: 20px 0px!important; background:inherit; background-color:inherit; }\\n</style><style data-ac-keep=\\\"true\\\">\\n@media only screen and (max-width: 600px) {\\t/*-------------------------------------------------------------------------*\\\\ Abandoned Cart widget \\\\*------------------------------------------------------------------------*/ .td_abandoned-cart img {display: block;padding-right: 0 !important;padding-bottom: 0 !important;width: 100% !important;max-width: 100% !important;height: auto !important;} body { padding: 0!important; font-size:1em!important; } * { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; } *[class].divbody {-webkit-text-size-adjust:none !important; width:auto !important;} *[class].td_picture img {width:auto !important;} *[class].td_text { line-height: 110%; } *[class].td_button { width: auto; } /* Collapse all block elements */ :not(.body) table { display: block!important; float:none!important; border-collapse:collapse !important; width:100% !important; min-width:100% !important; clear:both!important; } :not(.body) thead, :not(.body) tbody, :not(.body) tr { display:block!important; float:none!important; width:100% !important; } :not(.body) th, :not(.body) td, :not(.body) p { display:block!important; float:none!important; width:100% !important; clear:both!important; } /* Remove browser default styling for elements */ ul, ol { margin-left: 20px; margin-bottom: 10px; margin-top: 10px; -webkit-margin-before: 0; -webkit-margin-after: 0; -webkit-padding-start: 0; } /* Set default height for spacer once collapse */ *[class].spacer { height: auto!important; } a[href^=date]{ color:inherit !important; text-decoration:none !important;} a[href^=telephone]{ color:inherit !important; text-decoration:none !important;} a[href^=address]{ color:inherit !important; text-decoration:none !important;} a[href^=email]{ color:inherit !important; text-decoration:none !important;} /* Default table cell height */ td[height=\\\"10\\\"]{height:10px!important;font-size:10px!important;line-height:10px!important;}\\ntd[height=\\\"13\\\"]{height:13px!important;font-size:13px!important;line-height:13px!important;}\\ntd[height=\\\"14\\\"]{height:14px!important;font-size:14px!important;line-height:14px!important;}\\ntd[height=\\\"12\\\"]{height:12px!important;font-size:12px!important;line-height:12px!important;} /* Default social icons */ *[class].ac-social-icon-16 {width:16px !important; height:16px !important;} *[class].ac-social-icon-24 {width:24px !important; height:24px !important;} *[class].ac-social-icon-28 {width:28px !important; height:28px !important;} *[class].__ac_social_icons { margin-right: 0px !important; } }\\n</style><style data-ac-keep=\\\"true\\\"> </style><!--[if !mso]><!-- webfonts --><!--<![endif]--><!--[if lt mso 12]> <![endif]--></head><body id=\\\"ac-designer\\\" class=\\\"body\\\" style=\\\"font-family: Arial; line-height: 1.1; margin: 0px; background-color: #f5f5f5; width: 100%; text-align: center;\\\"><div class=\\\"divbody\\\" style=\\\"margin: 0px; outline: none; padding: 0px; color: #000000; font-family: arial; line-height: 1.1; width: 100%; background-color: #f5f5f5; background: #f5f5f5; text-align: center;\\\"><table class=\\\"template-table\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" align=\\\"left\\\" style=\\\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #f5f5f5; background: #f5f5f5;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" width=\\\"100%\\\"><table class=\\\"template-table\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"650\\\" bgcolor=\\\"#f5f5f5\\\" style=\\\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; max-width: 650px;\\\"><tr><td id=\\\"layout_table_4c01fd59953b175598dbdb0163afc56680171ae4\\\" valign=\\\"top\\\" align=\\\"center\\\" width=\\\"650\\\" style=\\\"background-color: #f5f5f5;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"layout layout-table root-table\\\" width=\\\"650\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #f5f5f5;\\\"><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin2\\\" valign=\\\"top\\\" style=\\\"background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr id=\\\"layout-row2\\\" class=\\\"layout layout-row widget _widget_spacer \\\"><td id=\\\"layout-row-padding2\\\" valign=\\\"top\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td valign=\\\"top\\\" height=\\\"30\\\"><div class=\\\"spacer\\\" style=\\\"margin: 0; outline: none; padding: 0; height: 30px;\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" width=\\\"100%\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tbody><tr><td class=\\\"spacer-body\\\" valign=\\\"top\\\" height=\\\"30\\\" width=\\\"650\\\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin1\\\" valign=\\\"top\\\" style=\\\"padding: 0; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row1\\\" class=\\\"layout layout-row widget _widget_text style1\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding1\\\" valign=\\\"top\\\" style=\\\"padding: 0 20px 20px 20px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div1\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\"> <span class=\\\"\\\" style=\\\"color: inherit; font-size: 10px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"> </span><p style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\\\"><span style=\\\"color: #000000; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">Thank you for subscribing to %LISTNAME%!</span></p></td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin3\\\" valign=\\\"top\\\" style=\\\"padding: 0; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row3\\\" class=\\\"layout layout-row widget _widget_text style3\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding3\\\" valign=\\\"top\\\" style=\\\"padding: 0 20px 20px 20px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div3\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\"> <span class=\\\"\\\" style=\\\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"> </span><p style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\\\"><span style=\\\"color: inherit; font-size: 13px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">You or someone has subscribed to this list on %SUBDATE% using the address %EMAIL%.</span></p></td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin4\\\" valign=\\\"top\\\" style=\\\"padding: 0 20px 0 20px; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row4\\\" class=\\\"layout layout-row widget _widget_text style4\\\" style=\\\"margin: 0; padding: 0; background-color: #ffffff;\\\"><td id=\\\"layout-row-padding4\\\" valign=\\\"top\\\" style=\\\"background-color: #ffffff; padding: 30px 30px 20px 30px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div4\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\"> <span class=\\\"\\\" style=\\\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"> </span><p style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\\\"><span class=\\\"\\\" style=\\\"color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\">To confirm that you wish to be subscribed, please click the link below:</span></p></td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin5\\\" valign=\\\"top\\\" style=\\\"padding: 0 20px 0 20px; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row5\\\" class=\\\"layout layout-row widget _widget_button style5\\\" style=\\\"background-color: #ffffff;\\\"><td id=\\\"layout-row-padding5\\\" valign=\\\"top\\\" style=\\\"background-color: #ffffff; padding: 0px 30px 30px 30px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td class=\\\"td_button td_block customizable\\\" valign=\\\"top\\\" align=\\\"left\\\" width=\\\"550\\\"> <div class=\\\"button-wrapper\\\" style=\\\"margin: 0; outline: none; padding: 0; text-align: center;\\\">\\n<!--[if mso]> <v:roundrect xmlns:v=\\\"urn:schemas-microsoft-com:vml\\\" xmlns:w=\\\"urn:schemas-microsoft-com:office:word\\\" href=\\\"%CONFIRMLINK%\\\" style=\\\"v-text-anchor:middle; width:202px; height:64px; \\\" arcsize=\\\"10%\\\" strokecolor=\\\"#4dcba9\\\" strokeweight=\\\"1pt\\\" fillcolor=\\\"#4dcba9\\\" o:button=\\\"true\\\" o:allowincell=\\\"true\\\" o:allowoverlap=\\\"false\\\" > <v:textbox inset=\\\"2px,2px,2px,2px\\\"> <center style=\\\"color:#ffffff;font-family:Arial; font-size:14px; line-height: 1.1;\\\">Confirm My Subscription</center> </v:textbox> </v:roundrect>\\n<![endif]--> <a href=\\\"%CONFIRMLINK%\\\" style=\\\"margin: 0; outline: none; padding: 14px; color: #ffffff; background-color: #4dcba9; border: 1px solid #4dcba9; border-radius: 4px; font-family: Arial; font-size: 14px; display: inline-block; line-height: 1.1; text-align: center; text-decoration: none; mso-hide: all;\\\"> <span style=\\\"color:#ffffff;font-family:Arial;font-size:14px;\\\"> Confirm My Subscription </span> </a> </div>\\n</td></tr></table></td></tr></table></td></tr><tr style=\\\"background-color: #f5f5f5;\\\"><td id=\\\"layout-row-margin6\\\" valign=\\\"top\\\" style=\\\"padding: 0; background-color: #f5f5f5;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\\\"><tr id=\\\"layout-row6\\\" class=\\\"layout layout-row widget _widget_text style6\\\" style=\\\"margin: 0; padding: 0;\\\"><td id=\\\"layout-row-padding6\\\" valign=\\\"top\\\" style=\\\"padding: 20px;\\\"><table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\\\"><tr><td id=\\\"text_div6\\\" class=\\\"td_text td_block\\\" valign=\\\"top\\\" align=\\\"left\\\" style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\\\"> <span class=\\\"\\\" style=\\\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\"> </span><p style=\\\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\\\"><span style=\\\"color: inherit; font-size: 12px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\\\" class=\\\"\\\">If you believe that this is a mistake and you did not intend on subscribing to this list,<br>you can ignore this message and nothing else will happen.</span></p></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></div></body></html>\\n\",\n        \"htmlfetch\": \"now\",\n        \"textfetch\": \"now\",\n        \"hidden\": \"0\",\n        \"preview_mime\": \"\",\n        \"preview_data\": \"\",\n        \"links\": {\n            \"user\": \"https://:account.api-us1.com/api/3/messages/3/user\"\n        },\n        \"id\": \"3\",\n        \"user\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "ed_instanceid": {
                          "type": "string",
                          "example": "1"
                        },
                        "ed_version": {
                          "type": "string",
                          "example": "2"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-08-17T13:47:32-05:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-08-17T13:47:32-05:00"
                        },
                        "name": {
                          "type": "string",
                          "example": "Please confirm your subscription to %LISTNAME%"
                        },
                        "fromname": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "fromemail": {
                          "type": "string",
                          "example": "noreply@example.com"
                        },
                        "reply2": {
                          "type": "string",
                          "example": ""
                        },
                        "priority": {
                          "type": "string",
                          "example": "3"
                        },
                        "charset": {
                          "type": "string",
                          "example": "utf-8"
                        },
                        "encoding": {
                          "type": "string",
                          "example": "8bit"
                        },
                        "format": {
                          "type": "string",
                          "example": "mime"
                        },
                        "subject": {
                          "type": "string",
                          "example": "Please confirm your subscription to %LISTNAME%"
                        },
                        "preheader_text": {
                          "type": "string",
                          "example": ""
                        },
                        "text": {
                          "type": "string",
                          "example": " \n\nThank you for subscribing to %LISTNAME%!\n\nYou or someone has subscribed to this list on %SUBDATE% using the\naddress %EMAIL%.\n\nTo confirm that you wish to be subscribed, please click the link below:\n\nConfirm My Subscription <%CONFIRMLINK%> \n\nIf you believe that this is a mistake and you did not intend on\nsubscribing to this list,\nyou can ignore this message and nothing else will happen."
                        },
                        "html": {
                          "type": "string",
                          "example": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html lang=\"en\" style=\"margin: 0; outline: none; padding: 0;\"><head><!--[if !mso]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><!--<![endif]--><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"><meta http-equiv=\"Content-Language\" content=\"locale_contentlang\"><meta name=\"format-detection\" content=\"telephone=no\"><meta name=\"format-detection\" content=\"date=no\"><meta name=\"format-detection\" content=\"address=no\"><meta name=\"format-detection\" content=\"email=no\"><title>Preview</title><style data-ac-keep=\"true\">\n.ExternalClass {width:100%; background:inherit; background-color:inherit;}\n.ExternalClass p, .ExternalClass ul, .ExternalClass ol { Margin: 0; }\n.undoreset div p, .undoreset p { margin-bottom: 20px; }\ndiv[class^=\"aolmail_divbody\"] { overflow: auto; }\n[owa] #ac-footer { padding: 20px 0px!important; background:inherit; background-color:inherit; }\n</style><style data-ac-keep=\"true\">\n@media only screen and (max-width: 600px) {\t/*-------------------------------------------------------------------------*\\ Abandoned Cart widget \\*------------------------------------------------------------------------*/ .td_abandoned-cart img {display: block;padding-right: 0 !important;padding-bottom: 0 !important;width: 100% !important;max-width: 100% !important;height: auto !important;} body { padding: 0!important; font-size:1em!important; } * { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; } *[class].divbody {-webkit-text-size-adjust:none !important; width:auto !important;} *[class].td_picture img {width:auto !important;} *[class].td_text { line-height: 110%; } *[class].td_button { width: auto; } /* Collapse all block elements */ :not(.body) table { display: block!important; float:none!important; border-collapse:collapse !important; width:100% !important; min-width:100% !important; clear:both!important; } :not(.body) thead, :not(.body) tbody, :not(.body) tr { display:block!important; float:none!important; width:100% !important; } :not(.body) th, :not(.body) td, :not(.body) p { display:block!important; float:none!important; width:100% !important; clear:both!important; } /* Remove browser default styling for elements */ ul, ol { margin-left: 20px; margin-bottom: 10px; margin-top: 10px; -webkit-margin-before: 0; -webkit-margin-after: 0; -webkit-padding-start: 0; } /* Set default height for spacer once collapse */ *[class].spacer { height: auto!important; } a[href^=date]{ color:inherit !important; text-decoration:none !important;} a[href^=telephone]{ color:inherit !important; text-decoration:none !important;} a[href^=address]{ color:inherit !important; text-decoration:none !important;} a[href^=email]{ color:inherit !important; text-decoration:none !important;} /* Default table cell height */ td[height=\"10\"]{height:10px!important;font-size:10px!important;line-height:10px!important;}\ntd[height=\"13\"]{height:13px!important;font-size:13px!important;line-height:13px!important;}\ntd[height=\"14\"]{height:14px!important;font-size:14px!important;line-height:14px!important;}\ntd[height=\"12\"]{height:12px!important;font-size:12px!important;line-height:12px!important;} /* Default social icons */ *[class].ac-social-icon-16 {width:16px !important; height:16px !important;} *[class].ac-social-icon-24 {width:24px !important; height:24px !important;} *[class].ac-social-icon-28 {width:28px !important; height:28px !important;} *[class].__ac_social_icons { margin-right: 0px !important; } }\n</style><style data-ac-keep=\"true\"> </style><!--[if !mso]><!-- webfonts --><!--<![endif]--><!--[if lt mso 12]> <![endif]--></head><body id=\"ac-designer\" class=\"body\" style=\"font-family: Arial; line-height: 1.1; margin: 0px; background-color: #f5f5f5; width: 100%; text-align: center;\"><div class=\"divbody\" style=\"margin: 0px; outline: none; padding: 0px; color: #000000; font-family: arial; line-height: 1.1; width: 100%; background-color: #f5f5f5; background: #f5f5f5; text-align: center;\"><table class=\"template-table\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" align=\"left\" style=\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #f5f5f5; background: #f5f5f5;\"><tr><td align=\"center\" valign=\"top\" width=\"100%\"><table class=\"template-table\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"650\" bgcolor=\"#f5f5f5\" style=\"font-size: 13px; min-width: auto; mso-table-lspace: 0pt; mso-table-rspace: 0pt; max-width: 650px;\"><tr><td id=\"layout_table_4c01fd59953b175598dbdb0163afc56680171ae4\" valign=\"top\" align=\"center\" width=\"650\" style=\"background-color: #f5f5f5;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"layout layout-table root-table\" width=\"650\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #f5f5f5;\"><tr style=\"background-color: #f5f5f5;\"><td id=\"layout-row-margin2\" valign=\"top\" style=\"background-color: #f5f5f5;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr id=\"layout-row2\" class=\"layout layout-row widget _widget_spacer \"><td id=\"layout-row-padding2\" valign=\"top\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td valign=\"top\" height=\"30\"><div class=\"spacer\" style=\"margin: 0; outline: none; padding: 0; height: 30px;\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tbody><tr><td class=\"spacer-body\" valign=\"top\" height=\"30\" width=\"650\"> </td></tr></tbody></table></div></td></tr></table></td></tr></table></td></tr><tr style=\"background-color: #f5f5f5;\"><td id=\"layout-row-margin1\" valign=\"top\" style=\"padding: 0; background-color: #f5f5f5;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row1\" class=\"layout layout-row widget _widget_text style1\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding1\" valign=\"top\" style=\"padding: 0 20px 20px 20px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div1\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\"> <span class=\"\" style=\"color: inherit; font-size: 10px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"> </span><p style=\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\"><span style=\"color: #000000; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\" class=\"\">Thank you for subscribing to %LISTNAME%!</span></p></td></tr></table></td></tr></table></td></tr><tr style=\"background-color: #f5f5f5;\"><td id=\"layout-row-margin3\" valign=\"top\" style=\"padding: 0; background-color: #f5f5f5;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row3\" class=\"layout layout-row widget _widget_text style3\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding3\" valign=\"top\" style=\"padding: 0 20px 20px 20px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div3\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\"> <span class=\"\" style=\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"> </span><p style=\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\"><span style=\"color: inherit; font-size: 13px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\" class=\"\">You or someone has subscribed to this list on %SUBDATE% using the address %EMAIL%.</span></p></td></tr></table></td></tr></table></td></tr><tr style=\"background-color: #f5f5f5;\"><td id=\"layout-row-margin4\" valign=\"top\" style=\"padding: 0 20px 0 20px; background-color: #f5f5f5;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row4\" class=\"layout layout-row widget _widget_text style4\" style=\"margin: 0; padding: 0; background-color: #ffffff;\"><td id=\"layout-row-padding4\" valign=\"top\" style=\"background-color: #ffffff; padding: 30px 30px 20px 30px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div4\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\"> <span class=\"\" style=\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"> </span><p style=\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\"><span class=\"\" style=\"color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit;\">To confirm that you wish to be subscribed, please click the link below:</span></p></td></tr></table></td></tr></table></td></tr><tr style=\"background-color: #f5f5f5;\"><td id=\"layout-row-margin5\" valign=\"top\" style=\"padding: 0 20px 0 20px; background-color: #f5f5f5;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row5\" class=\"layout layout-row widget _widget_button style5\" style=\"background-color: #ffffff;\"><td id=\"layout-row-padding5\" valign=\"top\" style=\"background-color: #ffffff; padding: 0px 30px 30px 30px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td class=\"td_button td_block customizable\" valign=\"top\" align=\"left\" width=\"550\"> <div class=\"button-wrapper\" style=\"margin: 0; outline: none; padding: 0; text-align: center;\">\n<!--[if mso]> <v:roundrect xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:w=\"urn:schemas-microsoft-com:office:word\" href=\"%CONFIRMLINK%\" style=\"v-text-anchor:middle; width:202px; height:64px; \" arcsize=\"10%\" strokecolor=\"#4dcba9\" strokeweight=\"1pt\" fillcolor=\"#4dcba9\" o:button=\"true\" o:allowincell=\"true\" o:allowoverlap=\"false\" > <v:textbox inset=\"2px,2px,2px,2px\"> <center style=\"color:#ffffff;font-family:Arial; font-size:14px; line-height: 1.1;\">Confirm My Subscription</center> </v:textbox> </v:roundrect>\n<![endif]--> <a href=\"%CONFIRMLINK%\" style=\"margin: 0; outline: none; padding: 14px; color: #ffffff; background-color: #4dcba9; border: 1px solid #4dcba9; border-radius: 4px; font-family: Arial; font-size: 14px; display: inline-block; line-height: 1.1; text-align: center; text-decoration: none; mso-hide: all;\"> <span style=\"color:#ffffff;font-family:Arial;font-size:14px;\"> Confirm My Subscription </span> </a> </div>\n</td></tr></table></td></tr></table></td></tr><tr style=\"background-color: #f5f5f5;\"><td id=\"layout-row-margin6\" valign=\"top\" style=\"padding: 0; background-color: #f5f5f5;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-collapse: initial !important;\"><tr id=\"layout-row6\" class=\"layout layout-row widget _widget_text style6\" style=\"margin: 0; padding: 0;\"><td id=\"layout-row-padding6\" valign=\"top\" style=\"padding: 20px;\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 13px; min-width: 100%; mso-table-lspace: 0pt; mso-table-rspace: 0pt;\"><tr><td id=\"text_div6\" class=\"td_text td_block\" valign=\"top\" align=\"left\" style=\"color: inherit; font-size: 12px; font-weight: inherit; line-height: 1; text-decoration: inherit; font-family: Arial;\"> <span class=\"\" style=\"color: inherit; font-size: 16px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\"> </span><p style=\"margin: 0; outline: none; padding: 0; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; text-decoration: inherit; text-align: center;\"><span style=\"color: inherit; font-size: 12px; font-weight: inherit; line-height: inherit; text-decoration: inherit;\" class=\"\">If you believe that this is a mistake and you did not intend on subscribing to this list,<br>you can ignore this message and nothing else will happen.</span></p></td></tr></table></td></tr></table></td></tr></table></td></tr></table></td></tr></table></div></body></html>\n"
                        },
                        "htmlfetch": {
                          "type": "string",
                          "example": "now"
                        },
                        "textfetch": {
                          "type": "string",
                          "example": "now"
                        },
                        "hidden": {
                          "type": "string",
                          "example": "0"
                        },
                        "preview_mime": {
                          "type": "string",
                          "example": ""
                        },
                        "preview_data": {
                          "type": "string",
                          "example": ""
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/messages/3/user"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Message with id 10\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Message with id 10"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/forms": {
      "get": {
        "summary": "List all forms",
        "description": "",
        "operationId": "forms-1",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"forms\": [\n        {\n            \"name\": \"Testing\",\n            \"action\": \"\",\n            \"actiondata\": {\n                \"actions\": [\n                    {\n                        \"type\": \"subscribe-to-list\",\n                        \"email\": \"johndoe@example.com\",\n                        \"list\": \"1\"\n                    }\n                ]\n            },\n            \"submit\": \"show-thank-you\",\n            \"submitdata\": {\n                \"url\": \"\"\n            },\n            \"url\": \"\",\n            \"layout\": \"inline-form\",\n            \"title\": \"\",\n            \"body\": \"\",\n            \"button\": \"Submit\",\n            \"thanks\": \"Thanks for signing up!\",\n            \"style\": {\n                \"background\": \"FFFFFF\",\n                \"dark\": true,\n                \"fontcolor\": \"000000\",\n                \"layout\": \"normal\",\n                \"border\": {\n                    \"width\": 0,\n                    \"style\": \"solid\",\n                    \"color\": \"B0B0B0\",\n                    \"radius\": 0\n                },\n                \"width\": 500,\n                \"ac_branding\": true,\n                \"button\": {\n                    \"padding\": 10,\n                    \"background\": \"333333\",\n                    \"fontcolor\": \"FFFFFF\",\n                    \"border\": {\n                        \"radius\": 4,\n                        \"color\": \"333333\",\n                        \"style\": \"solid\",\n                        \"width\": 0\n                    }\n                }\n            },\n            \"options\": {\n                \"blanks_overwrite\": true,\n                \"confaction\": \"show-message\",\n                \"sendoptin\": true,\n                \"optin_id\": 1,\n                \"optin_created\": true,\n                \"confform\": \"2\"\n            },\n            \"cfields\": [\n                {\n                    \"type\": \"header\",\n                    \"header\": \"Subscribe for Email Updates\",\n                    \"class\": \"_x41699710\"\n                },\n                {\n                    \"type\": \"html\",\n                    \"html\": \"<p>Add a descriptive message telling what your visitor is signing up for here.</p>\",\n                    \"class\": \"_x50329289\"\n                },\n                {\n                    \"header\": \"Full Name\",\n                    \"type\": \"fullname\",\n                    \"default_text\": \"Type your name\",\n                    \"class\": \"_x67999677\"\n                },\n                {\n                    \"header\": \"Email\",\n                    \"type\": \"email\",\n                    \"default_text\": \"Type your email\",\n                    \"required\": true,\n                    \"class\": \"_x68140262\"\n                }\n            ],\n            \"parentformid\": \"0\",\n            \"userid\": \"1\",\n            \"addressid\": \"0\",\n            \"cdate\": \"2018-08-17T13:47:31-05:00\",\n            \"udate\": \"2018-08-17T13:47:38-05:00\",\n            \"entries\": \"0\",\n            \"aid\": \"0\",\n            \"defaultscreenshot\": \"http://img-us1.com/default-form.gif\",\n            \"recent\": [],\n            \"contacts\": 0,\n            \"deals\": 0,\n            \"links\": {\n                \"address\": \"https://:account.api-us1.com/api/3/forms/1/address\"\n            },\n            \"id\": \"1\",\n            \"address\": null\n        }\n    ],\n    \"meta\": {\n        \"total\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "forms": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Testing"
                          },
                          "action": {
                            "type": "string",
                            "example": ""
                          },
                          "actiondata": {
                            "type": "object",
                            "properties": {
                              "actions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "subscribe-to-list"
                                    },
                                    "email": {
                                      "type": "string",
                                      "example": "johndoe@example.com"
                                    },
                                    "list": {
                                      "type": "string",
                                      "example": "1"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "submit": {
                            "type": "string",
                            "example": "show-thank-you"
                          },
                          "submitdata": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          },
                          "url": {
                            "type": "string",
                            "example": ""
                          },
                          "layout": {
                            "type": "string",
                            "example": "inline-form"
                          },
                          "title": {
                            "type": "string",
                            "example": ""
                          },
                          "body": {
                            "type": "string",
                            "example": ""
                          },
                          "button": {
                            "type": "string",
                            "example": "Submit"
                          },
                          "thanks": {
                            "type": "string",
                            "example": "Thanks for signing up!"
                          },
                          "style": {
                            "type": "object",
                            "properties": {
                              "background": {
                                "type": "string",
                                "example": "FFFFFF"
                              },
                              "dark": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "fontcolor": {
                                "type": "string",
                                "example": "000000"
                              },
                              "layout": {
                                "type": "string",
                                "example": "normal"
                              },
                              "border": {
                                "type": "object",
                                "properties": {
                                  "width": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "style": {
                                    "type": "string",
                                    "example": "solid"
                                  },
                                  "color": {
                                    "type": "string",
                                    "example": "B0B0B0"
                                  },
                                  "radius": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  }
                                }
                              },
                              "width": {
                                "type": "integer",
                                "example": 500,
                                "default": 0
                              },
                              "ac_branding": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "button": {
                                "type": "object",
                                "properties": {
                                  "padding": {
                                    "type": "integer",
                                    "example": 10,
                                    "default": 0
                                  },
                                  "background": {
                                    "type": "string",
                                    "example": "333333"
                                  },
                                  "fontcolor": {
                                    "type": "string",
                                    "example": "FFFFFF"
                                  },
                                  "border": {
                                    "type": "object",
                                    "properties": {
                                      "radius": {
                                        "type": "integer",
                                        "example": 4,
                                        "default": 0
                                      },
                                      "color": {
                                        "type": "string",
                                        "example": "333333"
                                      },
                                      "style": {
                                        "type": "string",
                                        "example": "solid"
                                      },
                                      "width": {
                                        "type": "integer",
                                        "example": 0,
                                        "default": 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "options": {
                            "type": "object",
                            "properties": {
                              "blanks_overwrite": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "confaction": {
                                "type": "string",
                                "example": "show-message"
                              },
                              "sendoptin": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "optin_id": {
                                "type": "integer",
                                "example": 1,
                                "default": 0
                              },
                              "optin_created": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "confform": {
                                "type": "string",
                                "example": "2"
                              }
                            }
                          },
                          "cfields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "header"
                                },
                                "header": {
                                  "type": "string",
                                  "example": "Subscribe for Email Updates"
                                },
                                "class": {
                                  "type": "string",
                                  "example": "_x41699710"
                                }
                              }
                            }
                          },
                          "parentformid": {
                            "type": "string",
                            "example": "0"
                          },
                          "userid": {
                            "type": "string",
                            "example": "1"
                          },
                          "addressid": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-17T13:47:31-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2018-08-17T13:47:38-05:00"
                          },
                          "entries": {
                            "type": "string",
                            "example": "0"
                          },
                          "aid": {
                            "type": "string",
                            "example": "0"
                          },
                          "defaultscreenshot": {
                            "type": "string",
                            "example": "http://img-us1.com/default-form.gif"
                          },
                          "recent": {
                            "type": "array"
                          },
                          "contacts": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "deals": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/forms/1/address"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "address": {}
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/forms/{id}": {
      "get": {
        "summary": "Retrieve a form",
        "description": "",
        "operationId": "retrieve-forms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the form to retrieve",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"form\": {\n        \"name\": \"Test Form\",\n        \"action\": \"\",\n        \"actiondata\": {\n            \"actions\": [\n                {\n                    \"type\": \"email-results\",\n                    \"email\": \"johndoe@example.com\",\n                    \"fromname\": \"John Doe\",\n                    \"fromemail\": \"johndoe@example.com\",\n                    \"subject\": \"Form submission results\"\n                }\n            ]\n        },\n        \"submit\": \"show-thank-you\",\n        \"submitdata\": {\n            \"url\": \"\"\n        },\n        \"url\": \"\",\n        \"layout\": \"inline-form\",\n        \"title\": \"\",\n        \"body\": \"\",\n        \"button\": \"Submit\",\n        \"thanks\": \"Thanks for signing up!\",\n        \"style\": {\n            \"background\": \"FFFFFF\",\n            \"dark\": true,\n            \"fontcolor\": \"000000\",\n            \"layout\": \"normal\",\n            \"border\": {\n                \"width\": 0,\n                \"style\": \"solid\",\n                \"color\": \"B0B0B0\",\n                \"radius\": 0\n            },\n            \"width\": 500,\n            \"ac_branding\": true,\n            \"button\": {\n                \"padding\": 10,\n                \"background\": \"333333\",\n                \"fontcolor\": \"FFFFFF\",\n                \"border\": {\n                    \"radius\": 4,\n                    \"color\": \"333333\",\n                    \"style\": \"solid\",\n                    \"width\": 0\n                }\n            },\n            \"customcss\": \"\"\n        },\n        \"options\": {\n            \"blanks_overwrite\": true,\n            \"confaction\": \"show-message\"\n        },\n        \"cfields\": [\n            {\n                \"type\": \"header\",\n                \"header\": \"Contact Us\",\n                \"class\": \"_x29498744\",\n                \"required_options\": {}\n            },\n            {\n                \"type\": \"html\",\n                \"html\": \"<p>Please provide the information below and we'll be in touch soon.</p>\",\n                \"class\": \"_x14271862\",\n                \"required_options\": {}\n            },\n            {\n                \"header\": \"Full Name\",\n                \"type\": \"fullname\",\n                \"default_text\": \"\",\n                \"class\": \"_x13100531\",\n                \"required_options\": {},\n                \"required\": true\n            },\n            {\n                \"header\": \"Email\",\n                \"type\": \"email\",\n                \"default_text\": \"\",\n                \"required\": true,\n                \"class\": \"_x37378733\",\n                \"required_options\": {}\n            },\n            {\n                \"type\": \"organization\",\n                \"header\": \"Company\",\n                \"default_text\": \"\",\n                \"class\": \"_x16906569\",\n                \"required_options\": {},\n                \"required\": false\n            },\n            {\n                \"id\": \"13\",\n                \"header\": \"Role in Company\",\n                \"required\": true,\n                \"class\": \"_field13\",\n                \"required_options\": {}\n            },\n            {\n                \"id\": \"46\",\n                \"header\": \"What do you need help with?\",\n                \"required\": true,\n                \"class\": \"_field46\",\n                \"required_options\": {}\n            }\n        ],\n        \"parentformid\": \"0\",\n        \"userid\": \"1\",\n        \"addressid\": \"0\",\n        \"cdate\": \"2018-10-07T09:12:46-06:00\",\n        \"udate\": \"2018-10-12T11:18:52-06:00\",\n        \"entries\": \"0\",\n        \"aid\": null,\n        \"links\": {\n            \"address\": \"https://:account.api-us1.com/api/3/forms/13/address\"\n        },\n        \"id\": \"13\",\n        \"address\": null\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "form": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Test Form"
                        },
                        "action": {
                          "type": "string",
                          "example": ""
                        },
                        "actiondata": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "email-results"
                                  },
                                  "email": {
                                    "type": "string",
                                    "example": "johndoe@example.com"
                                  },
                                  "fromname": {
                                    "type": "string",
                                    "example": "John Doe"
                                  },
                                  "fromemail": {
                                    "type": "string",
                                    "example": "johndoe@example.com"
                                  },
                                  "subject": {
                                    "type": "string",
                                    "example": "Form submission results"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "submit": {
                          "type": "string",
                          "example": "show-thank-you"
                        },
                        "submitdata": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        },
                        "url": {
                          "type": "string",
                          "example": ""
                        },
                        "layout": {
                          "type": "string",
                          "example": "inline-form"
                        },
                        "title": {
                          "type": "string",
                          "example": ""
                        },
                        "body": {
                          "type": "string",
                          "example": ""
                        },
                        "button": {
                          "type": "string",
                          "example": "Submit"
                        },
                        "thanks": {
                          "type": "string",
                          "example": "Thanks for signing up!"
                        },
                        "style": {
                          "type": "object",
                          "properties": {
                            "background": {
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "dark": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "fontcolor": {
                              "type": "string",
                              "example": "000000"
                            },
                            "layout": {
                              "type": "string",
                              "example": "normal"
                            },
                            "border": {
                              "type": "object",
                              "properties": {
                                "width": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "style": {
                                  "type": "string",
                                  "example": "solid"
                                },
                                "color": {
                                  "type": "string",
                                  "example": "B0B0B0"
                                },
                                "radius": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                }
                              }
                            },
                            "width": {
                              "type": "integer",
                              "example": 500,
                              "default": 0
                            },
                            "ac_branding": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "button": {
                              "type": "object",
                              "properties": {
                                "padding": {
                                  "type": "integer",
                                  "example": 10,
                                  "default": 0
                                },
                                "background": {
                                  "type": "string",
                                  "example": "333333"
                                },
                                "fontcolor": {
                                  "type": "string",
                                  "example": "FFFFFF"
                                },
                                "border": {
                                  "type": "object",
                                  "properties": {
                                    "radius": {
                                      "type": "integer",
                                      "example": 4,
                                      "default": 0
                                    },
                                    "color": {
                                      "type": "string",
                                      "example": "333333"
                                    },
                                    "style": {
                                      "type": "string",
                                      "example": "solid"
                                    },
                                    "width": {
                                      "type": "integer",
                                      "example": 0,
                                      "default": 0
                                    }
                                  }
                                }
                              }
                            },
                            "customcss": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "blanks_overwrite": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "confaction": {
                              "type": "string",
                              "example": "show-message"
                            }
                          }
                        },
                        "cfields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "header"
                              },
                              "header": {
                                "type": "string",
                                "example": "Contact Us"
                              },
                              "class": {
                                "type": "string",
                                "example": "_x29498744"
                              },
                              "required_options": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "parentformid": {
                          "type": "string",
                          "example": "0"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "addressid": {
                          "type": "string",
                          "example": "0"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-10-07T09:12:46-06:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2018-10-12T11:18:52-06:00"
                        },
                        "entries": {
                          "type": "string",
                          "example": "0"
                        },
                        "aid": {},
                        "links": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/forms/13/address"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "13"
                        },
                        "address": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Form with id 7\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Form with id 7"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lists": {
      "get": {
        "summary": "Retrieve all lists",
        "description": "",
        "operationId": "retrieve-all-lists",
        "parameters": [
          {
            "name": "filters[name]",
            "in": "query",
            "description": "Filter by the name of the list",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of returned results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[name][<operator>]",
            "in": "query",
            "description": "Filters lists by list name according to the operator specified. (See supported operators below)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[name]",
            "in": "query",
            "description": "Orders filtered results by weight, ascending order, or descending order. If weight is used, exact matches are returned first, followed by matches starting with what was filtered by, followed by the rest of the results.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"lists\": [\n        {\n            \"stringid\": \"email-subscription\",\n            \"userid\": \"1\",\n            \"name\": \"Email Subscription\",\n            \"cdate\": \"2018-08-06T16:30:41-05:00\",\n            \"p_use_tracking\": \"1\",\n            \"p_use_analytics_read\": \"0\",\n            \"p_use_analytics_link\": \"0\",\n            \"p_use_twitter\": \"0\",\n            \"p_use_facebook\": \"0\",\n            \"p_embed_image\": \"1\",\n            \"p_use_captcha\": \"1\",\n            \"send_last_broadcast\": \"0\",\n            \"private\": \"0\",\n            \"analytics_domains\": null,\n            \"analytics_source\": \"\",\n            \"analytics_ua\": \"\",\n            \"twitter_token\": \"\",\n            \"twitter_token_secret\": \"\",\n            \"facebook_session\": null,\n            \"carboncopy\": null,\n            \"subscription_notify\": null,\n            \"unsubscription_notify\": null,\n            \"require_name\": \"0\",\n            \"get_unsubscribe_reason\": \"0\",\n            \"to_name\": \"Subscriber\",\n            \"optinoptout\": \"1\",\n            \"sender_name\": \"\",\n            \"sender_addr1\": \"\",\n            \"sender_addr2\": \"\",\n            \"sender_city\": \"\",\n            \"sender_state\": \"\",\n            \"sender_zip\": \"\",\n            \"sender_country\": \"\",\n            \"sender_phone\": \"\",\n            \"sender_url\": \"http://www.ilankreimont.com\",\n            \"sender_reminder\": \"You signed up for my mailing list.\",\n            \"fulladdress\": \"\",\n            \"optinmessageid\": \"0\",\n            \"optoutconf\": \"0\",\n            \"deletestamp\": null,\n            \"udate\": null,\n            \"links\": {\n                \"contactGoalLists\": \"https://:account.api-us1.com/api/3/lists/1/contactGoalLists\",\n                \"user\": \"https://:account.api-us1.com/api/3/lists/1/user\",\n                \"addressLists\": \"https://:account.api-us1.com/api/3/lists/1/addressLists\"\n            },\n            \"id\": \"1\",\n            \"user\": \"1\"\n        },\n        {\n            \"stringid\": \"robert-list\",\n            \"userid\": \"1\",\n            \"name\": \"Robert List\",\n            \"cdate\": \"2018-09-07T08:56:49-05:00\",\n            \"p_use_tracking\": \"1\",\n            \"p_use_analytics_read\": \"0\",\n            \"p_use_analytics_link\": \"0\",\n            \"p_use_twitter\": \"0\",\n            \"p_use_facebook\": \"0\",\n            \"p_embed_image\": \"1\",\n            \"p_use_captcha\": \"1\",\n            \"send_last_broadcast\": \"0\",\n            \"private\": \"0\",\n            \"analytics_domains\": null,\n            \"analytics_source\": \"\",\n            \"analytics_ua\": \"\",\n            \"twitter_token\": \"\",\n            \"twitter_token_secret\": \"\",\n            \"facebook_session\": null,\n            \"carboncopy\": null,\n            \"subscription_notify\": null,\n            \"unsubscription_notify\": null,\n            \"require_name\": \"0\",\n            \"get_unsubscribe_reason\": \"0\",\n            \"to_name\": \"Subscriber\",\n            \"optinoptout\": \"1\",\n            \"sender_name\": \"\",\n            \"sender_addr1\": \"\",\n            \"sender_addr2\": \"\",\n            \"sender_city\": \"\",\n            \"sender_state\": \"\",\n            \"sender_zip\": \"\",\n            \"sender_country\": \"\",\n            \"sender_phone\": \"\",\n            \"sender_url\": \"http://www.activecampaign.com\",\n            \"sender_reminder\": \"Test\",\n            \"fulladdress\": \"\",\n            \"optinmessageid\": \"0\",\n            \"optoutconf\": \"0\",\n            \"deletestamp\": null,\n            \"udate\": null,\n            \"links\": {\n                \"contactGoalLists\": \"https://:account.api-us1.com/api/3/lists/2/contactGoalLists\",\n                \"user\": \"https://:account.api-us1.com/api/3/lists/2/user\",\n                \"addressLists\": \"https://:account.api-us1.com/api/3/lists/2/addressLists\"\n            },\n            \"id\": \"2\",\n            \"user\": \"1\"\n        },\n        {\n            \"stringid\": \"mark-list\",\n            \"userid\": \"1\",\n            \"name\": \"Mark List\",\n            \"cdate\": \"2018-09-14T08:53:28-05:00\",\n            \"p_use_tracking\": \"1\",\n            \"p_use_analytics_read\": \"0\",\n            \"p_use_analytics_link\": \"0\",\n            \"p_use_twitter\": \"0\",\n            \"p_use_facebook\": \"0\",\n            \"p_embed_image\": \"1\",\n            \"p_use_captcha\": \"1\",\n            \"send_last_broadcast\": \"0\",\n            \"private\": \"0\",\n            \"analytics_domains\": null,\n            \"analytics_source\": \"\",\n            \"analytics_ua\": \"\",\n            \"twitter_token\": \"\",\n            \"twitter_token_secret\": \"\",\n            \"facebook_session\": null,\n            \"carboncopy\": null,\n            \"subscription_notify\": null,\n            \"unsubscription_notify\": null,\n            \"require_name\": \"0\",\n            \"get_unsubscribe_reason\": \"0\",\n            \"to_name\": \"Subscriber\",\n            \"optinoptout\": \"1\",\n            \"sender_name\": \"\",\n            \"sender_addr1\": \"\",\n            \"sender_addr2\": \"\",\n            \"sender_city\": \"\",\n            \"sender_state\": \"\",\n            \"sender_zip\": \"\",\n            \"sender_country\": \"\",\n            \"sender_phone\": \"\",\n            \"sender_url\": \"http://www.activecampaign.com\",\n            \"sender_reminder\": \"testing.\",\n            \"fulladdress\": \"\",\n            \"optinmessageid\": \"0\",\n            \"optoutconf\": \"0\",\n            \"deletestamp\": null,\n            \"udate\": null,\n            \"links\": {\n                \"contactGoalLists\": \"https://:account.api-us1.com/api/3/lists/3/contactGoalLists\",\n                \"user\": \"https://:account.api-us1.com/api/3/lists/3/user\",\n                \"addressLists\": \"https://:account.api-us1.com/api/3/lists/3/addressLists\"\n            },\n            \"id\": \"3\",\n            \"user\": \"1\"\n        },\n        {\n            \"stringid\": \"\",\n            \"userid\": \"0\",\n            \"name\": \"\",\n            \"cdate\": \"2018-09-25T15:24:37-05:00\",\n            \"p_use_tracking\": \"1\",\n            \"p_use_analytics_read\": \"0\",\n            \"p_use_analytics_link\": \"0\",\n            \"p_use_twitter\": \"0\",\n            \"p_use_facebook\": \"0\",\n            \"p_embed_image\": \"1\",\n            \"p_use_captcha\": \"1\",\n            \"send_last_broadcast\": \"0\",\n            \"private\": \"0\",\n            \"analytics_domains\": null,\n            \"analytics_source\": \"\",\n            \"analytics_ua\": \"\",\n            \"twitter_token\": \"\",\n            \"twitter_token_secret\": \"\",\n            \"facebook_session\": null,\n            \"carboncopy\": null,\n            \"subscription_notify\": null,\n            \"unsubscription_notify\": null,\n            \"require_name\": \"0\",\n            \"get_unsubscribe_reason\": \"0\",\n            \"to_name\": \"Subscriber\",\n            \"optinoptout\": \"1\",\n            \"sender_name\": \"\",\n            \"sender_addr1\": \"\",\n            \"sender_addr2\": \"\",\n            \"sender_city\": \"\",\n            \"sender_state\": \"\",\n            \"sender_zip\": \"\",\n            \"sender_country\": \"\",\n            \"sender_phone\": \"\",\n            \"sender_url\": null,\n            \"sender_reminder\": null,\n            \"fulladdress\": null,\n            \"optinmessageid\": \"0\",\n            \"optoutconf\": \"0\",\n            \"deletestamp\": null,\n            \"udate\": \"2018-09-25T15:24:37-05:00\",\n            \"links\": {\n                \"contactGoalLists\": \"https://:account.api-us1.com/api/3/lists/4/contactGoalLists\",\n                \"user\": \"https://:account.api-us1.com/api/3/lists/4/user\",\n                \"addressLists\": \"https://:account.api-us1.com/api/3/lists/4/addressLists\"\n            },\n            \"id\": \"4\",\n            \"user\": null\n        }\n    ],\n    \"meta\": {\n        \"total\": \"4\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stringid": {
                            "type": "string",
                            "example": "email-subscription"
                          },
                          "userid": {
                            "type": "string",
                            "example": "1"
                          },
                          "name": {
                            "type": "string",
                            "example": "Email Subscription"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-06T16:30:41-05:00"
                          },
                          "p_use_tracking": {
                            "type": "string",
                            "example": "1"
                          },
                          "p_use_analytics_read": {
                            "type": "string",
                            "example": "0"
                          },
                          "p_use_analytics_link": {
                            "type": "string",
                            "example": "0"
                          },
                          "p_use_twitter": {
                            "type": "string",
                            "example": "0"
                          },
                          "p_use_facebook": {
                            "type": "string",
                            "example": "0"
                          },
                          "p_embed_image": {
                            "type": "string",
                            "example": "1"
                          },
                          "p_use_captcha": {
                            "type": "string",
                            "example": "1"
                          },
                          "send_last_broadcast": {
                            "type": "string",
                            "example": "0"
                          },
                          "private": {
                            "type": "string",
                            "example": "0"
                          },
                          "analytics_domains": {},
                          "analytics_source": {
                            "type": "string",
                            "example": ""
                          },
                          "analytics_ua": {
                            "type": "string",
                            "example": ""
                          },
                          "twitter_token": {
                            "type": "string",
                            "example": ""
                          },
                          "twitter_token_secret": {
                            "type": "string",
                            "example": ""
                          },
                          "facebook_session": {},
                          "carboncopy": {},
                          "subscription_notify": {},
                          "unsubscription_notify": {},
                          "require_name": {
                            "type": "string",
                            "example": "0"
                          },
                          "get_unsubscribe_reason": {
                            "type": "string",
                            "example": "0"
                          },
                          "to_name": {
                            "type": "string",
                            "example": "Subscriber"
                          },
                          "optinoptout": {
                            "type": "string",
                            "example": "1"
                          },
                          "sender_name": {
                            "type": "string",
                            "example": ""
                          },
                          "sender_addr1": {
                            "type": "string",
                            "example": ""
                          },
                          "sender_addr2": {
                            "type": "string",
                            "example": ""
                          },
                          "sender_city": {
                            "type": "string",
                            "example": ""
                          },
                          "sender_state": {
                            "type": "string",
                            "example": ""
                          },
                          "sender_zip": {
                            "type": "string",
                            "example": ""
                          },
                          "sender_country": {
                            "type": "string",
                            "example": ""
                          },
                          "sender_phone": {
                            "type": "string",
                            "example": ""
                          },
                          "sender_url": {
                            "type": "string",
                            "example": "http://www.ilankreimont.com"
                          },
                          "sender_reminder": {
                            "type": "string",
                            "example": "You signed up for my mailing list."
                          },
                          "fulladdress": {
                            "type": "string",
                            "example": ""
                          },
                          "optinmessageid": {
                            "type": "string",
                            "example": "0"
                          },
                          "optoutconf": {
                            "type": "string",
                            "example": "0"
                          },
                          "deletestamp": {},
                          "udate": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "contactGoalLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/lists/1/contactGoalLists"
                              },
                              "user": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/lists/1/user"
                              },
                              "addressLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/lists/1/addressLists"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "user": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 403,\n            \"title\": \"Forbidden\",\n            \"detail\": \"You do not have permission to view lists.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 403,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Forbidden"
                          },
                          "detail": {
                            "type": "string",
                            "example": "You do not have permission to view lists."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a list",
        "description": "",
        "operationId": "create-new-list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "list": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the list to create"
                      },
                      "stringid": {
                        "type": "string",
                        "description": "URL-safe list name. Example: 'list-name-sample'"
                      },
                      "sender_url": {
                        "type": "string",
                        "description": "The website URL this list is for."
                      },
                      "sender_reminder": {
                        "type": "string",
                        "description": "A reminder for your contacts as to why they are on this list and you are messaging them."
                      },
                      "send_last_broadcast": {
                        "type": "boolean",
                        "description": "Boolean value indicating whether or not to send the last sent campaign to this list to a new subscriber upon subscribing. 1 = yes, 0 = no",
                        "default": false
                      },
                      "carboncopy": {
                        "type": "string",
                        "description": "Comma-separated list of email addresses to send a copy of all mailings to upon send"
                      },
                      "subscription_notify": {
                        "type": "string",
                        "description": "Comma-separated list of email addresses to notify when a new subscriber joins this list."
                      },
                      "unsubscription_notify": {
                        "type": "string",
                        "description": "Comma-separated list of email addresses to notify when a subscriber unsubscribes from this list."
                      },
                      "user": {
                        "type": "integer",
                        "description": "User Id of the list owner.  A list owner is able to control campaign branding.  A property of list.userid also exists on this object; both properties map to the same list owner field and are being maintained in the response object for backward compatibility.  If you post values for both list.user and list.userid, the value of list.user will be used.",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "name",
                      "stringid",
                      "sender_url",
                      "sender_reminder"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "list": {
                      "name": "Name of List",
                      "stringid": "Name-of-list",
                      "sender_url": "http://activecampaign.com",
                      "sender_reminder": "You are receiving this email as you subscribed to a newsletter when making an order on our site.",
                      "send_last_broadcast": 0,
                      "carboncopy": "",
                      "subscription_notify": "",
                      "unsubscription_notify": "",
                      "user": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"list\": {\n        \"name\": \"Name of List\",\n        \"stringid\": \"Name-of-list\",\n        \"cdate\": \"2019-02-27T19:06:23-05:00\",\n        \"udate\": \"2019-02-27T19:06:23-05:00\",\n        \"links\": {\n            \"contactGoalLists\": \"https://:account.api-us1.com/api/:version/lists/6/contactGoalLists\",\n            \"user\": \"https://:account.api-us1.com/api/:version/lists/6/user\",\n            \"addressLists\": \"https://:account.api-us1.com/api/:version/lists/6/addressLists\"\n        },\n        \"id\": \"6\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Name of List"
                        },
                        "stringid": {
                          "type": "string",
                          "example": "Name-of-list"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2019-02-27T19:06:23-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2019-02-27T19:06:23-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "contactGoalLists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/lists/6/contactGoalLists"
                            },
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/lists/6/user"
                            },
                            "addressLists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/lists/6/addressLists"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "6"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 403,\n            \"title\": \"Forbidden\",\n            \"detail\": \"You do not have permission to create lists.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 403,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Forbidden"
                          },
                          "detail": {
                            "type": "string",
                            "example": "You do not have permission to create lists."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fieldValues/{id}": {
      "get": {
        "summary": "Retrieve a custom field value",
        "description": "",
        "operationId": "retrieve-a-fieldvalues",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the fieldValue to retrieve",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldValue\": {\n        \"contact\": \"0\",\n        \"field\": null,\n        \"value\": null,\n        \"cdate\": \"2018-09-18T10:30:31-05:00\",\n        \"udate\": \"2018-09-18T10:30:31-05:00\",\n        \"links\": {\n            \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/2/owner\",\n            \"field\": \"https://:account.api-us1.com/api/3/fieldValues/2/field\"\n        },\n        \"id\": \"2\",\n        \"owner\": null\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldValue": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "string",
                          "example": "0"
                        },
                        "field": {},
                        "value": {},
                        "cdate": {
                          "type": "string",
                          "example": "2018-09-18T10:30:31-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2018-09-18T10:30:31-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "owner": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/fieldValues/2/owner"
                            },
                            "field": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/fieldValues/2/field"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "owner": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for FieldValue with id 10\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for FieldValue with id 10"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a custom field value",
        "description": "",
        "operationId": "delete-a-fieldvalue-1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the fieldValue to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Forbidden\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a custom field value for contact",
        "description": "",
        "operationId": "update-a-custom-field-value-for-contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the fieldValue to update",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fieldValue": {
                    "properties": {
                      "contact": {
                        "type": "string",
                        "description": "ID of the contact whose field value you're updating"
                      },
                      "field": {
                        "type": "string",
                        "description": "ID of the custom field whose value you're updating for the contact"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value for the field that you're updating"
                      }
                    },
                    "required": [
                      "contact",
                      "field",
                      "value"
                    ],
                    "type": "object"
                  },
                  "useDefaults": {
                    "type": "boolean",
                    "description": "If true, this will populate the missing required fields for this contact with default values",
                    "default": false
                  }
                }
              },
              "examples": {
                "text/textarea/hidden value": {
                  "value": {
                    "fieldValue": {
                      "contact": 4,
                      "field": 24,
                      "value": "Blue"
                    },
                    "useDefaults": true
                  }
                },
                "dropdown/radio value": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 5,
                      "value": "Option 1"
                    }
                  }
                },
                "checkbox/listbox values (multiple)": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 6,
                      "value": "||Option 1||Option 3||Option 4||"
                    }
                  }
                },
                "date value": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 7,
                      "value": "2018-12-31"
                    }
                  }
                },
                "datetime value (ISO)": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 7,
                      "value": "2020-05-19T02:45:00-05:00"
                    }
                  }
                },
                "checkbox/listbox values (single)": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 6,
                      "value": "||Option 2||"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contacts\": [\n        {\n            \"cdate\": \"2018-08-06T16:56:43-05:00\",\n            \"email\": \"johndoe@example.com\",\n            \"phone\": \"\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": \"0000-00-00\",\n            \"ip\": \"4\",\n            \"ua\": \"\",\n            \"hash\": \"867d56644591991f6b50e1cb913f038b\",\n            \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": \"0000-00-00\",\n            \"gravatar\": \"0\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": \"2018-10-24T13:33:06-05:00\",\n            \"udate\": \"2018-10-24T13:33:11-05:00\",\n            \"edate\": \"2018-10-24T13:33:07-05:00\",\n            \"deleted_at\": \"0000-00-00 00:00:00\",\n            \"created_utc_timestamp\": \"2018-09-21 12:04:48\",\n            \"updated_utc_timestamp\": \"2018-10-24 13:33:11\",\n            \"links\": {\n                \"bounceLogs\": \"https://:account.api-us1.com/api/:version/contacts/24/bounceLogs\",\n                \"contactAutomations\": \"https://:account.api-us1.com/api/:version/contacts/24/contactAutomations\",\n                \"contactData\": \"https://:account.api-us1.com/api/:version/contacts/24/contactData\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/:version/contacts/24/contactGoals\",\n                \"contactLists\": \"https://:account.api-us1.com/api/:version/contacts/24/contactLists\",\n                \"contactLogs\": \"https://:account.api-us1.com/api/:version/contacts/24/contactLogs\",\n                \"contactTags\": \"https://:account.api-us1.com/api/:version/contacts/24/contactTags\",\n                \"contactDeals\": \"https://:account.api-us1.com/api/:version/contacts/24/contactDeals\",\n                \"deals\": \"https://:account.api-us1.com/api/:version/contacts/24/deals\",\n                \"fieldValues\": \"https://:account.api-us1.com/api/:version/contacts/24/fieldValues\",\n                \"geoIps\": \"https://:account.api-us1.com/api/:version/contacts/24/geoIps\",\n                \"notes\": \"https://:account.api-us1.com/api/:version/contacts/24/notes\",\n                \"organization\": \"https://:account.api-us1.com/api/:version/contacts/24/organization\",\n                \"plusAppend\": \"https://:account.api-us1.com/api/:version/contacts/24/plusAppend\",\n                \"trackingLogs\": \"https://:account.api-us1.com/api/:version/contacts/24/trackingLogs\",\n                \"scoreValues\": \"https://:account.api-us1.com/api/:version/contacts/24/scoreValues\"\n            },\n            \"id\": \"24\",\n            \"organization\": null\n        }\n    ],\n    \"fieldValue\": {\n        \"contact\": 4,\n        \"field\": 24,\n        \"value\": \"Blue\",\n        \"cdate\": \"2018-10-24T13:32:52-05:00\",\n        \"udate\": \"2018-10-24T13:33:11-05:00\",\n        \"links\": {\n            \"owner\": \"https://:account.api-us1.com/api/:version/fieldValues/15/owner\",\n            \"field\": \"https://:account.api-us1.com/api/:version/fieldValues/15/field\"\n        },\n        \"owner\": 4,\n        \"id\": \"15\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-06T16:56:43-05:00"
                          },
                          "email": {
                            "type": "string",
                            "example": "johndoe@example.com"
                          },
                          "phone": {
                            "type": "string",
                            "example": ""
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "orgid": {
                            "type": "string",
                            "example": "0"
                          },
                          "segmentio_id": {
                            "type": "string",
                            "example": ""
                          },
                          "bounced_hard": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_soft": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_date": {
                            "type": "string",
                            "example": "0000-00-00"
                          },
                          "ip": {
                            "type": "string",
                            "example": "4"
                          },
                          "ua": {
                            "type": "string",
                            "example": ""
                          },
                          "hash": {
                            "type": "string",
                            "example": "867d56644591991f6b50e1cb913f038b"
                          },
                          "socialdata_lastcheck": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "email_local": {
                            "type": "string",
                            "example": ""
                          },
                          "email_domain": {
                            "type": "string",
                            "example": ""
                          },
                          "sentcnt": {
                            "type": "string",
                            "example": "0"
                          },
                          "rating_tstamp": {
                            "type": "string",
                            "example": "0000-00-00"
                          },
                          "gravatar": {
                            "type": "string",
                            "example": "0"
                          },
                          "deleted": {
                            "type": "string",
                            "example": "0"
                          },
                          "anonymized": {
                            "type": "string",
                            "example": "0"
                          },
                          "adate": {
                            "type": "string",
                            "example": "2018-10-24T13:33:06-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2018-10-24T13:33:11-05:00"
                          },
                          "edate": {
                            "type": "string",
                            "example": "2018-10-24T13:33:07-05:00"
                          },
                          "deleted_at": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "created_utc_timestamp": {
                            "type": "string",
                            "example": "2018-09-21 12:04:48"
                          },
                          "updated_utc_timestamp": {
                            "type": "string",
                            "example": "2018-10-24 13:33:11"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "bounceLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/bounceLogs"
                              },
                              "contactAutomations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/contactAutomations"
                              },
                              "contactData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/contactData"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/contactGoals"
                              },
                              "contactLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/contactLists"
                              },
                              "contactLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/contactLogs"
                              },
                              "contactTags": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/contactTags"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/contactDeals"
                              },
                              "deals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/deals"
                              },
                              "fieldValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/fieldValues"
                              },
                              "geoIps": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/geoIps"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/organization"
                              },
                              "plusAppend": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/plusAppend"
                              },
                              "trackingLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/trackingLogs"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/24/scoreValues"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "24"
                          },
                          "organization": {}
                        }
                      }
                    },
                    "fieldValue": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "integer",
                          "example": 4,
                          "default": 0
                        },
                        "field": {
                          "type": "integer",
                          "example": 24,
                          "default": 0
                        },
                        "value": {
                          "type": "string",
                          "example": "Blue"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-10-24T13:32:52-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2018-10-24T13:33:11-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "owner": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/fieldValues/15/owner"
                            },
                            "field": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/fieldValues/15/field"
                            }
                          }
                        },
                        "owner": {
                          "type": "integer",
                          "example": 4,
                          "default": 0
                        },
                        "id": {
                          "type": "string",
                          "example": "15"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lists/{id}": {
      "get": {
        "summary": "Retrieve a list",
        "description": "",
        "operationId": "retrieve-a-list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the lists to retrieve",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"list\": {\n        \"stringid\": \"email-subscription\",\n        \"userid\": \"1\",\n        \"name\": \"Email Subscription\",\n        \"cdate\": \"2018-08-06T16:30:41-05:00\",\n        \"p_use_tracking\": \"1\",\n        \"p_use_analytics_read\": \"0\",\n        \"p_use_analytics_link\": \"0\",\n        \"p_use_twitter\": \"0\",\n        \"p_use_facebook\": \"0\",\n        \"p_embed_image\": \"1\",\n        \"p_use_captcha\": \"1\",\n        \"send_last_broadcast\": \"0\",\n        \"private\": \"0\",\n        \"analytics_domains\": null,\n        \"analytics_source\": \"\",\n        \"analytics_ua\": \"\",\n        \"twitter_token\": \"\",\n        \"twitter_token_secret\": \"\",\n        \"facebook_session\": null,\n        \"carboncopy\": null,\n        \"subscription_notify\": null,\n        \"unsubscription_notify\": null,\n        \"require_name\": \"0\",\n        \"get_unsubscribe_reason\": \"0\",\n        \"to_name\": \"Subscriber\",\n        \"optinoptout\": \"1\",\n        \"sender_name\": \"\",\n        \"sender_addr1\": \"\",\n        \"sender_addr2\": \"\",\n        \"sender_city\": \"\",\n        \"sender_state\": \"\",\n        \"sender_zip\": \"\",\n        \"sender_country\": \"\",\n        \"sender_phone\": \"\",\n        \"sender_url\": \"http://www.activecampaign.com\",\n        \"sender_reminder\": \"You signed up for my mailing list.\",\n        \"fulladdress\": \"\",\n        \"optinmessageid\": \"0\",\n        \"optoutconf\": \"0\",\n        \"deletestamp\": null,\n        \"udate\": null,\n        \"links\": {\n            \"contactGoalLists\": \"https://:account.api-us1.com/api/3/lists/1/contactGoalLists\",\n            \"user\": \"https://:account.api-us1.com/api/3/lists/1/user\",\n            \"addressLists\": \"https://:account.api-us1.com/api/3/lists/1/addressLists\"\n        },\n        \"id\": \"1\",\n        \"user\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "object",
                      "properties": {
                        "stringid": {
                          "type": "string",
                          "example": "email-subscription"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "name": {
                          "type": "string",
                          "example": "Email Subscription"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-08-06T16:30:41-05:00"
                        },
                        "p_use_tracking": {
                          "type": "string",
                          "example": "1"
                        },
                        "p_use_analytics_read": {
                          "type": "string",
                          "example": "0"
                        },
                        "p_use_analytics_link": {
                          "type": "string",
                          "example": "0"
                        },
                        "p_use_twitter": {
                          "type": "string",
                          "example": "0"
                        },
                        "p_use_facebook": {
                          "type": "string",
                          "example": "0"
                        },
                        "p_embed_image": {
                          "type": "string",
                          "example": "1"
                        },
                        "p_use_captcha": {
                          "type": "string",
                          "example": "1"
                        },
                        "send_last_broadcast": {
                          "type": "string",
                          "example": "0"
                        },
                        "private": {
                          "type": "string",
                          "example": "0"
                        },
                        "analytics_domains": {},
                        "analytics_source": {
                          "type": "string",
                          "example": ""
                        },
                        "analytics_ua": {
                          "type": "string",
                          "example": ""
                        },
                        "twitter_token": {
                          "type": "string",
                          "example": ""
                        },
                        "twitter_token_secret": {
                          "type": "string",
                          "example": ""
                        },
                        "facebook_session": {},
                        "carboncopy": {},
                        "subscription_notify": {},
                        "unsubscription_notify": {},
                        "require_name": {
                          "type": "string",
                          "example": "0"
                        },
                        "get_unsubscribe_reason": {
                          "type": "string",
                          "example": "0"
                        },
                        "to_name": {
                          "type": "string",
                          "example": "Subscriber"
                        },
                        "optinoptout": {
                          "type": "string",
                          "example": "1"
                        },
                        "sender_name": {
                          "type": "string",
                          "example": ""
                        },
                        "sender_addr1": {
                          "type": "string",
                          "example": ""
                        },
                        "sender_addr2": {
                          "type": "string",
                          "example": ""
                        },
                        "sender_city": {
                          "type": "string",
                          "example": ""
                        },
                        "sender_state": {
                          "type": "string",
                          "example": ""
                        },
                        "sender_zip": {
                          "type": "string",
                          "example": ""
                        },
                        "sender_country": {
                          "type": "string",
                          "example": ""
                        },
                        "sender_phone": {
                          "type": "string",
                          "example": ""
                        },
                        "sender_url": {
                          "type": "string",
                          "example": "http://www.activecampaign.com"
                        },
                        "sender_reminder": {
                          "type": "string",
                          "example": "You signed up for my mailing list."
                        },
                        "fulladdress": {
                          "type": "string",
                          "example": ""
                        },
                        "optinmessageid": {
                          "type": "string",
                          "example": "0"
                        },
                        "optoutconf": {
                          "type": "string",
                          "example": "0"
                        },
                        "deletestamp": {},
                        "udate": {},
                        "links": {
                          "type": "object",
                          "properties": {
                            "contactGoalLists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/lists/1/contactGoalLists"
                            },
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/lists/1/user"
                            },
                            "addressLists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/lists/1/addressLists"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 403,\n            \"title\": \"Forbidden\",\n            \"detail\": \"You do not have permission to view lists.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 403,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Forbidden"
                          },
                          "detail": {
                            "type": "string",
                            "example": "You do not have permission to view lists."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for _List with id 7\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for _List with id 7"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a list",
        "description": "",
        "operationId": "delete-a-list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the list to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for _List with id 3\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for _List with id 3"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tags": {
      "get": {
        "summary": "List all tags",
        "description": "",
        "operationId": "retrieve-all-tags",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Filter by name of tag(s); \"contains\" operator is assumed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[search][<operator>]",
            "in": "query",
            "description": "Filters tags by tag name according to the operator specified. Operators currently supported: `eq`, `neq`, `lt`, `lte`, `gt`, `gte`, `contains`, `starts_with`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[search]",
            "in": "query",
            "description": "Orders filtered results by weight, ascending order, or descending order. If `weight` is used, exact matches are returned first, followed by matches starting with what was filtered by, followed by the rest of the results.",
            "schema": {
              "type": "string",
              "enum": [
                "weight",
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"tags\": [\n        {\n            \"tagType\": \"contact\",\n            \"tag\": \"one\",\n            \"description\": \"\",\n            \"cdate\": \"2018-08-17T09:43:15-05:00\",\n            \"links\": {\n                \"contactGoalTags\": \"https://:account.api-us1.com/api/:version/tags/1/contactGoalTags\"\n            },\n            \"id\": \"1\"\n        },\n        {\n            \"tagType\": \"contact\",\n            \"tag\": \"two\",\n            \"description\": \"\",\n            \"cdate\": \"2018-08-17T13:41:16-05:00\",\n            \"links\": {\n                \"contactGoalTags\": \"https://:account.api-us1.com/api/:version/tags/2/contactGoalTags\"\n            },\n            \"id\": \"2\"\n        },\n        {\n            \"tagType\": \"contact\",\n            \"tag\": \"three\",\n            \"description\": \"\",\n            \"cdate\": \"2018-08-17T13:41:18-05:00\",\n            \"links\": {\n                \"contactGoalTags\": \"https://:account.api-us1.com/api/:version/tags/3/contactGoalTags\"\n            },\n            \"id\": \"3\"\n        },\n        {\n            \"tagType\": \"template\",\n            \"tag\": \"test1\",\n            \"description\": \"\",\n            \"cdate\": \"2018-08-28T11:54:36-05:00\",\n            \"links\": {\n                \"contactGoalTags\": \"https://:account.api-us1.com/api/:version/tags/4/contactGoalTags\"\n            },\n            \"id\": \"4\"\n        },\n        {\n            \"tagType\": \"template\",\n            \"tag\": \"test2\",\n            \"description\": \"\",\n            \"cdate\": \"2018-08-28T11:54:38-05:00\",\n            \"links\": {\n                \"contactGoalTags\": \"https://:account.api-us1.com/api/:version/tags/5/contactGoalTags\"\n            },\n            \"id\": \"5\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"5\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tagType": {
                            "type": "string",
                            "example": "contact"
                          },
                          "tag": {
                            "type": "string",
                            "example": "one"
                          },
                          "description": {
                            "type": "string",
                            "example": ""
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-17T09:43:15-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "contactGoalTags": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/tags/1/contactGoalTags"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a tag",
        "description": "",
        "operationId": "create-a-new-tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag": {
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "Name of the new tag"
                      },
                      "tagType": {
                        "type": "string",
                        "description": "Tag-type of the new tag. Possible Values: template, contact"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the new tag"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "tag": {
                      "tag": "My Tag",
                      "tagType": "contact",
                      "description": "Description"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"tag\": {\n        \"tag\": \"My Tag\",\n        \"description\": \"Description\",\n        \"tagType\": \"contact\",\n        \"cdate\": \"2018-09-29T19:21:25-05:00\",\n        \"links\": {\n            \"contactGoalTags\": \"https://:account.api-us1.com/api/:version/tags/16/contactGoalTags\"\n        },\n        \"id\": \"16\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "example": "My Tag"
                        },
                        "description": {
                          "type": "string",
                          "example": "Description"
                        },
                        "tagType": {
                          "type": "string",
                          "example": "contact"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-09-29T19:21:25-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "contactGoalTags": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/tags/16/contactGoalTags"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "16"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/configs/{id}": {
      "put": {
        "summary": "Update settings",
        "description": "",
        "operationId": "set-config",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the config to edit",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"config\": {\n        \"keyname\": \"pagination.users_index\",\n        \"section\": \"\",\n        \"item\": \"\",\n        \"userid\": \"1\",\n        \"val\": \"20\",\n        \"cdate\": \"2018-08-08T13:38:38-05:00\",\n        \"udate\": \"2018-09-20T14:07:07-05:00\",\n        \"links\": {\n            \"owner\": \"https://:account.api-us1.com/api/3/configs/6/owner\"\n        },\n        \"id\": \"6\",\n        \"owner\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object",
                      "properties": {
                        "keyname": {
                          "type": "string",
                          "example": "pagination.users_index"
                        },
                        "section": {
                          "type": "string",
                          "example": ""
                        },
                        "item": {
                          "type": "string",
                          "example": ""
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "val": {
                          "type": "string",
                          "example": "20"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-08-08T13:38:38-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2018-09-20T14:07:07-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "owner": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/configs/6/owner"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "6"
                        },
                        "owner": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for ConfigResult with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for ConfigResult with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fieldValues": {
      "post": {
        "summary": "Create a custom field value",
        "description": "",
        "operationId": "create-fieldvalue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fieldValue": {
                    "properties": {
                      "contact": {
                        "type": "string",
                        "description": "ID of the contact whose field value you're updating"
                      },
                      "field": {
                        "type": "string",
                        "description": "ID of the custom field whose value you're updating for the contact"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value for the field that you're updating. For multi-select options this needs to be in the format of ||option1||option2||"
                      }
                    },
                    "required": [
                      "contact",
                      "field",
                      "value"
                    ],
                    "type": "object"
                  },
                  "useDefaults": {
                    "type": "boolean",
                    "description": "If true, this will populate the missing required fields for this contact with default values",
                    "default": false
                  }
                }
              },
              "examples": {
                "text/textarea/hidden value": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 3,
                      "value": "Blue"
                    },
                    "useDefaults": true
                  }
                },
                "dropdown/radio value": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 4,
                      "value": "||option 1||option 2||option 3||"
                    }
                  }
                },
                "date value": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 7,
                      "value": "2018-12-31"
                    }
                  }
                },
                "datetime value ISO format": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 7,
                      "value": "2020-05-19T02:45:00-05:00"
                    }
                  }
                },
                "multiselect with multiple options": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 6,
                      "value": "||Option 1||Option 3||Option 4||"
                    }
                  }
                },
                "multiselect with single option": {
                  "value": {
                    "fieldValue": {
                      "contact": 2,
                      "field": 6,
                      "value": "||Option 2||"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contacts\": [\n        {\n            \"cdate\": \"2018-08-06T16:26:04-05:00\",\n            \"email\": \"ikreimont+2@activecampaign.com\",\n            \"phone\": \"\",\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": null,\n            \"ip\": \"0\",\n            \"ua\": null,\n            \"hash\": \"14d8c4418ae944c68e9dde4a975854cc\",\n            \"socialdata_lastcheck\": null,\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": null,\n            \"gravatar\": \"0\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": null,\n            \"udate\": \"2018-10-01T17:18:40-05:00\",\n            \"edate\": null,\n            \"deleted_at\": null,\n            \"created_utc_timestamp\": \"2018-09-21 12:04:40\",\n            \"updated_utc_timestamp\": \"2018-10-01 17:18:40\",\n            \"links\": {\n                \"bounceLogs\": \"https://:account.api-us1.com/api/:version/contacts/2/bounceLogs\",\n                \"contactAutomations\": \"https://:account.api-us1.com/api/:version/contacts/2/contactAutomations\",\n                \"contactData\": \"https://:account.api-us1.com/api/:version/contacts/2/contactData\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/:version/contacts/2/contactGoals\",\n                \"contactLists\": \"https://:account.api-us1.com/api/:version/contacts/2/contactLists\",\n                \"contactLogs\": \"https://:account.api-us1.com/api/:version/contacts/2/contactLogs\",\n                \"contactTags\": \"https://:account.api-us1.com/api/:version/contacts/2/contactTags\",\n                \"contactDeals\": \"https://:account.api-us1.com/api/:version/contacts/2/contactDeals\",\n                \"deals\": \"https://:account.api-us1.com/api/:version/contacts/2/deals\",\n                \"fieldValues\": \"https://:account.api-us1.com/api/:version/contacts/2/fieldValues\",\n                \"geoIps\": \"https://:account.api-us1.com/api/:version/contacts/2/geoIps\",\n                \"notes\": \"https://:account.api-us1.com/api/:version/contacts/2/notes\",\n                \"organization\": \"https://:account.api-us1.com/api/:version/contacts/2/organization\",\n                \"plusAppend\": \"https://:account.api-us1.com/api/:version/contacts/2/plusAppend\",\n                \"trackingLogs\": \"https://:account.api-us1.com/api/:version/contacts/2/trackingLogs\",\n                \"scoreValues\": \"https://:account.api-us1.com/api/:version/contacts/2/scoreValues\"\n            },\n            \"id\": \"2\",\n            \"organization\": null\n        }\n    ],\n    \"fieldValue\": {\n        \"contact\": 2,\n        \"field\": 3,\n        \"value\": \"Blue\",\n        \"cdate\": \"2018-10-01T17:18:40-05:00\",\n        \"udate\": \"2018-10-01T17:18:40-05:00\",\n        \"links\": {\n            \"owner\": \"https://:account.api-us1.com/api/:version/fieldValues/15/owner\",\n            \"field\": \"https://:account.api-us1.com/api/:version/fieldValues/15/field\"\n        },\n        \"owner\": 2,\n        \"id\": \"15\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-06T16:26:04-05:00"
                          },
                          "email": {
                            "type": "string",
                            "example": "ikreimont+2@activecampaign.com"
                          },
                          "phone": {
                            "type": "string",
                            "example": ""
                          },
                          "firstName": {
                            "type": "string",
                            "example": ""
                          },
                          "lastName": {
                            "type": "string",
                            "example": ""
                          },
                          "orgid": {
                            "type": "string",
                            "example": "0"
                          },
                          "segmentio_id": {
                            "type": "string",
                            "example": ""
                          },
                          "bounced_hard": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_soft": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_date": {},
                          "ip": {
                            "type": "string",
                            "example": "0"
                          },
                          "ua": {},
                          "hash": {
                            "type": "string",
                            "example": "14d8c4418ae944c68e9dde4a975854cc"
                          },
                          "socialdata_lastcheck": {},
                          "email_local": {
                            "type": "string",
                            "example": ""
                          },
                          "email_domain": {
                            "type": "string",
                            "example": ""
                          },
                          "sentcnt": {
                            "type": "string",
                            "example": "0"
                          },
                          "rating_tstamp": {},
                          "gravatar": {
                            "type": "string",
                            "example": "0"
                          },
                          "deleted": {
                            "type": "string",
                            "example": "0"
                          },
                          "anonymized": {
                            "type": "string",
                            "example": "0"
                          },
                          "adate": {},
                          "udate": {
                            "type": "string",
                            "example": "2018-10-01T17:18:40-05:00"
                          },
                          "edate": {},
                          "deleted_at": {},
                          "created_utc_timestamp": {
                            "type": "string",
                            "example": "2018-09-21 12:04:40"
                          },
                          "updated_utc_timestamp": {
                            "type": "string",
                            "example": "2018-10-01 17:18:40"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "bounceLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/bounceLogs"
                              },
                              "contactAutomations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactAutomations"
                              },
                              "contactData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactData"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactGoals"
                              },
                              "contactLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactLists"
                              },
                              "contactLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactLogs"
                              },
                              "contactTags": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactTags"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/contactDeals"
                              },
                              "deals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/deals"
                              },
                              "fieldValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/fieldValues"
                              },
                              "geoIps": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/geoIps"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/organization"
                              },
                              "plusAppend": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/plusAppend"
                              },
                              "trackingLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/trackingLogs"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/2/scoreValues"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          },
                          "organization": {}
                        }
                      }
                    },
                    "fieldValue": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "field": {
                          "type": "integer",
                          "example": 3,
                          "default": 0
                        },
                        "value": {
                          "type": "string",
                          "example": "Blue"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-10-01T17:18:40-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2018-10-01T17:18:40-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "owner": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/fieldValues/15/owner"
                            },
                            "field": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/fieldValues/15/field"
                            }
                          }
                        },
                        "owner": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "id": {
                          "type": "string",
                          "example": "15"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Forbidden\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all custom field values",
        "description": "",
        "operationId": "list-all-custom-field-values",
        "parameters": [
          {
            "name": "filters[fieldid]",
            "in": "query",
            "description": "ID of the field the value belongs to.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[val]",
            "in": "query",
            "description": "Value of the custom field for a specific contact",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldValues\": [\n        {\n            \"contact\": \"5\",\n            \"field\": \"1\",\n            \"value\": \"Burger\",\n            \"cdate\": \"2018-09-29T12:03:11-06:00\",\n            \"udate\": \"2018-09-29T12:03:11-06:00\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/1/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/1/field\"\n            },\n            \"id\": \"1\",\n            \"owner\": \"5\"\n        },\n        {\n            \"contact\": \"7\",\n            \"field\": \"2\",\n            \"value\": \"2018-05-10\",\n            \"cdate\": \"2018-04-24T12:04:46-06:00\",\n            \"udate\": \"2018-04-24T12:04:46-06:00\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/2/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/2/field\"\n            },\n            \"id\": \"2\",\n            \"owner\": \"7\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldValues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "5"
                          },
                          "field": {
                            "type": "string",
                            "example": "1"
                          },
                          "value": {
                            "type": "string",
                            "example": "Burger"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-09-29T12:03:11-06:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2018-09-29T12:03:11-06:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/1/owner"
                              },
                              "field": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/1/field"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "owner": {
                            "type": "string",
                            "example": "5"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fields/{id}": {
      "delete": {
        "summary": "Delete a custom field",
        "description": "",
        "operationId": "delete-a-field",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the field option to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Field with id 99\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Field with id 99"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a custom field",
        "description": "",
        "operationId": "retrieve-a-custom-field-contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the field to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldOptions\": [],\n    \"fieldRels\": [\n        {\n            \"field\": \"1\",\n            \"relid\": \"0\",\n            \"dorder\": \"0\",\n            \"cdate\": \"2018-08-17T11:09:43-05:00\",\n            \"links\": [],\n            \"id\": \"1\"\n        }\n    ],\n    \"field\": {\n        \"title\": \"test\",\n        \"descript\": \"\",\n        \"type\": \"text\",\n        \"isrequired\": \"0\",\n        \"perstag\": \"TEST\",\n        \"defval\": \"\",\n        \"show_in_list\": \"0\",\n        \"rows\": \"0\",\n        \"cols\": \"0\",\n        \"visible\": \"1\",\n        \"service\": \"\",\n        \"ordernum\": \"1\",\n        \"cdate\": \"2018-08-17T11:09:43-05:00\",\n        \"udate\": \"2018-08-17T11:09:43-05:00\",\n        \"options\": [],\n        \"relations\": [\n            \"1\"\n        ],\n        \"links\": {\n            \"options\": \"https://:account.api-us1.com/api/3/fields/1/options\",\n            \"relations\": \"https://:account.api-us1.com/api/3/fields/1/relations\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldOptions": {
                      "type": "array"
                    },
                    "fieldRels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "example": "1"
                          },
                          "relid": {
                            "type": "string",
                            "example": "0"
                          },
                          "dorder": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-08-17T11:09:43-05:00"
                          },
                          "links": {
                            "type": "array"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "field": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "test"
                        },
                        "descript": {
                          "type": "string",
                          "example": ""
                        },
                        "type": {
                          "type": "string",
                          "example": "text"
                        },
                        "isrequired": {
                          "type": "string",
                          "example": "0"
                        },
                        "perstag": {
                          "type": "string",
                          "example": "TEST"
                        },
                        "defval": {
                          "type": "string",
                          "example": ""
                        },
                        "show_in_list": {
                          "type": "string",
                          "example": "0"
                        },
                        "rows": {
                          "type": "string",
                          "example": "0"
                        },
                        "cols": {
                          "type": "string",
                          "example": "0"
                        },
                        "visible": {
                          "type": "string",
                          "example": "1"
                        },
                        "service": {
                          "type": "string",
                          "example": ""
                        },
                        "ordernum": {
                          "type": "string",
                          "example": "1"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-08-17T11:09:43-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2018-08-17T11:09:43-05:00"
                        },
                        "options": {
                          "type": "array"
                        },
                        "relations": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "options": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/fields/1/options"
                            },
                            "relations": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/fields/1/relations"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a custom field",
        "description": "",
        "operationId": "update-a-field",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the field to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Possible Values: dropdown, hidden, checkbox, date, datetime, text, textarea, NULL, listbox, radio"
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the field being updated"
                      },
                      "descript": {
                        "type": "string",
                        "description": "Description of field being updated"
                      },
                      "perstag": {
                        "type": "string",
                        "description": "The perstag that represents the field being created"
                      },
                      "defval": {
                        "type": "string",
                        "description": "Default value of the field being created"
                      },
                      "show_in_list": {
                        "type": "boolean",
                        "description": "Show this field in the contact list view (No longer Used)"
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Setting to show/hide field"
                      },
                      "service": {
                        "type": "string",
                        "description": "Possible Vales: nimble, contactually, mindbody, salesforce, highrise, google_spreadsheets, pipedrive, onepage, google_contacts, freshbooks, shopify, zendesk, etsy, NULL, bigcommerce, capsule, bigcommerce_oauth, sugarcrm, zohocrm, batchbook"
                      },
                      "ordernum": {
                        "type": "string",
                        "description": "Order of appearance in ‘My Fields’ tab."
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "field": {
                      "type": "textarea",
                      "title": "Title",
                      "descript": "Field  description",
                      "perstag": "Personalized Tag",
                      "defval": "Defaut Value",
                      "show_in_list": 1,
                      "rows": 2,
                      "cols": 2,
                      "visible": 1,
                      "service": "google",
                      "ordernum": 3
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"field\": {\n        \"title\": \"Title\",\n        \"descript\": \"Field  description\",\n        \"type\": \"textarea\",\n        \"isrequired\": 0,\n        \"perstag\": \"PERSONALIZEDTAG\",\n        \"defval\": \"Defaut Value\",\n        \"show_in_list\": 1,\n        \"rows\": 2,\n        \"cols\": 2,\n        \"visible\": 1,\n        \"service\": \"google\",\n        \"ordernum\": 3,\n        \"cdate\": \"2018-09-25T16:06:08-05:00\",\n        \"udate\": \"2018-09-29T18:23:20-05:00\",\n        \"links\": {\n            \"options\": \"https://:account.api-us1.com/api/:version/fields/3/options\",\n            \"relations\": \"https://:account.api-us1.com/api/:version/fields/3/relations\"\n        },\n        \"id\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Title"
                        },
                        "descript": {
                          "type": "string",
                          "example": "Field  description"
                        },
                        "type": {
                          "type": "string",
                          "example": "textarea"
                        },
                        "isrequired": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "perstag": {
                          "type": "string",
                          "example": "PERSONALIZEDTAG"
                        },
                        "defval": {
                          "type": "string",
                          "example": "Defaut Value"
                        },
                        "show_in_list": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "rows": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "cols": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "visible": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "service": {
                          "type": "string",
                          "example": "google"
                        },
                        "ordernum": {
                          "type": "integer",
                          "example": 3,
                          "default": 0
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-09-25T16:06:08-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2018-09-29T18:23:20-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "options": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/fields/3/options"
                            },
                            "relations": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/fields/3/relations"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Forbidden\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fields": {
      "post": {
        "summary": "Create a custom field",
        "description": "",
        "operationId": "create-a-contact-custom-field",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the field being created"
                      },
                      "type": {
                        "type": "string",
                        "description": "Possible Values: dropdown, hidden, checkbox, date, text, datetime, textarea, NULL, listbox, radio"
                      },
                      "descript": {
                        "type": "string",
                        "description": "Description of field being created"
                      },
                      "perstag": {
                        "type": "string",
                        "description": "The perstag that represents the field being created"
                      },
                      "defval": {
                        "type": "string",
                        "description": "Default value of the field being created"
                      },
                      "show_in_list": {
                        "type": "boolean",
                        "description": "Show this field in the contact list view (Deprecated - no longer used)"
                      },
                      "rows": {
                        "type": "integer",
                        "description": "Num of rows for a textarea (Deprecated - no longer used)",
                        "format": "int32"
                      },
                      "cols": {
                        "type": "integer",
                        "description": "Num of columns for a textarea (Deprecated - no longer used)",
                        "format": "int32"
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Show or hide this field when using the Form Builder"
                      },
                      "service": {
                        "type": "string",
                        "description": "Possible Vales: nimble, contactually, mindbody, salesforce, highrise, google_spreadsheets, pipedrive, onepage, google_contacts, freshbooks, shopify, zendesk, etsy, NULL, bigcommerce, capsule, bigcommerce_oauth, sugarcrm, zohocrm, batchbook"
                      },
                      "ordernum": {
                        "type": "integer",
                        "description": "Order of appearance in ‘My Fields’ tab.",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "title",
                      "type"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "textarea": {
                  "value": {
                    "field": {
                      "type": "textarea",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "defval": "Defaut Value",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                },
                "text": {
                  "value": {
                    "field": {
                      "type": "text",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "defval": "Defaut Value",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                },
                "date": {
                  "value": {
                    "field": {
                      "type": "date",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "defval": "2019-01-01",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                },
                "dropdown": {
                  "value": {
                    "field": {
                      "type": "dropdown",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                },
                "multiselect": {
                  "value": {
                    "field": {
                      "type": "listbox",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                },
                "radio": {
                  "value": {
                    "field": {
                      "type": "radio",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                },
                "checkbox": {
                  "value": {
                    "field": {
                      "type": "checkbox",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                },
                "hidden": {
                  "value": {
                    "field": {
                      "type": "hidden",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "defval": "Defaut Value",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                },
                "datetime": {
                  "value": {
                    "field": {
                      "type": "datetime",
                      "title": "Field Title",
                      "descript": "Field description",
                      "perstag": "Personalized Tag",
                      "defval": "2020-05-19T02:45:00-05:00",
                      "visible": 1,
                      "ordernum": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldOptions\": [],\n    \"fieldRels\": [],\n    \"fields\": [\n        {\n            \"title\": \"Another Test Title\",\n            \"descript\": null,\n            \"type\": \"\",\n            \"isrequired\": \"0\",\n            \"perstag\": \"ANOTHER_TEST_TITLE\",\n            \"defval\": null,\n            \"show_in_list\": \"0\",\n            \"rows\": \"0\",\n            \"cols\": \"0\",\n            \"visible\": \"1\",\n            \"service\": \"\",\n            \"ordernum\": \"2\",\n            \"cdate\": \"2018-11-15T21:43:38-06:00\",\n            \"udate\": \"2018-11-15T21:43:38-06:00\",\n            \"options\": [],\n            \"relations\": [],\n            \"links\": {\n                \"options\": \"https://:account.api-us1.com/api/:version/fields/2/options\",\n                \"relations\": \"https://:account.api-us1.com/api/:version/fields/2/relations\"\n            },\n            \"id\": \"2\"\n        },\n        {\n            \"title\": \"Title\",\n            \"descript\": \"Field  description\",\n            \"type\": \"textarea\",\n            \"isrequired\": \"1\",\n            \"perstag\": \"PERSONALIZEDTAG\",\n            \"defval\": \"Defaut Value\",\n            \"show_in_list\": \"1\",\n            \"rows\": \"2\",\n            \"cols\": \"2\",\n            \"visible\": \"1\",\n            \"service\": \"google\",\n            \"ordernum\": \"3\",\n            \"cdate\": \"2018-11-15T21:42:40-06:00\",\n            \"udate\": \"2018-11-15T21:49:52-06:00\",\n            \"options\": [],\n            \"relations\": [],\n            \"links\": {\n                \"options\": \"https://:account.api-us1.com/api/:version/fields/1/options\",\n                \"relations\": \"https://:account.api-us1.com/api/:version/fields/1/relations\"\n            },\n            \"id\": \"1\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldOptions": {
                      "type": "array"
                    },
                    "fieldRels": {
                      "type": "array"
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Another Test Title"
                          },
                          "descript": {},
                          "type": {
                            "type": "string",
                            "example": ""
                          },
                          "isrequired": {
                            "type": "string",
                            "example": "0"
                          },
                          "perstag": {
                            "type": "string",
                            "example": "ANOTHER_TEST_TITLE"
                          },
                          "defval": {},
                          "show_in_list": {
                            "type": "string",
                            "example": "0"
                          },
                          "rows": {
                            "type": "string",
                            "example": "0"
                          },
                          "cols": {
                            "type": "string",
                            "example": "0"
                          },
                          "visible": {
                            "type": "string",
                            "example": "1"
                          },
                          "service": {
                            "type": "string",
                            "example": ""
                          },
                          "ordernum": {
                            "type": "string",
                            "example": "2"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-11-15T21:43:38-06:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2018-11-15T21:43:38-06:00"
                          },
                          "options": {
                            "type": "array"
                          },
                          "relations": {
                            "type": "array"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/fields/2/options"
                              },
                              "relations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/fields/2/relations"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Forbidden\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"There is already a field with this title\",\n            \"detail\": \"There is already a field named 'Test Title' -- choose another name\",\n            \"code\": \"duplicate\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "The field title was not provided."
                              },
                              "detail": {
                                "type": "string",
                                "example": ""
                              },
                              "code": {
                                "type": "string",
                                "example": "field_missing"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "There is already a field with this personalization tag"
                              },
                              "detail": {
                                "type": "string",
                                "example": "There is already a personalization tag named 'Perstag' -- choose another name"
                              },
                              "code": {
                                "type": "string",
                                "example": "field_invalid"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "There is already a field with this title"
                              },
                              "detail": {
                                "type": "string",
                                "example": "There is already a field named 'Test Title' -- choose another name"
                              },
                              "code": {
                                "type": "string",
                                "example": "duplicate"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all custom fields",
        "description": "",
        "operationId": "retrieve-fields",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of fields returned per request.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "filters[perstag]",
            "in": "query",
            "description": "The custom field's persistant tag to filter by (Ex: CUSTOMER_GROUP)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldOptions\": [],\n    \"fieldRels\": [],\n    \"fields\": [\n        {\n            \"title\": \"Another Test Title\",\n            \"descript\": null,\n            \"type\": \"\",\n            \"isrequired\": \"0\",\n            \"perstag\": \"ANOTHER_TEST_TITLE\",\n            \"defval\": null,\n            \"show_in_list\": \"0\",\n            \"rows\": \"0\",\n            \"cols\": \"0\",\n            \"visible\": \"1\",\n            \"service\": \"\",\n            \"ordernum\": \"2\",\n            \"cdate\": \"2018-11-15T21:43:38-06:00\",\n            \"udate\": \"2018-11-15T21:43:38-06:00\",\n            \"options\": [],\n            \"relations\": [],\n            \"links\": {\n                \"options\": \"https://:account.api-us1.com/api/:version/fields/2/options\",\n                \"relations\": \"https://:account.api-us1.com/api/:version/fields/2/relations\"\n            },\n            \"id\": \"2\"\n        },\n        {\n            \"title\": \"Title\",\n            \"descript\": \"Field  description\",\n            \"type\": \"textarea\",\n            \"isrequired\": \"1\",\n            \"perstag\": \"PERSONALIZEDTAG\",\n            \"defval\": \"Defaut Value\",\n            \"show_in_list\": \"1\",\n            \"rows\": \"2\",\n            \"cols\": \"2\",\n            \"visible\": \"1\",\n            \"service\": \"google\",\n            \"ordernum\": \"3\",\n            \"cdate\": \"2018-11-15T21:42:40-06:00\",\n            \"udate\": \"2018-11-15T21:49:52-06:00\",\n            \"options\": [],\n            \"relations\": [],\n            \"links\": {\n                \"options\": \"https://:account.api-us1.com/api/:version/fields/1/options\",\n                \"relations\": \"https://:account.api-us1.com/api/:version/fields/1/relations\"\n            },\n            \"id\": \"1\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldOptions": {
                      "type": "array"
                    },
                    "fieldRels": {
                      "type": "array"
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Another Test Title"
                          },
                          "descript": {},
                          "type": {
                            "type": "string",
                            "example": ""
                          },
                          "isrequired": {
                            "type": "string",
                            "example": "0"
                          },
                          "perstag": {
                            "type": "string",
                            "example": "ANOTHER_TEST_TITLE"
                          },
                          "defval": {},
                          "show_in_list": {
                            "type": "string",
                            "example": "0"
                          },
                          "rows": {
                            "type": "string",
                            "example": "0"
                          },
                          "cols": {
                            "type": "string",
                            "example": "0"
                          },
                          "visible": {
                            "type": "string",
                            "example": "1"
                          },
                          "service": {
                            "type": "string",
                            "example": ""
                          },
                          "ordernum": {
                            "type": "string",
                            "example": "2"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-11-15T21:43:38-06:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2018-11-15T21:43:38-06:00"
                          },
                          "options": {
                            "type": "array"
                          },
                          "relations": {
                            "type": "array"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/fields/2/options"
                              },
                              "relations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/fields/2/relations"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tags/{id}": {
      "put": {
        "summary": "Update a tag",
        "description": "",
        "operationId": "update-a-tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the tag to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag": {
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "Name of the tag being updated"
                      },
                      "tagType": {
                        "type": "string",
                        "description": "Tag-type of the tag being updated. Possible Values: template, contact"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the tag being updated"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "tag": {
                      "tag": "My Tag",
                      "tagType": "contact",
                      "description": "Description"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"tag\": {\n        \"tagType\": \"contact\",\n        \"tag\": \"My Tag\",\n        \"description\": \"Description\",\n        \"cdate\": \"2018-08-17T13:41:16-05:00\",\n        \"links\": {\n            \"contactGoalTags\": \"https://:account.api-us1.com/api/:version/tags/2/contactGoalTags\"\n        },\n        \"id\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "type": "object",
                      "properties": {
                        "tagType": {
                          "type": "string",
                          "example": "contact"
                        },
                        "tag": {
                          "type": "string",
                          "example": "My Tag"
                        },
                        "description": {
                          "type": "string",
                          "example": "Description"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-08-17T13:41:16-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "contactGoalTags": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/tags/2/contactGoalTags"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a Tag",
        "description": "",
        "operationId": "delete-a-tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the tag to remove",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Tag with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Tag with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a tag",
        "description": "",
        "operationId": "retrieve-a-tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the tag to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"tag\": {\n        \"tagType\": \"contact\",\n        \"tag\": \"My Tag\",\n        \"description\": \"Description\",\n        \"cdate\": \"2018-10-04T14:55:13-05:00\",\n        \"subscriber_count\": \"0\",\n        \"links\": {\n            \"contactGoalTags\": \"https://:account.api-us1.com/api/3/tags/1/contactGoalTags\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "type": "object",
                      "properties": {
                        "tagType": {
                          "type": "string",
                          "example": "contact"
                        },
                        "tag": {
                          "type": "string",
                          "example": "My Tag"
                        },
                        "description": {
                          "type": "string",
                          "example": "Description"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-10-04T14:55:13-05:00"
                        },
                        "subscriber_count": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "contactGoalTags": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/tags/1/contactGoalTags"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Tag with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Tag with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contactLists": {
      "post": {
        "summary": "Update list status for a contact",
        "description": "Subscribe a contact to a list or unsubscribe a contact from a list.",
        "operationId": "update-list-status-for-contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactList": {
                    "properties": {
                      "list": {
                        "type": "string",
                        "description": "ID of the list to subscribe the contact to"
                      },
                      "contact": {
                        "type": "string",
                        "description": "ID of the contact to subscribe to the list"
                      },
                      "status": {
                        "type": "string",
                        "description": "Set to \"1\" to subscribe the contact to the list. Set to \"2\" to unsubscribe the contact from the list. WARNING: If you change a status from unsubscribed to active, you can re-subscribe a contact to a list from which they had manually unsubscribed."
                      },
                      "sourceid": {
                        "type": "integer",
                        "description": "Set to \"4\" when re-subscribing a contact to a list",
                        "default": 0,
                        "format": "int32"
                      }
                    },
                    "required": [
                      "list",
                      "contact",
                      "status"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "contactList": {
                      "list": 2,
                      "contact": 1,
                      "status": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contacts\": [\n        {\n            \"cdate\": \"2017-07-24T12:09:52-05:00\",\n            \"email\": \"johndoe@example.com\",\n            \"phone\": \"\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"orgid\": \"0\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": \"0000-00-00\",\n            \"ip\": \"0\",\n            \"ua\": \"\",\n            \"hash\": \"1234567890\",\n            \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"1\",\n            \"rating_tstamp\": \"0000-00-00\",\n            \"gravatar\": \"0\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": \"2018-10-16T13:52:32-05:00\",\n            \"udate\": \"2018-10-16T13:50:18-05:00\",\n            \"deleted_at\": \"0000-00-00 00:00:00\",\n            \"created_utc_timestamp\": \"2018-10-01 08:40:10\",\n            \"updated_utc_timestamp\": \"2018-10-16 13:50:18\",\n            \"links\": {\n                \"bounceLogs\": \"https://:account.api-us1.com/api/:version/contacts/1/bounceLogs\",\n                \"contactAutomations\": \"https://:account.api-us1.com/api/:version/contacts/1/contactAutomations\",\n                \"contactData\": \"https://:account.api-us1.com/api/:version/contacts/1/contactData\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/:version/contacts/1/contactGoals\",\n                \"contactLists\": \"https://:account.api-us1.com/api/:version/contacts/1/contactLists\",\n                \"contactLogs\": \"https://:account.api-us1.com/api/:version/contacts/1/contactLogs\",\n                \"contactTags\": \"https://:account.api-us1.com/api/:version/contacts/1/contactTags\",\n                \"contactDeals\": \"https://:account.api-us1.com/api/:version/contacts/1/contactDeals\",\n                \"deals\": \"https://staging-tjahn.api-us1.com/api/3/contacts/1/deals\",\n                \"fieldValues\": \"https://:account.api-us1.com/api/:version/contacts/1/fieldValues\",\n                \"geoIps\": \"https://:account.api-us1.com/api/:version/contacts/1/geoIps\",\n                \"notes\": \"https://:account.api-us1.com/api/:version/contacts/1/notes\",\n                \"organization\": \"https://:account.api-us1.com/api/:version/contacts/1/organization\",\n                \"plusAppend\": \"https://:account.api-us1.com/api/:version/contacts/1/plusAppend\",\n                \"trackingLogs\": \"https://:account.api-us1.com/api/:version/contacts/1/trackingLogs\",\n                \"scoreValues\": \"https://:account.api-us1.com/api/:version/contacts/1/scoreValues\"\n            },\n            \"id\": \"1\",\n            \"organization\": null\n        }\n    ],\n    \"contactList\": {\n        \"contact\": \"1\",\n        \"list\": \"2\",\n        \"form\": null,\n        \"seriesid\": \"0\",\n        \"sdate\": \"2018-10-16T13:52:35-05:00\",\n        \"status\": 1,\n        \"responder\": \"1\",\n        \"sync\": \"0\",\n        \"unsubreason\": \"\",\n        \"campaign\": null,\n        \"message\": null,\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"ip4Sub\": \"0\",\n        \"sourceid\": \"3\",\n        \"autosyncLog\": null,\n        \"ip4_last\": \"0\",\n        \"ip4Unsub\": \"0\",\n        \"unsubscribeAutomation\": null,\n        \"links\": {\n            \"automation\": \"https://:account.api-us1.com/api/:version/contactLists/2/automation\",\n            \"list\": \"https://:account.api-us1.com/api/:version/contactLists/2/list\",\n            \"contact\": \"https://:account.api-us1.com/api/:version/contactLists/2/contact\",\n            \"form\": \"https://:account.api-us1.com/api/:version/contactLists/2/form\",\n            \"autosyncLog\": \"https://:account.api-us1.com/api/:version/contactLists/2/autosyncLog\",\n            \"campaign\": \"https://:account.api-us1.com/api/:version/contactLists/2/campaign\",\n            \"unsubscribeAutomation\": \"https://:account.api-us1.com/api/:version/contactLists/2/unsubscribeAutomation\",\n            \"message\": \"https://:account.api-us1.com/api/:version/contactLists/2/message\"\n        },\n        \"id\": \"2\",\n        \"automation\": null\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {
                            "type": "string",
                            "example": "2017-07-24T12:09:52-05:00"
                          },
                          "email": {
                            "type": "string",
                            "example": "johndoe@example.com"
                          },
                          "phone": {
                            "type": "string",
                            "example": ""
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "orgid": {
                            "type": "string",
                            "example": "0"
                          },
                          "segmentio_id": {
                            "type": "string",
                            "example": ""
                          },
                          "bounced_hard": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_soft": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_date": {
                            "type": "string",
                            "example": "0000-00-00"
                          },
                          "ip": {
                            "type": "string",
                            "example": "0"
                          },
                          "ua": {
                            "type": "string",
                            "example": ""
                          },
                          "hash": {
                            "type": "string",
                            "example": "1234567890"
                          },
                          "socialdata_lastcheck": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "email_local": {
                            "type": "string",
                            "example": ""
                          },
                          "email_domain": {
                            "type": "string",
                            "example": ""
                          },
                          "sentcnt": {
                            "type": "string",
                            "example": "1"
                          },
                          "rating_tstamp": {
                            "type": "string",
                            "example": "0000-00-00"
                          },
                          "gravatar": {
                            "type": "string",
                            "example": "0"
                          },
                          "deleted": {
                            "type": "string",
                            "example": "0"
                          },
                          "anonymized": {
                            "type": "string",
                            "example": "0"
                          },
                          "adate": {
                            "type": "string",
                            "example": "2018-10-16T13:52:32-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2018-10-16T13:50:18-05:00"
                          },
                          "deleted_at": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "created_utc_timestamp": {
                            "type": "string",
                            "example": "2018-10-01 08:40:10"
                          },
                          "updated_utc_timestamp": {
                            "type": "string",
                            "example": "2018-10-16 13:50:18"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "bounceLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/bounceLogs"
                              },
                              "contactAutomations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/contactAutomations"
                              },
                              "contactData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/contactData"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/contactGoals"
                              },
                              "contactLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/contactLists"
                              },
                              "contactLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/contactLogs"
                              },
                              "contactTags": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/contactTags"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/contactDeals"
                              },
                              "deals": {
                                "type": "string",
                                "example": "https://staging-tjahn.api-us1.com/api/3/contacts/1/deals"
                              },
                              "fieldValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/fieldValues"
                              },
                              "geoIps": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/geoIps"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/organization"
                              },
                              "plusAppend": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/plusAppend"
                              },
                              "trackingLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/trackingLogs"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/contacts/1/scoreValues"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "organization": {}
                        }
                      }
                    },
                    "contactList": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "string",
                          "example": "1"
                        },
                        "list": {
                          "type": "string",
                          "example": "2"
                        },
                        "form": {},
                        "seriesid": {
                          "type": "string",
                          "example": "0"
                        },
                        "sdate": {
                          "type": "string",
                          "example": "2018-10-16T13:52:35-05:00"
                        },
                        "status": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "responder": {
                          "type": "string",
                          "example": "1"
                        },
                        "sync": {
                          "type": "string",
                          "example": "0"
                        },
                        "unsubreason": {
                          "type": "string",
                          "example": ""
                        },
                        "campaign": {},
                        "message": {},
                        "first_name": {
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "ip4Sub": {
                          "type": "string",
                          "example": "0"
                        },
                        "sourceid": {
                          "type": "string",
                          "example": "3"
                        },
                        "autosyncLog": {},
                        "ip4_last": {
                          "type": "string",
                          "example": "0"
                        },
                        "ip4Unsub": {
                          "type": "string",
                          "example": "0"
                        },
                        "unsubscribeAutomation": {},
                        "links": {
                          "type": "object",
                          "properties": {
                            "automation": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactLists/2/automation"
                            },
                            "list": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactLists/2/list"
                            },
                            "contact": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactLists/2/contact"
                            },
                            "form": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactLists/2/form"
                            },
                            "autosyncLog": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactLists/2/autosyncLog"
                            },
                            "campaign": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactLists/2/campaign"
                            },
                            "unsubscribeAutomation": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactLists/2/unsubscribeAutomation"
                            },
                            "message": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/contactLists/2/message"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "automation": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealCustomFieldData/{id}": {
      "get": {
        "summary": "Retrieve a custom field value",
        "description": "",
        "operationId": "retrieve-a-custom-deal-field-value",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the dealCustomFieldData to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealCustomFieldDatum\": {\n        \"id\": \"1\",\n        \"dealCustomFieldMetumId\": 5,\n        \"dealId\": 2,\n        \"customFieldId\": 5,\n        \"createdTimestamp\": \"2018-10-29 20:40:38\",\n        \"updatedTimestamp\": \"2018-11-06 02:21:36\",\n        \"fieldValue\": \"New title\",\n        \"links\": {\n            \"deal\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/1/deal\",\n            \"dealCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/1/dealCustomFieldMetum\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealCustomFieldDatum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "dealCustomFieldMetumId": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "dealId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "customFieldId": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-29 20:40:38"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-11-06 02:21:36"
                        },
                        "fieldValue": {
                          "type": "string",
                          "example": "New title"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "deal": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/dealCustomFieldData/1/deal"
                            },
                            "dealCustomFieldMetum": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/dealCustomFieldData/1/dealCustomFieldMetum"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a custom field value",
        "description": "",
        "operationId": "delete-a-custom-deal-field-data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the dealCustomFieldData to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"DealCustomFieldData deleted.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "DealCustomFieldData deleted."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a custom field value",
        "description": "",
        "operationId": "update-a-custom-deal-field-value",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the custom fields value to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealCustomFieldDatum": {
                    "properties": {
                      "fieldValue": {
                        "type": "string",
                        "description": "Values for text"
                      },
                      "fieldCurrency": {
                        "type": "string",
                        "description": "Currency code for the `currency` value",
                        "default": "Default Currency for Field"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "text/textarea/hidden": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "fieldValue": "New title"
                    }
                  }
                },
                "dropdown/radio": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "fieldValue": "option 1"
                    }
                  }
                },
                "multiselect/checkbox (multiple)": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "fieldValue": [
                        "option 1",
                        "option 3",
                        "option 4"
                      ]
                    }
                  }
                },
                "currency": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "fieldValue": 9999,
                      "fieldCurrency": "cad"
                    }
                  }
                },
                "number": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "fieldValue": "100.99"
                    }
                  }
                },
                "date": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "fieldValue": "2018-12-31 00:00:00"
                    }
                  }
                },
                "multiselect/checkbox (single)": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "fieldValue": [
                        "option 1"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealCustomFieldDatum\": {\n        \"id\": \"1\",\n        \"dealCustomFieldMetumId\": 5,\n        \"dealId\": 2,\n        \"customFieldId\": 5,\n        \"createdTimestamp\": \"2018-10-29 20:40:38\",\n        \"updatedTimestamp\": \"2018-11-06 02:21:36\",\n        \"fieldValue\": \"New title\",\n        \"links\": {\n            \"deal\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/1/deal\",\n            \"dealCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/1/dealCustomFieldMetum\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealCustomFieldDatum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "dealCustomFieldMetumId": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "dealId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "customFieldId": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-29 20:40:38"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-11-06 02:21:36"
                        },
                        "fieldValue": {
                          "type": "string",
                          "example": "New title"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "deal": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/dealCustomFieldData/1/deal"
                            },
                            "dealCustomFieldMetum": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/dealCustomFieldData/1/dealCustomFieldMetum"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"detail\": \"The custom field value could not be saved to the custom field of type `number`.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "detail": {
                            "type": "string",
                            "example": "The custom field value could not be saved to the custom field of type `number`."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealCustomFieldMeta": {
      "post": {
        "summary": "Create a custom field meta",
        "description": "",
        "operationId": "create-custom-deal-field-meta",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealCustomFieldMetum": {
                    "properties": {
                      "fieldLabel": {
                        "type": "string",
                        "description": "Name of the field"
                      },
                      "fieldType": {
                        "type": "string",
                        "description": "Type of field. Possible values are: `text`, `textarea`, `date`, `datetime`, `dropdown`, `multiselect`, `radio`, `checkbox`, `hidden`, `currency`, or `number`."
                      },
                      "fieldOptions": {
                        "type": "array",
                        "description": "Options for the field. Only necessary if `field_type` is `dropdown`, `multiselect`, `radio`, or `checkbox`.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fieldDefault": {
                        "type": "string",
                        "description": "Default value of the field"
                      },
                      "fieldDefaultCurrency": {
                        "type": "string",
                        "description": "The 3-letter currency code of the default currency for the field. Only necessary if `field_type` is `currency`."
                      },
                      "isFormVisible": {
                        "type": "boolean",
                        "description": "Whether or not the field is visible on forms"
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "Order for displaying the field on Manage Fields page and deal profiles",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "fieldLabel",
                      "fieldType"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "text": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample text field2",
                      "fieldType": "text",
                      "fieldDefault": "Default Text",
                      "isFormVisible": 1,
                      "displayOrder": 1
                    }
                  }
                },
                "textarea": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample textarea field",
                      "fieldType": "textarea",
                      "fieldDefault": "Default Text in Text Area",
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 2
                    }
                  }
                },
                "date": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample date field",
                      "fieldType": "date",
                      "fieldDefault": "2018-12-31 00:00:00",
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 3
                    }
                  }
                },
                "dropdown": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample dropdown field",
                      "fieldType": "dropdown",
                      "fieldDefault": "option 2",
                      "fieldOptions": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 4
                    }
                  }
                },
                "multiselect": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample multiselect field",
                      "fieldType": "multiselect",
                      "fieldDefault": [
                        "option 2",
                        "option 3"
                      ],
                      "fieldOptions": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 5
                    }
                  }
                },
                "radio": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample radio field",
                      "fieldType": "radio",
                      "fieldDefault": "option 2",
                      "fieldOptions": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 6
                    }
                  }
                },
                "checkbox": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample checkbox field",
                      "fieldType": "checkbox",
                      "fieldDefault": [
                        "option 2",
                        "option 3"
                      ],
                      "fieldOptions": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 7
                    }
                  }
                },
                "hidden": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample hidden field",
                      "fieldType": "hidden",
                      "fieldDefault": "Default Text in Hidden Field",
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 8
                    }
                  }
                },
                "number": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample number field",
                      "fieldType": "number",
                      "fieldDefault": "100.99",
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 9
                    }
                  }
                },
                "currency": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample money field",
                      "fieldType": "currency",
                      "fieldDefault": "10099",
                      "fieldDefaultCurrency": "aud",
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 10
                    }
                  }
                },
                "datetime (ISO)": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "sample datetime field",
                      "fieldType": "datetime",
                      "fieldDefault": "2020-05-16T03:15:00-05:00",
                      "isFormVisible": 1,
                      "isRequired": 1,
                      "displayOrder": 3
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealCustomFieldMetum\": {\n        \"id\": \"1\",\n        \"fieldLabel\": \"title\",\n        \"fieldType\": \"text\",\n        \"fieldOptions\": null,\n        \"fieldDefault\": \"Default Text\",\n        \"isFormVisible\": 1,\n        \"isRequired\": 1,\n        \"displayOrder\": 1,\n        \"createdTimestamp\": \"2018-10-22 19:57:37\",\n        \"updatedTimestamp\": \"2018-10-22 19:57:37\",\n        \"links\": {\n            \"dealCustomFieldData\": \"https://:account.api-us1.com/api/:version/3/dealCustomFieldMeta/1/dealCustomFieldData\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealCustomFieldMetum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "fieldLabel": {
                          "type": "string",
                          "example": "title"
                        },
                        "fieldType": {
                          "type": "string",
                          "example": "text"
                        },
                        "fieldOptions": {},
                        "fieldDefault": {
                          "type": "string",
                          "example": "Default Text"
                        },
                        "isFormVisible": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "isRequired": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "displayOrder": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 19:57:37"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 19:57:37"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "dealCustomFieldData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/3/dealCustomFieldMeta/1/dealCustomFieldData"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"errors\": [\n  \t\"title\": \"The field type field is required.\",\n    \"detail\": \"\",\n    \"code\": 422\n  ]\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all custom fields",
        "description": "",
        "operationId": "retrieve-all-custom-deal-field-meta",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of fields returned per request.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealCustomFieldMeta\": [\n        {\n            \"id\": \"1\",\n            \"fieldLabel\": \"Text Example\",\n            \"fieldType\": \"text\",\n            \"fieldOptions\": null,\n            \"fieldDefault\": 1,\n            \"fieldDefaultCurrency\": null,\n            \"isFormVisible\": 0,\n            \"isRequired\": 0,\n            \"displayOrder\": 1,\n            \"personalization\": \"\",\n            \"knownFieldId\": null,\n            \"hideFieldFlag\": 0,\n            \"createdTimestamp\": \"2019-04-23 15:34:00\",\n            \"updatedTimestamp\": \"2019-05-03 15:16:51\",\n            \"links\": {\n                \"dealCustomFieldData\": \"https://:account.api-us1.com/api/:version/dealCustomFieldMeta/1/dealCustomFieldData\"\n            }\n        },\n        {\n            \"id\": \"2\",\n            \"fieldLabel\": \"Multiple Choice Example\",\n            \"fieldType\": \"multiselect\",\n            \"fieldOptions\": [\n            \t\"Option 1\",\n            \t\"Option 2\",\n            \t\"Option 3\"\n            ],\n            \"fieldDefault\": 1,\n            \"fieldDefaultCurrency\": null,\n            \"isFormVisible\": 0,\n            \"isRequired\": 0,\n            \"displayOrder\": 2,\n            \"personalization\": \"\",\n            \"knownFieldId\": null,\n            \"hideFieldFlag\": 0,\n            \"createdTimestamp\": \"2019-04-23 15:34:00\",\n            \"updatedTimestamp\": \"2019-05-03 15:16:51\",\n            \"links\": {\n                \"dealCustomFieldData\": \"https://:account.api-us1.com/api/:version/dealCustomFieldMeta/1/dealCustomFieldData\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealCustomFieldMeta": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "fieldLabel": {
                            "type": "string",
                            "example": "Text Example"
                          },
                          "fieldType": {
                            "type": "string",
                            "example": "text"
                          },
                          "fieldOptions": {},
                          "fieldDefault": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "fieldDefaultCurrency": {},
                          "isFormVisible": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "isRequired": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "displayOrder": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "personalization": {
                            "type": "string",
                            "example": ""
                          },
                          "knownFieldId": {},
                          "hideFieldFlag": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2019-04-23 15:34:00"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2019-05-03 15:16:51"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealCustomFieldData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/dealCustomFieldMeta/1/dealCustomFieldData"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealCustomFieldMeta/{id}": {
      "delete": {
        "summary": "Delete a custom field",
        "description": "",
        "operationId": "delete-a-custom-deal-field-meta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the field to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"DealCustomFieldMeta deleted.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "DealCustomFieldMeta deleted."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a custom field",
        "description": "",
        "operationId": "retrieve-a-custom-deal-field-meta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the field to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealCustomFieldMetum\": {\n        \"id\": \"1\",\n        \"fieldLabel\": \"New Title\",\n        \"fieldType\": \"text\",\n        \"fieldOptions\": null,\n        \"fieldDefault\": \"Default Text\",\n        \"isFormVisible\": 1,\n        \"isRequired\": 1,\n        \"displayOrder\": 1,\n        \"createdTimestamp\": \"2018-10-22 19:57:37\",\n        \"updatedTimestamp\": \"2018-10-22 20:04:21\",\n        \"links\": {\n            \"dealCustomFieldData\": \"https://:account.api-us1.com/api/:version/dealCustomFieldMeta/1/dealCustomFieldData\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealCustomFieldMetum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "fieldLabel": {
                          "type": "string",
                          "example": "New Title"
                        },
                        "fieldType": {
                          "type": "string",
                          "example": "text"
                        },
                        "fieldOptions": {},
                        "fieldDefault": {
                          "type": "string",
                          "example": "Default Text"
                        },
                        "isFormVisible": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "isRequired": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "displayOrder": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 19:57:37"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 20:04:21"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "dealCustomFieldData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/dealCustomFieldMeta/1/dealCustomFieldData"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a custom field",
        "description": "",
        "operationId": "update-a-custom-deal-field-meta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the custom field to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealCustomFieldMetum": {
                    "properties": {
                      "fieldLabel": {
                        "type": "string",
                        "description": "Name of the field"
                      },
                      "fieldOptions": {
                        "type": "array",
                        "description": "Options for the field. Only necessary if field_type is dropdown, multiselect, radio, or checkbox.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fieldDefault": {
                        "type": "string",
                        "description": "Default value of the field"
                      },
                      "isFormVisible": {
                        "type": "boolean",
                        "description": "Whether or not the field is visible on forms"
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "Order for displaying the field on Manage Fields page and deal profiles",
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "dealCustomFieldMetum": {
                      "fieldLabel": "New Title",
                      "fieldDefault": "Default Text",
                      "isFormVisible": 1,
                      "displayOrder": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealCustomFieldMetum\": {\n        \"id\": \"1\",\n        \"fieldLabel\": \"New Title\",\n        \"fieldType\": \"text\",\n        \"fieldOptions\": null,\n        \"fieldDefault\": \"Default Text\",\n        \"isFormVisible\": 1,\n        \"isRequired\": 0,\n        \"displayOrder\": 1,\n        \"createdTimestamp\": \"2018-10-22 19:57:37\",\n        \"updatedTimestamp\": \"2018-10-22 20:04:21\",\n        \"links\": {\n            \"dealCustomFieldData\": \"https://:account.api-us1.com/api/:version/dealCustomFieldMeta/1/dealCustomFieldData\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealCustomFieldMetum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "fieldLabel": {
                          "type": "string",
                          "example": "New Title"
                        },
                        "fieldType": {
                          "type": "string",
                          "example": "text"
                        },
                        "fieldOptions": {},
                        "fieldDefault": {
                          "type": "string",
                          "example": "Default Text"
                        },
                        "isFormVisible": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "isRequired": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "displayOrder": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 19:57:37"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 20:04:21"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "dealCustomFieldData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/dealCustomFieldMeta/1/dealCustomFieldData"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealCustomFieldData": {
      "post": {
        "summary": "Create a custom field value",
        "description": "",
        "operationId": "create-custom-deal-field-value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealCustomFieldDatum": {
                    "properties": {
                      "dealId": {
                        "type": "integer",
                        "description": "The ID of the deal this field value relates to",
                        "format": "int32"
                      },
                      "customFieldId": {
                        "type": "integer",
                        "description": "The ID of the custom field metum this field value relates to",
                        "format": "int32"
                      },
                      "fieldValue": {
                        "type": "string",
                        "description": "Values for the field. (For `currency` field only, this needs to be in cents: eg, 10050 = 100.5)"
                      },
                      "fieldCurrency": {
                        "type": "string",
                        "description": "Currency code for the money value",
                        "default": "Default Currency for Field"
                      }
                    },
                    "required": [
                      "dealId",
                      "customFieldId",
                      "fieldValue"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "text/textarea/hidden": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "dealId": "2",
                      "customFieldId": "1",
                      "fieldValue": "test title"
                    }
                  }
                },
                "dropdown/radio": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "dealId": "2",
                      "customFieldId": "2",
                      "fieldValue": "||option 1||option 2||option 3||"
                    }
                  }
                },
                "multiselect/checkbox (multiple)": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "dealId": "2",
                      "customFieldId": "3",
                      "fieldValue": [
                        "option 1",
                        "option 3",
                        "option 4"
                      ]
                    }
                  }
                },
                "currency": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "dealId": "1",
                      "customFieldId": "4",
                      "fieldValue": 9999,
                      "fieldCurrency": "cad"
                    }
                  }
                },
                "number": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "dealId": "1",
                      "customFieldId": "5",
                      "fieldValue": "100.99"
                    }
                  }
                },
                "date": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "dealId": "1",
                      "customFieldId": "6",
                      "fieldValue": "2018-12-31"
                    }
                  }
                },
                "datetime": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "dealId": "1",
                      "customFieldId": "6",
                      "fieldValue": "2020-05-19T02:45:00-05:00"
                    }
                  }
                },
                "multiselect/checkbox (single)": {
                  "value": {
                    "dealCustomFieldDatum": {
                      "dealId": "2",
                      "customFieldId": "3",
                      "fieldValue": [
                        "option 1"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealCustomFieldDatum\": {\n        \"id\": \"5\",\n        \"dealCustomFieldMetumId\": 1,\n        \"dealId\": 2,\n        \"customFieldId\": 1,\n        \"createdTimestamp\": \"2018-11-06 02:27:05\",\n        \"updatedTimestamp\": \"2018-11-06 02:27:05\",\n        \"fieldValue\": \"test title\",\n        \"links\": {\n            \"deal\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/5/deal\",\n            \"dealCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/5/dealCustomFieldMetum\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealCustomFieldDatum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "5"
                        },
                        "dealCustomFieldMetumId": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "dealId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "customFieldId": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-11-06 02:27:05"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-11-06 02:27:05"
                        },
                        "fieldValue": {
                          "type": "string",
                          "example": "test title"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "deal": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/dealCustomFieldData/5/deal"
                            },
                            "dealCustomFieldMetum": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/dealCustomFieldData/5/dealCustomFieldMetum"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"detail\": \"The custom field value `abc` could not be saved to the custom field of type `date`.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "example": "422"
                              },
                              "title": {
                                "type": "string",
                                "example": "The given data was invalid."
                              },
                              "detail": {
                                "type": "string",
                                "example": "The deal id field is required."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "example": "A related deal was not found."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "example": "A custom field value must be provided."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "example": "The custom field value `abc` could not be saved to the custom field of type `date`."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all custom field values",
        "description": "",
        "operationId": "list-all-custom-fielddata-field-values",
        "parameters": [
          {
            "name": "filters[dealId]",
            "in": "query",
            "description": "Filter results by a specific deal (note that Id uses a capital I)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealCustomFieldData\": [\n        {\n            \"id\": \"3\",\n            \"dealCustomFieldMetumId\": 1,\n            \"dealId\": 1,\n            \"customFieldId\": 1,\n            \"createdTimestamp\": \"2018-11-06 02:26:07\",\n            \"updatedTimestamp\": \"2018-11-06 02:26:07\",\n            \"fieldValue\": \"test title\",\n            \"links\": {\n                \"deal\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/3/deal\",\n                \"dealCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/3/dealCustomFieldMetum\"\n            }\n        },\n        {\n            \"id\": \"4\",\n            \"dealCustomFieldMetumId\": 1,\n            \"dealId\": 3,\n            \"customFieldId\": 1,\n            \"createdTimestamp\": \"2018-11-06 02:26:51\",\n            \"updatedTimestamp\": \"2018-11-06 02:26:51\",\n            \"fieldValue\": \"test title\",\n            \"links\": {\n                \"deal\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/4/deal\",\n                \"dealCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/4/dealCustomFieldMetum\"\n            }\n        },\n        {\n            \"id\": \"5\",\n            \"dealCustomFieldMetumId\": 1,\n            \"dealId\": 2,\n            \"customFieldId\": 1,\n            \"createdTimestamp\": \"2018-11-06 02:27:05\",\n            \"updatedTimestamp\": \"2018-11-06 02:27:05\",\n            \"fieldValue\": \"test title\",\n            \"links\": {\n                \"deal\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/5/deal\",\n                \"dealCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/5/dealCustomFieldMetum\"\n            }\n        },\n        {\n            \"id\": \"1\",\n            \"dealCustomFieldMetumId\": 5,\n            \"dealId\": 2,\n            \"customFieldId\": 5,\n            \"createdTimestamp\": \"2018-10-29 20:40:38\",\n            \"updatedTimestamp\": \"2018-11-06 02:21:36\",\n            \"fieldValue\": \"New title\",\n            \"links\": {\n                \"deal\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/1/deal\",\n                \"dealCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/dealCustomFieldData/1/dealCustomFieldMetum\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealCustomFieldData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "3"
                          },
                          "dealCustomFieldMetumId": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "dealId": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "customFieldId": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2018-11-06 02:26:07"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2018-11-06 02:26:07"
                          },
                          "fieldValue": {
                            "type": "string",
                            "example": "test title"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "deal": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/dealCustomFieldData/3/deal"
                              },
                              "dealCustomFieldMetum": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/dealCustomFieldData/3/dealCustomFieldMetum"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/savedResponses": {
      "get": {
        "summary": "List all saved responses",
        "description": "",
        "operationId": "list-all-saved-responses",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"savedResponses\": [\n        {\n            \"title\": \"Response title\",\n            \"subject\": \"Response subject\",\n            \"body\": \"Response body\",\n            \"ldate\": null,\n            \"last_sent_user_id\": null,\n            \"cdate\": \"2018-11-16T02:50:54-06:00\",\n            \"mdate\": null,\n            \"links\": {\n                \"user\": \"https://:account.api-us1.com/api/:version/savedResponses/1/user\",\n                \"savedResponseCategorySavedResponse\": \"https://:account.api-us1.com/api/:version/savedResponses/1/savedResponseCategorySavedResponse\"\n            },\n            \"id\": \"1\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "savedResponses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Response title"
                          },
                          "subject": {
                            "type": "string",
                            "example": "Response subject"
                          },
                          "body": {
                            "type": "string",
                            "example": "Response body"
                          },
                          "ldate": {},
                          "last_sent_user_id": {},
                          "cdate": {
                            "type": "string",
                            "example": "2018-11-16T02:50:54-06:00"
                          },
                          "mdate": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/savedResponses/1/user"
                              },
                              "savedResponseCategorySavedResponse": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/savedResponses/1/savedResponseCategorySavedResponse"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a saved response",
        "description": "",
        "operationId": "saved-responses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "savedResponse": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the saved response being created"
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject of the saved response being created"
                      },
                      "body": {
                        "type": "string",
                        "description": "Body of the saved response being created"
                      }
                    },
                    "required": [
                      "title",
                      "subject",
                      "body"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "savedResponse": {
                      "title": "Response Title",
                      "subject": "Response Subject",
                      "body": "Response Body"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"savedResponse\": {\n        \"title\": \"Response title\",\n        \"subject\": \"Response subject\",\n        \"body\": \"Response body\",\n        \"cdate\": \"2018-11-16T02:50:54-06:00\",\n        \"links\": {\n            \"user\": \"https://:account.api-us1.com/api/:version/savedResponses/1/user\",\n            \"savedResponseCategorySavedResponse\": \"https://:account.api-us1.com/api/:version/savedResponses/1/savedResponseCategorySavedResponse\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "savedResponse": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Response title"
                        },
                        "subject": {
                          "type": "string",
                          "example": "Response subject"
                        },
                        "body": {
                          "type": "string",
                          "example": "Response body"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-11-16T02:50:54-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/savedResponses/1/user"
                            },
                            "savedResponseCategorySavedResponse": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/savedResponses/1/savedResponseCategorySavedResponse"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"This field is required.\",\n            \"detail\": \"\",\n            \"code\": \"field_missing\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/title\"\n            }\n        },\n        {\n            \"title\": \"Either a subject or a body needs to be provided.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/subject\"\n            }\n        },\n        {\n            \"title\": \"Either a subject or a body needs to be provided.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/body\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "This field is required."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_missing"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/title"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/calendars": {
      "get": {
        "summary": "List all calendar feeds",
        "description": "",
        "operationId": "list-all-calendar-feeds",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"calendars\": [\n        {\n            \"userid\": \"1\",\n            \"title\": \"Calendar Title\",\n            \"type\": \"All\",\n            \"token\": \"4d9af6b9d5056ef1ca4a31c12c0e105c\",\n            \"notification\": \"0\",\n            \"cdate\": \"2018-11-15T22:36:05-06:00\",\n            \"mdate\": \"2018-11-15T22:36:05-06:00\",\n            \"links\": {\n                \"calendarRels\": \"https://:account.api-us1.com/api/:version/calendars/2/calendarRels\",\n                \"calendarUsers\": \"https://:account.api-us1.com/api/:version/calendars/2/calendarUsers\"\n            },\n            \"id\": \"2\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "calendars": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userid": {
                            "type": "string",
                            "example": "1"
                          },
                          "title": {
                            "type": "string",
                            "example": "Calendar Title"
                          },
                          "type": {
                            "type": "string",
                            "example": "All"
                          },
                          "token": {
                            "type": "string",
                            "example": "4d9af6b9d5056ef1ca4a31c12c0e105c"
                          },
                          "notification": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-11-15T22:36:05-06:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2018-11-15T22:36:05-06:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "calendarRels": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/calendars/2/calendarRels"
                              },
                              "calendarUsers": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/calendars/2/calendarUsers"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a calendar feed",
        "description": "",
        "operationId": "create-a-calendar-feed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "calendar": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the calendar feed"
                      },
                      "type": {
                        "type": "string",
                        "description": "Possible Values: 'All', 'Deals', or 'Contacts'"
                      },
                      "notification": {
                        "type": "boolean",
                        "description": "Whether or not this calendar has notifications"
                      }
                    },
                    "required": [
                      "title",
                      "type"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "calendar": {
                      "title": "Calendar Title",
                      "type": "All",
                      "notification": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"calendar\": {\n        \"title\": \"Calendar Title\",\n        \"type\": \"All\",\n        \"userid\": \"1\",\n        \"notification\": 1,\n        \"cdate\": \"2018-11-15T22:26:35-06:00\",\n        \"mdate\": \"2018-11-15T22:26:35-06:00\",\n        \"token\": \"5540950ac4ed4f11591db934b701aff8\",\n        \"links\": {\n            \"calendarRels\": \"https://:account.api-us1.com/api/:version/calendars/1/calendarRels\",\n            \"calendarUsers\": \"https://:account.api-us1.com/api/:version/calendars/1/calendarUsers\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "calendar": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Calendar Title"
                        },
                        "type": {
                          "type": "string",
                          "example": "All"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "notification": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-11-15T22:26:35-06:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-11-15T22:26:35-06:00"
                        },
                        "token": {
                          "type": "string",
                          "example": "5540950ac4ed4f11591db934b701aff8"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "calendarRels": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/calendars/1/calendarRels"
                            },
                            "calendarUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/calendars/1/calendarUsers"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/calendars/{id}": {
      "delete": {
        "summary": "Delete a calendar feed",
        "description": "",
        "operationId": "remove-a-calendar-feed",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the calendar feed to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a calendar feed",
        "description": "",
        "operationId": "update-a-calendar-feed",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the calendar feed to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "calendar": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the calendar feed"
                      },
                      "type": {
                        "type": "string",
                        "description": "Possible Values: 'All', 'Deals', or 'Contacts'"
                      },
                      "notification": {
                        "type": "boolean",
                        "description": "Whether or not this calendar has notifications"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "calendar": {
                      "title": "Calendar Title",
                      "type": "Deals",
                      "notification": 0
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"calendar\": {\n        \"userid\": \"1\",\n        \"title\": \"Calendar Title\",\n        \"type\": \"Deals\",\n        \"token\": \"5540950ac4ed4f11591db934b701aff8\",\n        \"notification\": 0,\n        \"cdate\": \"2018-11-15T22:26:35-06:00\",\n        \"mdate\": \"2018-11-16T02:11:40-06:00\",\n        \"links\": {\n            \"calendarRels\": \"https://:account.api-us1.com/api/:version/calendars/1/calendarRels\",\n            \"calendarUsers\": \"https://:account.api-us1.com/api/:version/calendars/1/calendarUsers\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "calendar": {
                      "type": "object",
                      "properties": {
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "title": {
                          "type": "string",
                          "example": "Calendar Title"
                        },
                        "type": {
                          "type": "string",
                          "example": "Deals"
                        },
                        "token": {
                          "type": "string",
                          "example": "5540950ac4ed4f11591db934b701aff8"
                        },
                        "notification": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-11-15T22:26:35-06:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-11-16T02:11:40-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "calendarRels": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/calendars/1/calendarRels"
                            },
                            "calendarUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/calendars/1/calendarUsers"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a calendar feed",
        "description": "",
        "operationId": "list-all-calendar-feeds-1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the calendar feed to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"calendar\": {\n        \"userid\": \"1\",\n        \"title\": \"Calendar Title\",\n        \"type\": \"All\",\n        \"token\": \"5540950ac4ed4f11591db934b701aff8\",\n        \"notification\": \"1\",\n        \"cdate\": \"2018-11-15T22:26:35-06:00\",\n        \"mdate\": \"2018-11-15T22:26:35-06:00\",\n        \"links\": {\n            \"calendarRels\": \"https://:account.api-us1.com/api/:version/calendars/1/calendarRels\",\n            \"calendarUsers\": \"https://:account.api-us1.com/api/:version/calendars/1/calendarUsers\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "calendar": {
                      "type": "object",
                      "properties": {
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "title": {
                          "type": "string",
                          "example": "Calendar Title"
                        },
                        "type": {
                          "type": "string",
                          "example": "All"
                        },
                        "token": {
                          "type": "string",
                          "example": "5540950ac4ed4f11591db934b701aff8"
                        },
                        "notification": {
                          "type": "string",
                          "example": "1"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-11-15T22:26:35-06:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-11-15T22:26:35-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "calendarRels": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/calendars/1/calendarRels"
                            },
                            "calendarUsers": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/calendars/1/calendarUsers"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Calendar with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Calendar with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/savedResponses/{id}": {
      "get": {
        "summary": "Retrieve a saved response",
        "description": "",
        "operationId": "get-a-savedresponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the saved Response to recieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"savedResponse\": {\n        \"title\": \"Response title\",\n        \"subject\": \"Response subject\",\n        \"body\": \"Response body\",\n        \"ldate\": null,\n        \"last_sent_user_id\": null,\n        \"cdate\": \"2018-11-16T02:50:54-06:00\",\n        \"mdate\": null,\n        \"links\": {\n            \"user\": \"https://:account.api-us1.com/api/:version/savedResponses/1/user\",\n            \"savedResponseCategorySavedResponse\": \"https://:account.api-us1.com/api/:version/savedResponses/1/savedResponseCategorySavedResponse\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "savedResponse": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Response title"
                        },
                        "subject": {
                          "type": "string",
                          "example": "Response subject"
                        },
                        "body": {
                          "type": "string",
                          "example": "Response body"
                        },
                        "ldate": {},
                        "last_sent_user_id": {},
                        "cdate": {
                          "type": "string",
                          "example": "2018-11-16T02:50:54-06:00"
                        },
                        "mdate": {},
                        "links": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/savedResponses/1/user"
                            },
                            "savedResponseCategorySavedResponse": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/savedResponses/1/savedResponseCategorySavedResponse"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a saved response",
        "description": "",
        "operationId": "retrieve-a-savedresponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the saved response to remove",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for SavedResponse with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for SavedResponse with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a saved response",
        "description": "",
        "operationId": "update-a-saved-response",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the saved response to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "savedResponse": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the saved response being updated"
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject of the saved response being updated"
                      },
                      "body": {
                        "type": "string",
                        "description": "Body of the saved response being updated"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "savedResponse": {
                      "title": "Response title",
                      "subject": "Response subject",
                      "body": "Response body"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"savedResponse\": {\n        \"title\": \"New Response Title\",\n        \"subject\": \"New Response Subject\",\n        \"body\": \"New Response Body\",\n        \"ldate\": null,\n        \"last_sent_user_id\": null,\n        \"cdate\": \"2018-11-16T02:50:54-06:00\",\n        \"mdate\": \"2018-11-16T11:19:30-06:00\",\n        \"links\": {\n            \"user\": \"https://:account.api-us1.com/api/:version/savedResponses/1/user\",\n            \"savedResponseCategorySavedResponse\": \"https://:account.api-us1.com/api/:version/savedResponses/1/savedResponseCategorySavedResponse\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "savedResponse": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "New Response Title"
                        },
                        "subject": {
                          "type": "string",
                          "example": "New Response Subject"
                        },
                        "body": {
                          "type": "string",
                          "example": "New Response Body"
                        },
                        "ldate": {},
                        "last_sent_user_id": {},
                        "cdate": {
                          "type": "string",
                          "example": "2018-11-16T02:50:54-06:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-11-16T11:19:30-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/savedResponses/1/user"
                            },
                            "savedResponseCategorySavedResponse": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/savedResponses/1/savedResponseCategorySavedResponse"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for SavedResponse with id 0\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for SavedResponse with id 0"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/segments/{id}": {
      "get": {
        "summary": "Retrieve a segment",
        "description": "",
        "operationId": "retrieve-a-segment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the segment to be retrieved",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"segment\": {\n        \"name\": \"Segment of test\",\n        \"logic\": \"and\",\n        \"hidden\": \"0\",\n        \"seriesid\": \"0\",\n        \"links\": [],\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "segment": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Segment of test"
                        },
                        "logic": {
                          "type": "string",
                          "example": "and"
                        },
                        "hidden": {
                          "type": "string",
                          "example": "0"
                        },
                        "seriesid": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/scores": {
      "get": {
        "summary": "List all scores",
        "description": "",
        "operationId": "list-all-scores",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"scores\": [\n        {\n            \"reltype\": \"contact\",\n            \"name\": \"Link Engagement Score\",\n            \"descript\": \"+50 points when user clicks any link sent\",\n            \"status\": \"1\",\n            \"cdate\": \"2018-12-13T15:05:42-06:00\",\n            \"mdate\": \"2018-12-13T16:23:07-06:00\",\n            \"links\": [],\n            \"id\": \"2\"\n        },\n        {\n            \"reltype\": \"contact\",\n            \"name\": \"Easy Targets\",\n            \"descript\": \"+10 for replying to any campaign email\",\n            \"status\": \"1\",\n            \"cdate\": \"2018-12-18T19:00:13-06:00\",\n            \"mdate\": \"2018-12-18T19:01:15-06:00\",\n            \"links\": [],\n            \"id\": \"6\"\n        },\n        {\n            \"reltype\": \"deal\",\n            \"name\": \"Is John Smith\",\n            \"descript\": \"+10 If contacts first name is John and the last name is Smith\",\n            \"status\": \"1\",\n            \"cdate\": \"2018-12-18T19:15:02-06:00\",\n            \"mdate\": \"2018-12-18T19:15:10-06:00\",\n            \"links\": [],\n            \"id\": \"7\"\n        },\n        {\n            \"reltype\": \"deal\",\n            \"name\": \"Country Is USA\",\n            \"descript\": \"+20 if contact resides in the United States\",\n            \"status\": \"1\",\n            \"cdate\": \"2018-12-19T00:37:38-06:00\",\n            \"mdate\": \"2018-12-19T00:37:42-06:00\",\n            \"links\": [],\n            \"id\": \"9\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"4\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "scores": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "reltype": {
                            "type": "string",
                            "example": "contact"
                          },
                          "name": {
                            "type": "string",
                            "example": "Link Engagement Score"
                          },
                          "descript": {
                            "type": "string",
                            "example": "+50 points when user clicks any link sent"
                          },
                          "status": {
                            "type": "string",
                            "example": "1"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-12-13T15:05:42-06:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2018-12-13T16:23:07-06:00"
                          },
                          "links": {
                            "type": "array"
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "4"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/campaigns/{id}": {
      "get": {
        "summary": "Retrieve a campaign",
        "description": "",
        "operationId": "retrieve-a-campaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of campaign to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"campaign\": {\n        \"type\": \"single\",\n        \"userid\": \"1\",\n        \"segmentid\": \"0\",\n        \"bounceid\": \"-1\",\n        \"realcid\": \"0\",\n        \"sendid\": \"0\",\n        \"threadid\": \"0\",\n        \"seriesid\": \"0\",\n        \"formid\": \"0\",\n        \"basetemplateid\": \"13b1432dc41b75dda9ff86d84a8593d2b2b9419f\",\n        \"basemessageid\": \"0\",\n        \"addressid\": \"0\",\n        \"source\": \"web\",\n        \"name\": \"Matt Litmus test\",\n        \"cdate\": \"2018-10-10T11:59:43-05:00\",\n        \"mdate\": \"2018-10-10T12:00:23-05:00\",\n        \"sdate\": null,\n        \"ldate\": null,\n        \"send_amt\": \"0\",\n        \"total_amt\": \"0\",\n        \"opens\": \"0\",\n        \"uniqueopens\": \"0\",\n        \"linkclicks\": \"0\",\n        \"uniquelinkclicks\": \"0\",\n        \"subscriberclicks\": \"0\",\n        \"forwards\": \"0\",\n        \"uniqueforwards\": \"0\",\n        \"hardbounces\": \"0\",\n        \"softbounces\": \"0\",\n        \"unsubscribes\": \"0\",\n        \"unsubreasons\": \"0\",\n        \"updates\": \"0\",\n        \"socialshares\": \"0\",\n        \"replies\": \"0\",\n        \"uniquereplies\": \"0\",\n        \"status\": \"0\",\n        \"public\": \"1\",\n        \"mail_transfer\": \"0\",\n        \"mail_send\": \"0\",\n        \"mail_cleanup\": \"0\",\n        \"mailer_log_file\": \"0\",\n        \"tracklinks\": \"all\",\n        \"tracklinksanalytics\": \"0\",\n        \"trackreads\": \"1\",\n        \"trackreadsanalytics\": \"1\",\n        \"analytics_campaign_name\": \"\",\n        \"tweet\": \"0\",\n        \"facebook\": \"0\",\n        \"survey\": \"\",\n        \"embed_images\": \"0\",\n        \"htmlunsub\": \"0\",\n        \"textunsub\": \"0\",\n        \"htmlunsubdata\": null,\n        \"textunsubdata\": null,\n        \"recurring\": \"day1\",\n        \"willrecur\": \"0\",\n        \"split_type\": \"even\",\n        \"split_content\": \"0\",\n        \"split_offset\": \"2\",\n        \"split_offset_type\": \"day\",\n        \"split_winner_messageid\": \"0\",\n        \"split_winner_awaiting\": \"0\",\n        \"responder_offset\": \"0\",\n        \"responder_type\": \"subscribe\",\n        \"responder_existing\": \"0\",\n        \"reminder_field\": \"sdate\",\n        \"reminder_format\": null,\n        \"reminder_type\": \"month_day\",\n        \"reminder_offset\": \"0\",\n        \"reminder_offset_type\": \"day\",\n        \"reminder_offset_sign\": \"+\",\n        \"reminder_last_cron_run\": null,\n        \"activerss_interval\": \"day1\",\n        \"activerss_url\": null,\n        \"activerss_items\": \"10\",\n        \"ip4\": \"643992596\",\n        \"laststep\": \"designer\",\n        \"managetext\": \"0\",\n        \"schedule\": \"0\",\n        \"scheduleddate\": null,\n        \"waitpreview\": \"0\",\n        \"deletestamp\": null,\n        \"replysys\": \"0\",\n        \"links\": {\n            \"user\": \"https://:account.api-us1.com/api/:version/campaigns/1/user\",\n            \"automation\": \"https://:account.api-us1.com/api/:version/campaigns/1/automation\",\n            \"campaignMessage\": \"https://:account.api-us1.com/api/:version/campaigns/1/campaignMessage\",\n            \"links\": \"https://:account.api-us1.com/api/:version/campaigns/1/links\",\n            \"aggregateRevenues\": \"https://:account.api-us1.com/api/:version/campaigns/1/aggregateRevenues\"\n        },\n        \"id\": \"1\",\n        \"user\": \"1\",\n        \"automation\": null\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "campaign": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "single"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "segmentid": {
                          "type": "string",
                          "example": "0"
                        },
                        "bounceid": {
                          "type": "string",
                          "example": "-1"
                        },
                        "realcid": {
                          "type": "string",
                          "example": "0"
                        },
                        "sendid": {
                          "type": "string",
                          "example": "0"
                        },
                        "threadid": {
                          "type": "string",
                          "example": "0"
                        },
                        "seriesid": {
                          "type": "string",
                          "example": "0"
                        },
                        "formid": {
                          "type": "string",
                          "example": "0"
                        },
                        "basetemplateid": {
                          "type": "string",
                          "example": "13b1432dc41b75dda9ff86d84a8593d2b2b9419f"
                        },
                        "basemessageid": {
                          "type": "string",
                          "example": "0"
                        },
                        "addressid": {
                          "type": "string",
                          "example": "0"
                        },
                        "source": {
                          "type": "string",
                          "example": "web"
                        },
                        "name": {
                          "type": "string",
                          "example": "Matt Litmus test"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-10-10T11:59:43-05:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-10-10T12:00:23-05:00"
                        },
                        "sdate": {},
                        "ldate": {},
                        "send_amt": {
                          "type": "string",
                          "example": "0"
                        },
                        "total_amt": {
                          "type": "string",
                          "example": "0"
                        },
                        "opens": {
                          "type": "string",
                          "example": "0"
                        },
                        "uniqueopens": {
                          "type": "string",
                          "example": "0"
                        },
                        "linkclicks": {
                          "type": "string",
                          "example": "0"
                        },
                        "uniquelinkclicks": {
                          "type": "string",
                          "example": "0"
                        },
                        "subscriberclicks": {
                          "type": "string",
                          "example": "0"
                        },
                        "forwards": {
                          "type": "string",
                          "example": "0"
                        },
                        "uniqueforwards": {
                          "type": "string",
                          "example": "0"
                        },
                        "hardbounces": {
                          "type": "string",
                          "example": "0"
                        },
                        "softbounces": {
                          "type": "string",
                          "example": "0"
                        },
                        "unsubscribes": {
                          "type": "string",
                          "example": "0"
                        },
                        "unsubreasons": {
                          "type": "string",
                          "example": "0"
                        },
                        "updates": {
                          "type": "string",
                          "example": "0"
                        },
                        "socialshares": {
                          "type": "string",
                          "example": "0"
                        },
                        "replies": {
                          "type": "string",
                          "example": "0"
                        },
                        "uniquereplies": {
                          "type": "string",
                          "example": "0"
                        },
                        "status": {
                          "type": "string",
                          "example": "0"
                        },
                        "public": {
                          "type": "string",
                          "example": "1"
                        },
                        "mail_transfer": {
                          "type": "string",
                          "example": "0"
                        },
                        "mail_send": {
                          "type": "string",
                          "example": "0"
                        },
                        "mail_cleanup": {
                          "type": "string",
                          "example": "0"
                        },
                        "mailer_log_file": {
                          "type": "string",
                          "example": "0"
                        },
                        "tracklinks": {
                          "type": "string",
                          "example": "all"
                        },
                        "tracklinksanalytics": {
                          "type": "string",
                          "example": "0"
                        },
                        "trackreads": {
                          "type": "string",
                          "example": "1"
                        },
                        "trackreadsanalytics": {
                          "type": "string",
                          "example": "1"
                        },
                        "analytics_campaign_name": {
                          "type": "string",
                          "example": ""
                        },
                        "tweet": {
                          "type": "string",
                          "example": "0"
                        },
                        "facebook": {
                          "type": "string",
                          "example": "0"
                        },
                        "survey": {
                          "type": "string",
                          "example": ""
                        },
                        "embed_images": {
                          "type": "string",
                          "example": "0"
                        },
                        "htmlunsub": {
                          "type": "string",
                          "example": "0"
                        },
                        "textunsub": {
                          "type": "string",
                          "example": "0"
                        },
                        "htmlunsubdata": {},
                        "textunsubdata": {},
                        "recurring": {
                          "type": "string",
                          "example": "day1"
                        },
                        "willrecur": {
                          "type": "string",
                          "example": "0"
                        },
                        "split_type": {
                          "type": "string",
                          "example": "even"
                        },
                        "split_content": {
                          "type": "string",
                          "example": "0"
                        },
                        "split_offset": {
                          "type": "string",
                          "example": "2"
                        },
                        "split_offset_type": {
                          "type": "string",
                          "example": "day"
                        },
                        "split_winner_messageid": {
                          "type": "string",
                          "example": "0"
                        },
                        "split_winner_awaiting": {
                          "type": "string",
                          "example": "0"
                        },
                        "responder_offset": {
                          "type": "string",
                          "example": "0"
                        },
                        "responder_type": {
                          "type": "string",
                          "example": "subscribe"
                        },
                        "responder_existing": {
                          "type": "string",
                          "example": "0"
                        },
                        "reminder_field": {
                          "type": "string",
                          "example": "sdate"
                        },
                        "reminder_format": {},
                        "reminder_type": {
                          "type": "string",
                          "example": "month_day"
                        },
                        "reminder_offset": {
                          "type": "string",
                          "example": "0"
                        },
                        "reminder_offset_type": {
                          "type": "string",
                          "example": "day"
                        },
                        "reminder_offset_sign": {
                          "type": "string",
                          "example": "+"
                        },
                        "reminder_last_cron_run": {},
                        "activerss_interval": {
                          "type": "string",
                          "example": "day1"
                        },
                        "activerss_url": {},
                        "activerss_items": {
                          "type": "string",
                          "example": "10"
                        },
                        "ip4": {
                          "type": "string",
                          "example": "643992596"
                        },
                        "laststep": {
                          "type": "string",
                          "example": "designer"
                        },
                        "managetext": {
                          "type": "string",
                          "example": "0"
                        },
                        "schedule": {
                          "type": "string",
                          "example": "0"
                        },
                        "scheduleddate": {},
                        "waitpreview": {
                          "type": "string",
                          "example": "0"
                        },
                        "deletestamp": {},
                        "replysys": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/campaigns/1/user"
                            },
                            "automation": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/campaigns/1/automation"
                            },
                            "campaignMessage": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/campaigns/1/campaignMessage"
                            },
                            "links": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/campaigns/1/links"
                            },
                            "aggregateRevenues": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/campaigns/1/aggregateRevenues"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        },
                        "automation": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/scores/{id}": {
      "get": {
        "summary": "Retrieve a score",
        "description": "",
        "operationId": "retrieve-a-score",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the score to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"score\": {\n        \"reltype\": \"contact\",\n        \"name\": \"Link Engagement Score\",\n        \"descript\": \"+50 points when user clicks any link sent\",\n        \"status\": \"1\",\n        \"cdate\": \"2018-12-13T15:05:42-06:00\",\n        \"mdate\": \"2018-12-13T16:23:07-06:00\",\n        \"links\": [],\n        \"id\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "score": {
                      "type": "object",
                      "properties": {
                        "reltype": {
                          "type": "string",
                          "example": "contact"
                        },
                        "name": {
                          "type": "string",
                          "example": "Link Engagement Score"
                        },
                        "descript": {
                          "type": "string",
                          "example": "+50 points when user clicks any link sent"
                        },
                        "status": {
                          "type": "string",
                          "example": "1"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2018-12-13T15:05:42-06:00"
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2018-12-13T16:23:07-06:00"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Score with id 1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Score with id 1"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/listGroups": {
      "post": {
        "summary": "Create a list group permission",
        "description": "",
        "operationId": "create-a-list-group-permission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listGroup": {
                    "properties": {
                      "listid": {
                        "type": "integer",
                        "description": "ID of the list",
                        "format": "int32"
                      },
                      "groupid": {
                        "type": "integer",
                        "description": "ID of the group that list should be associated with",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "listid",
                      "groupid"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "listGroup": {
                      "listid": 19,
                      "groupid": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"listGroup\": {\n        \"list\": 19,\n        \"group\": 1,\n        \"links\": {\n            \"list\": \"https://account.api-us1.com/api/3/listGroups/55/list\",\n            \"group\": \"https://account.api-us1.com/api/3/listGroups/55/group\"\n        },\n        \"id\": \"55\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "listGroup": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "integer",
                          "example": 19,
                          "default": 0
                        },
                        "group": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "list": {
                              "type": "string",
                              "example": "https://account.api-us1.com/api/3/listGroups/55/list"
                            },
                            "group": {
                              "type": "string",
                              "example": "https://account.api-us1.com/api/3/listGroups/55/group"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "55"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Forbidden\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fieldRels": {
      "post": {
        "summary": "Create a custom field relationship to list(s)",
        "description": "",
        "operationId": "create-a-custom-field-relationship-to-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fieldRel": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "integer",
                        "description": "ID of the field to create the relationship",
                        "default": 8,
                        "format": "int32"
                      },
                      "relid": {
                        "type": "integer",
                        "description": "ID of the list to create the relationship (0 makes the field available on all lists)",
                        "default": 2,
                        "format": "int32"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "fieldRel": {
                      "field": 8,
                      "relid": 2
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldRel\": {\n        \"relid\": 2,\n        \"field\": 8,\n        \"cdate\": \"2019-02-01T08:39:25-06:00\",\n        \"links\": [],\n        \"id\": \"19\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldRel": {
                      "type": "object",
                      "properties": {
                        "relid": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "field": {
                          "type": "integer",
                          "example": 8,
                          "default": 0
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2019-02-01T08:39:25-06:00"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "19"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Forbidden\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/scoreValues": {
      "get": {
        "summary": "Retrieve a contact's score value",
        "description": "",
        "operationId": "retrieve-a-contacts-score-value",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"scoreValues\": [\n        {\n            \"score\": \"2\",\n            \"contact\": \"1\",\n            \"deal\": null,\n            \"cdate\": \"2018-03-08T14:01:16-06:00\",\n            \"mdate\": \"2018-10-22T20:15:28-05:00\",\n            \"scoreValue\": \"0\",\n            \"links\": {\n                \"score\": \"https://:account.api-us1.com/api/3/scoreValues/1/score\",\n                \"contact\": \"https://:account.api-us1.com/api/3/scoreValues/1/contact\",\n                \"deal\": \"https://:account.api-us1.com/api/3/scoreValues/1/deal\"\n            },\n            \"id\": \"1\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "scoreValues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "score": {
                            "type": "string",
                            "example": "2"
                          },
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "deal": {},
                          "cdate": {
                            "type": "string",
                            "example": "2018-03-08T14:01:16-06:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2018-10-22T20:15:28-05:00"
                          },
                          "scoreValue": {
                            "type": "string",
                            "example": "0"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "score": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/scoreValues/1/score"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/scoreValues/1/contact"
                              },
                              "deal": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/scoreValues/1/deal"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contactDeals": {
      "get": {
        "summary": "List all secondary contacts",
        "description": "Retrieve all secondary contacts",
        "operationId": "list-all-secondary-contacts",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactDeals\": [\n        {\n            \"deal\": \"2\",\n            \"contact\": \"1\",\n            \"cdate\": \"2019-02-25T08:16:56-06:00\",\n            \"links\": {\n                \"deal\": \"/api/3/contactDeals/1/deal\",\n                \"contact\": \"/api/3/contactDeals/1/contact\"\n            },\n            \"id\": \"1\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactDeals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deal": {
                            "type": "string",
                            "example": "2"
                          },
                          "contact": {
                            "type": "string",
                            "example": "1"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2019-02-25T08:16:56-06:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "deal": {
                                "type": "string",
                                "example": "/api/3/contactDeals/1/deal"
                              },
                              "contact": {
                                "type": "string",
                                "example": "/api/3/contactDeals/1/contact"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a secondary contact",
        "description": "Create a new secondary contact for a deal",
        "operationId": "create-a-secondary-contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactDeal": {
                    "properties": {
                      "deal": {
                        "type": "string",
                        "description": "Deal's id"
                      },
                      "contact": {
                        "type": "string",
                        "description": "Contact's id"
                      }
                    },
                    "required": [
                      "deal",
                      "contact"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "contactDeal": {
                      "contact": 1,
                      "deal": 2
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"deals\": [\n        {\n            \"hash\": \"c7b5a271\",\n            \"owner\": \"1\",\n            \"contact\": \"2\",\n            \"organization\": null,\n            \"group\": \"1\",\n            \"stage\": \"1\",\n            \"title\": \"deal1\",\n            \"description\": \"\",\n            \"percent\": \"0\",\n            \"cdate\": \"2018-10-31T13:33:09-05:00\",\n            \"mdate\": \"2018-10-31T13:33:09-05:00\",\n            \"nexttaskid\": null,\n            \"value\": \"10000\",\n            \"currency\": \"usd\",\n            \"winProbability\": null,\n            \"winProbabilityMdate\": \"2018-10-31T13:33:09-05:00\",\n            \"status\": \"0\",\n            \"activitycount\": \"1\",\n            \"nextdealid\": \"2\",\n            \"edate\": null,\n            \"links\": {\n                \"dealActivities\": \"/api/3/deals/2/dealActivities\",\n                \"contact\": \"/api/3/deals/2/contact\",\n                \"contactDeals\": \"/api/3/deals/2/contactDeals\",\n                \"group\": \"/api/3/deals/2/group\",\n                \"nextTask\": \"/api/3/deals/2/nextTask\",\n                \"notes\": \"/api/3/deals/2/notes\",\n                \"organization\": \"/api/3/deals/2/organization\",\n                \"owner\": \"/api/3/deals/2/owner\",\n                \"scoreValues\": \"/api/3/deals/2/scoreValues\",\n                \"stage\": \"/api/3/deals/2/stage\",\n                \"tasks\": \"/api/3/deals/2/tasks\",\n                \"dealCustomFieldData\": \"/api/3/deals/2/dealCustomFieldData\"\n            },\n            \"id\": \"2\",\n            \"isDisabled\": false\n        }\n    ],\n    \"contactDeal\": {\n        \"contact\": 3,\n        \"deal\": 2,\n        \"cdate\": \"2019-02-25T09:00:02-06:00\",\n        \"links\": {\n            \"deal\": \"/api/3/contactDeals/3/deal\",\n            \"contact\": \"/api/3/contactDeals/3/contact\"\n        },\n        \"id\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "example": "c7b5a271"
                          },
                          "owner": {
                            "type": "string",
                            "example": "1"
                          },
                          "contact": {
                            "type": "string",
                            "example": "2"
                          },
                          "organization": {},
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "stage": {
                            "type": "string",
                            "example": "1"
                          },
                          "title": {
                            "type": "string",
                            "example": "deal1"
                          },
                          "description": {
                            "type": "string",
                            "example": ""
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-10-31T13:33:09-05:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2018-10-31T13:33:09-05:00"
                          },
                          "nexttaskid": {},
                          "value": {
                            "type": "string",
                            "example": "10000"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "winProbability": {},
                          "winProbabilityMdate": {
                            "type": "string",
                            "example": "2018-10-31T13:33:09-05:00"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "activitycount": {
                            "type": "string",
                            "example": "1"
                          },
                          "nextdealid": {
                            "type": "string",
                            "example": "2"
                          },
                          "edate": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealActivities": {
                                "type": "string",
                                "example": "/api/3/deals/2/dealActivities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "/api/3/deals/2/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "/api/3/deals/2/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "/api/3/deals/2/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "/api/3/deals/2/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/api/3/deals/2/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "/api/3/deals/2/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/api/3/deals/2/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "/api/3/deals/2/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "/api/3/deals/2/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "/api/3/deals/2/tasks"
                              },
                              "dealCustomFieldData": {
                                "type": "string",
                                "example": "/api/3/deals/2/dealCustomFieldData"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          },
                          "isDisabled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          }
                        }
                      }
                    },
                    "contactDeal": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "integer",
                          "example": 3,
                          "default": 0
                        },
                        "deal": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2019-02-25T09:00:02-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "deal": {
                              "type": "string",
                              "example": "/api/3/contactDeals/3/deal"
                            },
                            "contact": {
                              "type": "string",
                              "example": "/api/3/contactDeals/3/contact"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "already exists": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The given contact is already associated to the deal\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/contact\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The given contact is already associated to the deal"
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_invalid"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/contact"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "required field missing": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The contactDeal contact was not provided.\",\n            \"detail\": \"\",\n            \"code\": \"field_missing\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/contact\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The contactDeal contact was not provided."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_missing"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/contact"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contactDeals/{id}": {
      "put": {
        "summary": "Update a secondary contact",
        "description": "Update an existing secondary contact",
        "operationId": "update-a-secondary-contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Secondary Contact's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactDeal": {
                    "properties": {
                      "deal": {
                        "type": "string",
                        "description": "Deal's id"
                      },
                      "contact": {
                        "type": "string",
                        "description": "Contact's id"
                      },
                      "role": {
                        "type": "integer",
                        "description": "role id to associate with the contact",
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "contactDeal": {
                      "contact": 4,
                      "deal": 1,
                      "role": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"deals\": [\n        {\n            \"hash\": \"c7b5a271\",\n            \"owner\": \"1\",\n            \"contact\": \"2\",\n            \"organization\": null,\n            \"group\": \"1\",\n            \"stage\": \"1\",\n            \"title\": \"deal1\",\n            \"description\": \"\",\n            \"percent\": \"0\",\n            \"cdate\": \"2018-10-31T13:33:09-05:00\",\n            \"mdate\": \"2018-10-31T13:33:09-05:00\",\n            \"nexttaskid\": null,\n            \"value\": \"10000\",\n            \"currency\": \"usd\",\n            \"winProbability\": null,\n            \"winProbabilityMdate\": \"2018-10-31T13:33:09-05:00\",\n            \"status\": \"0\",\n            \"activitycount\": \"1\",\n            \"nextdealid\": \"2\",\n            \"edate\": null,\n            \"links\": {\n                \"dealActivities\": \"/api/3/deals/2/dealActivities\",\n                \"contact\": \"/api/3/deals/2/contact\",\n                \"contactDeals\": \"/api/3/deals/2/contactDeals\",\n                \"group\": \"/api/3/deals/2/group\",\n                \"nextTask\": \"/api/3/deals/2/nextTask\",\n                \"notes\": \"/api/3/deals/2/notes\",\n                \"organization\": \"/api/3/deals/2/organization\",\n                \"owner\": \"/api/3/deals/2/owner\",\n                \"scoreValues\": \"/api/3/deals/2/scoreValues\",\n                \"stage\": \"/api/3/deals/2/stage\",\n                \"tasks\": \"/api/3/deals/2/tasks\",\n                \"dealCustomFieldData\": \"/api/3/deals/2/dealCustomFieldData\"\n            },\n            \"id\": \"2\",\n            \"isDisabled\": false\n        }\n    ],\n    \"contactDeal\": {\n        \"deal\": \"2\",\n        \"contact\": 4,\n        \"role\": 1,\n        \"cdate\": \"2019-02-25T08:16:56-06:00\",\n        \"links\": {\n            \"deal\": \"/api/3/contactDeals/1/deal\",\n            \"contact\": \"/api/3/contactDeals/1/contact\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "example": "c7b5a271"
                          },
                          "owner": {
                            "type": "string",
                            "example": "1"
                          },
                          "contact": {
                            "type": "string",
                            "example": "2"
                          },
                          "organization": {},
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "stage": {
                            "type": "string",
                            "example": "1"
                          },
                          "title": {
                            "type": "string",
                            "example": "deal1"
                          },
                          "description": {
                            "type": "string",
                            "example": ""
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2018-10-31T13:33:09-05:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2018-10-31T13:33:09-05:00"
                          },
                          "nexttaskid": {},
                          "value": {
                            "type": "string",
                            "example": "10000"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "winProbability": {},
                          "winProbabilityMdate": {
                            "type": "string",
                            "example": "2018-10-31T13:33:09-05:00"
                          },
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "activitycount": {
                            "type": "string",
                            "example": "1"
                          },
                          "nextdealid": {
                            "type": "string",
                            "example": "2"
                          },
                          "edate": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealActivities": {
                                "type": "string",
                                "example": "/api/3/deals/2/dealActivities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "/api/3/deals/2/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "/api/3/deals/2/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "/api/3/deals/2/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "/api/3/deals/2/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "/api/3/deals/2/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "/api/3/deals/2/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "/api/3/deals/2/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "/api/3/deals/2/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "/api/3/deals/2/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "/api/3/deals/2/tasks"
                              },
                              "dealCustomFieldData": {
                                "type": "string",
                                "example": "/api/3/deals/2/dealCustomFieldData"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          },
                          "isDisabled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          }
                        }
                      }
                    },
                    "contactDeal": {
                      "type": "object",
                      "properties": {
                        "deal": {
                          "type": "string",
                          "example": "2"
                        },
                        "contact": {
                          "type": "integer",
                          "example": 4,
                          "default": 0
                        },
                        "role": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2019-02-25T08:16:56-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "deal": {
                              "type": "string",
                              "example": "/api/3/contactDeals/1/deal"
                            },
                            "contact": {
                              "type": "string",
                              "example": "/api/3/contactDeals/1/contact"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for SubscriberDeal with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for SubscriberDeal with id 100"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "already exists": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The given contact is already associated to the deal\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/contact\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The given contact is already associated to the deal"
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_invalid"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/contact"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "relation does not exist": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The related contact does not exist.\",\n            \"detail\": \"\",\n            \"code\": \"related_missing\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/contact\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The related contact does not exist."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "related_missing"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/contact"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a secondary contact",
        "description": "Delete an existing secondary contact",
        "operationId": "delete-a-secondary-contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Secondary Contact's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ }"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for SubscriberDeal with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for SubscriberDeal with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve a secondary contact",
        "description": "Retrieve an existing secondary contact",
        "operationId": "retrieve-a-secondary-contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Secondary Contact's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactDeal\": {\n        \"deal\": \"2\",\n        \"contact\": \"1\",\n        \"cdate\": \"2019-02-25T08:16:56-06:00\",\n        \"links\": {\n            \"deal\": \"/api/3/contactDeals/1/deal\",\n            \"contact\": \"/api/3/contactDeals/1/contact\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactDeal": {
                      "type": "object",
                      "properties": {
                        "deal": {
                          "type": "string",
                          "example": "2"
                        },
                        "contact": {
                          "type": "string",
                          "example": "1"
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2019-02-25T08:16:56-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "deal": {
                              "type": "string",
                              "example": "/api/3/contactDeals/1/deal"
                            },
                            "contact": {
                              "type": "string",
                              "example": "/api/3/contactDeals/1/contact"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for SubscriberDeal with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for SubscriberDeal with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fieldOption/bulk": {
      "post": {
        "summary": "Create custom field options",
        "description": "",
        "operationId": "create-custom-field-options",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "field",
                  "value"
                ],
                "properties": {
                  "field": {
                    "type": "integer",
                    "description": "ID of the custom field to add options to",
                    "format": "int32"
                  },
                  "label": {
                    "type": "string",
                    "description": "Name of the option"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the option"
                  },
                  "orderid": {
                    "type": "integer",
                    "description": "Order for displaying the custom field option",
                    "format": "int32"
                  },
                  "isdefault": {
                    "type": "boolean",
                    "description": "Whether or not this option is the default value"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "fieldOptions": [
                      {
                        "orderid": 1,
                        "value": "X",
                        "label": "Option X",
                        "isdefault": false,
                        "field": "62"
                      },
                      {
                        "orderid": 2,
                        "value": "Y",
                        "label": "Option Y",
                        "isdefault": false,
                        "field": "62"
                      },
                      {
                        "orderid": 3,
                        "value": "Z",
                        "label": "Option Z",
                        "isdefault": false,
                        "field": "62"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldOptions\": [\n        {\n            \"orderid\": 1,\n            \"value\": \"X\",\n            \"label\": \"Option X\",\n            \"isdefault\": 0,\n            \"field\": \"62\",\n            \"cdate\": \"2023-06-08T15:36:49-05:00\",\n            \"udate\": \"2023-06-08T15:36:49-05:00\",\n            \"links\": {\n                \"field\": \"https://{{yourAccount}}.api-us1.com/api/3/fieldOptions/1/field\"\n            },\n            \"id\": \"1\"\n        },\n        {\n            \"orderid\": 2,\n            \"value\": \"Y\",\n            \"label\": \"Option Y\",\n            \"isdefault\": 0,\n            \"field\": \"62\",\n            \"cdate\": \"2023-06-08T15:36:49-05:00\",\n            \"udate\": \"2023-06-08T15:36:49-05:00\",\n            \"links\": {\n                \"field\": \"https://{{yourAccount}}.api-us1.com/api/3/fieldOptions/2/field\"\n            },\n            \"id\": \"2\"\n        },\n        {\n            \"orderid\": 3,\n            \"value\": \"Z\",\n            \"label\": \"Option Z\",\n            \"isdefault\": 0,\n            \"field\": \"62\",\n            \"cdate\": \"2023-06-08T15:36:49-05:00\",\n            \"udate\": \"2023-06-08T15:36:49-05:00\",\n            \"links\": {\n                \"field\": \"{{yourAccount}}.api-us1.com/api/3/fieldOptions/3/field\"\n            },\n            \"id\": \"3\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldOptions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderid": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "value": {
                            "type": "string",
                            "example": "X"
                          },
                          "label": {
                            "type": "string",
                            "example": "Option X"
                          },
                          "isdefault": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "field": {
                            "type": "string",
                            "example": "62"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2023-06-08T15:36:49-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2023-06-08T15:36:49-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string",
                                "example": "https://{{yourAccount}}.api-us1.com/api/3/fieldOptions/1/field"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": \"Bulk operation failed. Request must contain an array of fieldOption objects.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string",
                      "example": "Bulk operation failed. Request must contain an array of fieldOption objects."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealCustomFieldData/bulkCreate": {
      "post": {
        "summary": "Bulk create a custom deal field value",
        "description": "",
        "operationId": "bulk-create-a-custom-deal-field-value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "array": {
                    "properties": {
                      "dealId": {
                        "type": "integer",
                        "description": "The ID of the deal this field value relates to",
                        "format": "int32"
                      },
                      "customFieldId": {
                        "type": "integer",
                        "description": "The ID of the custom field metum this field value relates to",
                        "format": "int32"
                      },
                      "fieldValue": {
                        "type": "string",
                        "description": "Values for the field. (For currency field only, this needs to be in cents: eg, 10050 = 100.5)"
                      },
                      "fieldCurrency": {
                        "type": "string",
                        "description": "Currency code for the money value"
                      }
                    },
                    "required": [
                      "dealId",
                      "customFieldId",
                      "fieldValue"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": [
                    {
                      "dealId": "1",
                      "customFieldId": "1",
                      "fieldValue": "test title"
                    },
                    {
                      "dealId": "1",
                      "customFieldId": "2",
                      "fieldValue": "test title"
                    },
                    {
                      "dealId": "1",
                      "customFieldId": "3",
                      "fieldValue": [
                        "option 1",
                        "option 3",
                        "option 4"
                      ]
                    },
                    {
                      "dealId": "1",
                      "customFieldId": "4",
                      "fieldValue": 9999,
                      "fieldCurrency": "cad"
                    },
                    {
                      "dealId": "1",
                      "customFieldId": "5",
                      "fieldValue": "100.99"
                    },
                    {
                      "dealId": "1",
                      "customFieldId": "6",
                      "fieldValue": "2018-12-31"
                    },
                    {
                      "dealId": "1",
                      "customFieldId": "7",
                      "fieldValue": "2020-05-19T02:45:00-05:00"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"the bulk insert was successful\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "the bulk insert was successful"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealCustomFieldData/bulkUpdate": {
      "patch": {
        "summary": "Bulk update a custom field value",
        "description": "",
        "operationId": "bulk-update-a-custom-field-value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "array": {
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "ID of the dealCustomFieldData to update",
                        "format": "int32"
                      },
                      "fieldValue": {
                        "type": "string",
                        "description": "Values for the field. (For currency field only, this needs to be in cents: eg, 10050 = 100.5)"
                      },
                      "fieldCurrency": {
                        "type": "string",
                        "description": "Currency code for the money value"
                      }
                    },
                    "required": [
                      "id",
                      "fieldValue"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": [
                    {
                      "id": "1",
                      "fieldValue": "test title"
                    },
                    {
                      "id": "2",
                      "fieldValue": [
                        "option 1",
                        "option 3",
                        "option 4"
                      ]
                    },
                    {
                      "id": "3",
                      "fieldValue": 9999,
                      "fieldCurrency": "cad"
                    },
                    {
                      "id": "4",
                      "fieldValue": "100.99"
                    },
                    {
                      "id": "5",
                      "fieldValue": "2018-12-31"
                    },
                    {
                      "id": "6",
                      "fieldValue": "2020-05-19T02:45:00-05:00"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"DealCustomFieldDatas with ID(s): 1, 2, 3, 4, 5 successfully bulk updated.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "DealCustomFieldDatas with ID(s): 1, 2, 3, 4, 5 successfully bulk updated."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts": {
      "get": {
        "summary": "List all accounts",
        "description": "Retrieve all existing account",
        "operationId": "list-all-accounts",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count_deals",
            "in": "query",
            "description": "Whether to compute the contactCount and dealCount counts for the number of contacts/deals associated with each account. Set it to true to include the right counts. If set to false or omitted from the call, then contactCount and dealCount will not be counted and be simply displayed as 0.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accounts\": [\n        {\n            \"name\": \"First Example Account\",\n            \"accountUrl\": null,\n            \"createdTimestamp\": \"2019-04-29T07:51:31-05:00\",\n            \"updatedTimestamp\": \"2019-04-29T07:51:31-05:00\",\n            \"contactCount\": \"1\",\n            \"dealCount\": \"3\",\n            \"links\": [\n                \"notes\": \"https://:account.api-us1.com/api/:version/accounts/1/notes\",\n                \"accountCustomFieldData\": \"https://:account.api-us1.com/api/:version/accounts/1/accountCustomFieldData\",\n                \"accountContacts\": \"https://:account.api-us1.com/api/:version/accounts/1/accountContacts\"],\n            \"id\": \"1\"\n        },\n        {\n            \"name\": \"Second Example Account\",\n            \"accountUrl\": null,\n            \"createdTimestamp\": \"2019-04-29T07:51:32-05:00\",\n            \"updatedTimestamp\": \"2019-04-29T07:51:32-05:00\",\n            \"contactCount\": \"2\",\n            \"dealCount\": \"5\",\n            \"links\": [\n                \"notes\": \"https://:account.api-us1.com/api/:version/accounts/2/notes\",\n                \"accountCustomFieldData\": \"https://:account.api-us1.com/api/:version/accounts/2/accountCustomFieldData\",\n                \"accountContacts\": \"https://:account.api-us1.com/api/:version/accounts/2/accountContacts\"],\n            \"id\": \"2\"\n        }\n    ],\n    \"meta\": {\n      \"total\": \"2\"\n    }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create an account",
        "description": "Create a new account",
        "operationId": "create-an-account-new",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Account's name"
                      },
                      "accountUrl": {
                        "type": "string",
                        "description": "Account's website"
                      },
                      "owner": {
                        "type": "integer",
                        "description": "The userId of the account owner.",
                        "default": 1,
                        "format": "int32"
                      },
                      "fields": {
                        "type": "array",
                        "description": "Account's custom field values `{customFieldId: int, fieldValue: string, fieldCurrency?:string}[]`",
                        "items": {
                          "properties": {
                            "customFieldId": {
                              "type": "integer",
                              "description": "Field ID, ID of the Custom Field Meta Data",
                              "format": "int32"
                            },
                            "fieldValue": {
                              "type": "string",
                              "description": "Updated field value. For `currency` field, this needs to be in cents not dollars (or 100 x Base Unit)."
                            },
                            "fieldCurrency": {
                              "type": "string",
                              "description": "Required only for the `currency` field type. The three letter currency code for the currency value"
                            }
                          },
                          "required": [
                            "customFieldId",
                            "fieldValue"
                          ],
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "account": {
                      "name": "Example Account",
                      "accountUrl": "https://www.example.com",
                      "owner": 1,
                      "fields": [
                        {
                          "customFieldId": 9,
                          "fieldValue": "500-1000"
                        },
                        {
                          "customFieldId": 20,
                          "fieldValue": 1234,
                          "fieldCurrency": "GBP"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"account\": {\n        \"name\": \"Example Account\",\n        \"accountUrl\": \"https://www.example.com\",\n        \"createdTimestamp\": \"2019-06-12T16:52:16-05:00\",\n        \"updatedTimestamp\": \"2019-06-12T16:52:16-05:00\",\n        \"links\": [],\n        \"fields\": [\n            {\n                \"customFieldId\": 9,\n                \"fieldValue\": \"501 - 1000\",\n                \"accountId\": \"1\"\n            },\n            {\n                \"customFieldId\": 20,\n                \"fieldValue\": 1234,\n        \t\t\t\t\"fieldCurrency\": \"GBP\",\n                \"accountId\": \"1\"\n            }\n        ],\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "account": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Example Account"
                        },
                        "accountUrl": {
                          "type": "string",
                          "example": "https://www.example.com"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2019-06-12T16:52:16-05:00"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2019-06-12T16:52:16-05:00"
                        },
                        "links": {
                          "type": "array"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customFieldId": {
                                "type": "integer",
                                "example": 9,
                                "default": 0
                              },
                              "fieldValue": {
                                "type": "string",
                                "example": "501 - 1000"
                              },
                              "accountId": {
                                "type": "string",
                                "example": "1"
                              }
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Missing Data": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The account name was not provided.\",\n            \"detail\": \"\",\n            \"code\": \"field_missing\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/name\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The account name was not provided."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_missing"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/name"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Alredy Existing": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"An account named \\\"Example Account\\\" already exists. Please choose a new name.\",\n            \"detail\": \"\",\n            \"code\": \"duplicate\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/name\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "An account named \"Example Account\" already exists. Please choose a new name."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "duplicate"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/name"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountCustomFieldData": {
      "post": {
        "summary": "Create a custom field value",
        "description": "",
        "operationId": "create-a-custom-field-value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountCustomFieldDatum": {
                    "properties": {
                      "customerAccountId": {
                        "type": "integer",
                        "description": "The ID of the account this field value relates to",
                        "format": "int32"
                      },
                      "customFieldId": {
                        "type": "integer",
                        "description": "The ID of the custom field metum this field value relates to",
                        "format": "int32"
                      },
                      "fieldValue": {
                        "type": "string",
                        "description": "Values for the field. (For `currency` field only, this needs to be in cents: eg, 10050 = 100.5)"
                      },
                      "fieldCurrency": {
                        "type": "string",
                        "description": "Currency code for the money value",
                        "default": "Default Currency for Field"
                      }
                    },
                    "required": [
                      "customerAccountId",
                      "customFieldId",
                      "fieldValue"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "text/textarea/hidden": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "accountId": "2",
                      "customFieldId": "1",
                      "fieldValue": "test title"
                    }
                  }
                },
                "dropdown/radio": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "customerAccountId": "2",
                      "customFieldId": "2",
                      "fieldValue": "||option 1||option 2||option 3||"
                    }
                  }
                },
                "mutliple multiselects/checkboxes": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "customerAccountId": "2",
                      "customFieldId": "3",
                      "fieldValue": [
                        "option 1",
                        "option 3",
                        "option 4"
                      ]
                    }
                  }
                },
                "currency": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "customerAccountId": "1",
                      "customFieldId": "4",
                      "fieldValue": 9999,
                      "fieldCurrency": "cad"
                    }
                  }
                },
                "number": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "customerAccountId": "1",
                      "customFieldId": "5",
                      "fieldValue": "100.99"
                    }
                  }
                },
                "date": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "customerAccountId": "1",
                      "customFieldId": "6",
                      "fieldValue": "2018-12-31"
                    }
                  }
                },
                "datetime": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "customerAccountId": "1",
                      "customFieldId": "14",
                      "fieldValue": "2020-05-19T02:45:00-05:00"
                    }
                  }
                },
                "single multiselect/checkbox": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "customerAccountId": "2",
                      "customFieldId": "3",
                      "fieldValue": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountCustomFieldDatum\": {\n        \"id\": \"5\",\n        \"accountCustomFieldMetumId\": 1,\n        \"accountId\": 2,\n        \"customFieldId\": 1,\n        \"createdTimestamp\": \"2018-11-06 02:27:05\",\n        \"updatedTimestamp\": \"2018-11-06 02:27:05\",\n        \"fieldValue\": \"test title\",\n        \"links\": {\n            \"account\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/5/account\",\n            \"accountCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/5/accountCustomFieldMetum\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountCustomFieldDatum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "5"
                        },
                        "accountCustomFieldMetumId": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "accountId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "customFieldId": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-11-06 02:27:05"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-11-06 02:27:05"
                        },
                        "fieldValue": {
                          "type": "string",
                          "example": "test title"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/accountCustomFieldData/5/account"
                            },
                            "accountCustomFieldMetum": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/accountCustomFieldData/5/accountCustomFieldMetum"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all custom field values",
        "description": "",
        "operationId": "list-all-custom-field-values-2",
        "parameters": [
          {
            "name": "filters[customerAccountId]",
            "in": "query",
            "description": "Filter results by a specific account (note that Id uses a capital I)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountCustomFieldData\": [\n        {\n            \"id\": \"3\",\n            \"accountCustomFieldMetumId\": 1,\n            \"accountId\": 1,\n            \"customFieldId\": 1,\n            \"createdTimestamp\": \"2018-11-06 02:26:07\",\n            \"updatedTimestamp\": \"2018-11-06 02:26:07\",\n            \"fieldValue\": \"test title\",\n            \"links\": {\n                \"account\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/3/account\",\n                \"accountCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/3/accountCustomFieldMetum\"\n            }\n        },\n        {\n            \"id\": \"4\",\n            \"accountCustomFieldMetumId\": 1,\n            \"accountId\": 3,\n            \"customFieldId\": 1,\n            \"createdTimestamp\": \"2018-11-06 02:26:51\",\n            \"updatedTimestamp\": \"2018-11-06 02:26:51\",\n            \"fieldValue\": \"test title\",\n            \"links\": {\n                \"account\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/4/account\",\n                \"accountCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/4/accountCustomFieldMetum\"\n            }\n        },\n        {\n            \"id\": \"5\",\n            \"accountCustomFieldMetumId\": 1,\n            \"accountId\": 2,\n            \"customFieldId\": 1,\n            \"createdTimestamp\": \"2018-11-06 02:27:05\",\n            \"updatedTimestamp\": \"2018-11-06 02:27:05\",\n            \"fieldValue\": \"test title\",\n            \"links\": {\n                \"account\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/5/account\",\n                \"accountCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/5/accountCustomFieldMetum\"\n            }\n        },\n        {\n            \"id\": \"1\",\n            \"accountCustomFieldMetumId\": 5,\n            \"accountId\": 2,\n            \"customFieldId\": 5,\n            \"createdTimestamp\": \"2018-10-29 20:40:38\",\n            \"updatedTimestamp\": \"2018-11-06 02:21:36\",\n            \"fieldValue\": \"New title\",\n            \"links\": {\n                \"account\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/1/account\",\n                \"accountCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/1/accountCustomFieldMetum\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountCustomFieldData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "3"
                          },
                          "accountCustomFieldMetumId": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "accountId": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "customFieldId": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2018-11-06 02:26:07"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2018-11-06 02:26:07"
                          },
                          "fieldValue": {
                            "type": "string",
                            "example": "test title"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/accountCustomFieldData/3/account"
                              },
                              "accountCustomFieldMetum": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/accountCustomFieldData/3/accountCustomFieldMetum"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountCustomFieldMeta/{id}": {
      "get": {
        "summary": "Retrieve a custom field",
        "description": "",
        "operationId": "retrieve-a-custom-field-meta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the field to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountCustomFieldMetum\": {\n        \"id\": \"1\",\n        \"fieldLabel\": \"New Title\",\n        \"fieldType\": \"text\",\n        \"fieldOptions\": null,\n        \"fieldDefault\": \"Default Text\",\n        \"isFormVisible\": 1,\n        \"isRequired\": 1,\n        \"displayOrder\": 1,\n        \"createdTimestamp\": \"2018-10-22 19:57:37\",\n        \"updatedTimestamp\": \"2018-10-22 20:04:21\",\n        \"links\": {\n            \"accountCustomFieldData\": \"https://:account.api-us1.com/api/:version/accountCustomFieldMeta/1/accountCustomFieldData\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountCustomFieldMetum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "fieldLabel": {
                          "type": "string",
                          "example": "New Title"
                        },
                        "fieldType": {
                          "type": "string",
                          "example": "text"
                        },
                        "fieldOptions": {},
                        "fieldDefault": {
                          "type": "string",
                          "example": "Default Text"
                        },
                        "isFormVisible": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "isRequired": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "displayOrder": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 19:57:37"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 20:04:21"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "accountCustomFieldData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/accountCustomFieldMeta/1/accountCustomFieldData"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a custom field",
        "description": "",
        "operationId": "update-a-custom-field",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the custom field to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountCustomFieldMetum": {
                    "properties": {
                      "fieldLabel": {
                        "type": "string",
                        "description": "Name of the field"
                      },
                      "fieldOptions": {
                        "type": "array",
                        "description": "Options for the field. Only necessary if field_type is dropdown, multiselect, radio, or checkbox.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fieldDefault": {
                        "type": "string",
                        "description": "Default value of the field"
                      },
                      "isFormVisible": {
                        "type": "boolean",
                        "description": "Whether or not the field is visible on forms"
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "Order for displaying the field on Manage Fields page and deal profiles",
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "New Title",
                      "fieldDefault": "Default Text",
                      "isFormVisible": 1,
                      "displayOrder": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountCustomFieldMetum\": {\n        \"id\": \"1\",\n        \"fieldLabel\": \"New Title\",\n        \"fieldType\": \"text\",\n        \"fieldOptions\": null,\n        \"fieldDefault\": \"Default Text\",\n        \"isFormVisible\": 1,\n        \"isRequired\": 1,\n        \"displayOrder\": 1,\n        \"createdTimestamp\": \"2018-10-22 19:57:37\",\n        \"updatedTimestamp\": \"2018-10-22 20:04:21\",\n        \"links\": {\n            \"accountCustomFieldData\": \"https://:account.api-us1.com/api/:version/accountCustomFieldMeta/1/accountCustomFieldData\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountCustomFieldMetum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "fieldLabel": {
                          "type": "string",
                          "example": "New Title"
                        },
                        "fieldType": {
                          "type": "string",
                          "example": "text"
                        },
                        "fieldOptions": {},
                        "fieldDefault": {
                          "type": "string",
                          "example": "Default Text"
                        },
                        "isFormVisible": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "isRequired": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "displayOrder": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 19:57:37"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 20:04:21"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "accountCustomFieldData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/accountCustomFieldMeta/1/accountCustomFieldData"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a custom field",
        "description": "",
        "operationId": "delete-a-custom-field",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the field to delete",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"AccountCustomFieldMeta deleted.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "AccountCustomFieldMeta deleted."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountCustomFieldData/{id}": {
      "get": {
        "summary": "Retrieve a custom field value",
        "description": "",
        "operationId": "retrieve-a-custom-field-value",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the dealCustomFieldData to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountCustomFieldDatum\": {\n        \"id\": \"1\",\n        \"accountId\": 2,\n        \"customFieldId\": 5,\n        \"createdTimestamp\": \"2018-10-29 20:40:38\",\n        \"updatedTimestamp\": \"2018-11-06 02:21:36\",\n        \"fieldValue\": \"New title\",\n        \"links\": {\n            \"account\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/1/account\",\n            \"accountCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/1/accountCustomFieldMetum\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountCustomFieldDatum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "accountId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "customFieldId": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-29 20:40:38"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-11-06 02:21:36"
                        },
                        "fieldValue": {
                          "type": "string",
                          "example": "New title"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/accountCustomFieldData/1/account"
                            },
                            "accountCustomFieldMetum": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/accountCustomFieldData/1/accountCustomFieldMetum"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a custom field value",
        "description": "",
        "operationId": "update-a-custom-field-value",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the custom fields value to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountCustomFieldDatum": {
                    "properties": {
                      "fieldValue": {
                        "type": "string",
                        "description": "Values for text"
                      },
                      "fieldCurrency": {
                        "type": "string",
                        "description": "Currency code for the `currency` value",
                        "default": "Default Currency for Field"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "text/textarea/hidden": {
                  "value": {
                    "accountCustomFieldDatum": {
                      "fieldValue": "New title"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountCustomFieldDatum\": {\n        \"id\": \"1\",\n        \"accountId\": 2,\n        \"customFieldId\": 5,\n        \"createdTimestamp\": \"2018-10-29 20:40:38\",\n        \"updatedTimestamp\": \"2018-11-06 02:21:36\",\n        \"fieldValue\": \"New title\",\n        \"links\": {\n            \"account\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/1/account\",\n            \"accountCustomFieldMetum\": \"https://:account.api-us1.com/api/:version/accountCustomFieldData/1/accountCustomFieldMetum\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountCustomFieldDatum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "accountId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "customFieldId": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-29 20:40:38"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-11-06 02:21:36"
                        },
                        "fieldValue": {
                          "type": "string",
                          "example": "New title"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/accountCustomFieldData/1/account"
                            },
                            "accountCustomFieldMetum": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/accountCustomFieldData/1/accountCustomFieldMetum"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a custom field value",
        "description": "",
        "operationId": "delete-a-custom-field-value",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the dealCustomFieldData to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"AccountCustomFieldData deleted.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "AccountCustomFieldData deleted."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts/{id}": {
      "delete": {
        "summary": "Delete an account",
        "description": "Delete an existing account",
        "operationId": "delete-an-account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve an account",
        "description": "Retrieve an existing account",
        "operationId": "retrieve-an-account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account's ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"account\": {\n        \"name\": \"Example Account\",\n        \"accountUrl\": \"https://www.example.com\",\n        \"createdTimestamp\": \"2019-05-15T15:58:16-05:00\",\n        \"updatedTimestamp\": \"2019-05-15T15:58:16-05:00\",\n        \"links\": [],\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "account": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Example Account"
                        },
                        "accountUrl": {
                          "type": "string",
                          "example": "https://www.example.com"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2019-05-15T15:58:16-05:00"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2019-05-15T15:58:16-05:00"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update an account",
        "description": "Update an existing account",
        "operationId": "update-an-account-new",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Account's name"
                      },
                      "accountUrl": {
                        "type": "string",
                        "description": "Account's website"
                      },
                      "fields": {
                        "type": "array",
                        "description": "Account's custom field values `{customFieldId: int, fieldValue: string, fieldCurrency?:string}[]`",
                        "items": {
                          "properties": {
                            "customFieldId": {
                              "type": "integer",
                              "description": "Field ID, ID of the Custom Field Meta Data",
                              "format": "int32"
                            },
                            "fieldValue": {
                              "type": "string",
                              "description": "Updated field value. For `currency` field, this needs to be in cents not dollars (or 100 x Base Unit)."
                            },
                            "fieldCurrency": {
                              "type": "string",
                              "description": "Required only for the `currency` field type. The three letter currency code for the currency value"
                            }
                          },
                          "required": [
                            "customFieldId",
                            "fieldValue"
                          ],
                          "type": "object"
                        }
                      },
                      "owner": {
                        "type": "integer",
                        "description": "The userId of the Account owner.",
                        "default": 1,
                        "format": "int32"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "account": {
                      "name": "Exmaple Account",
                      "accountUrl": "https://www.example.com",
                      "fields": [
                        {
                          "customFieldId": 9,
                          "fieldValue": "500-1000"
                        },
                        {
                          "customFieldId": 20,
                          "fieldValue": 1234,
                          "fieldCurrency": "GBP"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"account\": {\n        \"name\": \"Exmaple Account\",\n        \"accountUrl\": \"https://www.example.com\",\n        \"createdTimestamp\": \"2019-04-03T13:57:31-05:00\",\n        \"updatedTimestamp\": \"2019-06-12T16:55:32-05:00\",\n        \"links\": [],\n        \"fields\": [\n            {\n                \"customFieldId\": 9,\n                \"fieldValue\": \"501 - 1000\",\n                \"accountId\": \"1\"\n            },\n            {\n                \"customFieldId\": 20,\n                \"fieldValue\": 1234,\n              \t\"fieldCurrency\": \"GBP\",\n                \"accountId\": \"1\"\n            }\n        ],\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "account": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Exmaple Account"
                        },
                        "accountUrl": {
                          "type": "string",
                          "example": "https://www.example.com"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2019-04-03T13:57:31-05:00"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2019-06-12T16:55:32-05:00"
                        },
                        "links": {
                          "type": "array"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customFieldId": {
                                "type": "integer",
                                "example": 9,
                                "default": 0
                              },
                              "fieldValue": {
                                "type": "string",
                                "example": "501 - 1000"
                              },
                              "accountId": {
                                "type": "string",
                                "example": "1"
                              }
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountCustomFieldData/bulkCreate": {
      "post": {
        "summary": "Bulk create a custom account field value",
        "description": "",
        "operationId": "bulk-create-a-custom-account-field-value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "array": {
                    "properties": {
                      "customerAccountId": {
                        "type": "integer",
                        "description": "The ID of the account this field value relates to",
                        "format": "int32"
                      },
                      "customFieldId": {
                        "type": "integer",
                        "description": "The ID of the custom field metum this field value relates to",
                        "format": "int32"
                      },
                      "fieldValue": {
                        "type": "string",
                        "description": "Values for the field. (For currency field only, this needs to be in cents: eg, 10050 = 100.5)"
                      },
                      "fieldCurrency": {
                        "type": "string",
                        "description": "Currency code for the money value"
                      }
                    },
                    "required": [
                      "customerAccountId",
                      "customFieldId",
                      "fieldValue"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": [
                    {
                      "accountId": "1",
                      "customFieldId": "1",
                      "fieldValue": "test title"
                    },
                    {
                      "accountId": "1",
                      "customFieldId": "2",
                      "fieldValue": "test title"
                    },
                    {
                      "accountId": "1",
                      "customFieldId": "3",
                      "fieldValue": [
                        "option 1",
                        "option 3",
                        "option 4"
                      ]
                    },
                    {
                      "accountId": "1",
                      "customFieldId": "4",
                      "fieldValue": 9999,
                      "fieldCurrency": "cad"
                    },
                    {
                      "accountId": "1",
                      "customFieldId": "5",
                      "fieldValue": "100.99"
                    },
                    {
                      "accountId": "1",
                      "customFieldId": "6",
                      "fieldValue": "2018-12-31"
                    },
                    {
                      "accountId": "1",
                      "customFieldId": "7",
                      "fieldValue": "2020-05-19T02:45:00-05:00"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"the bulk insert was successful\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "the bulk insert was successful"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountCustomFieldData/bulkUpdate": {
      "patch": {
        "summary": "Bulk update a custom field value",
        "description": "",
        "operationId": "bulk-update-a-custom-account-field-value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "array": {
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "ID of the dealCustomFieldData to update",
                        "format": "int32"
                      },
                      "fieldValue": {
                        "type": "string",
                        "description": "Values for the field. (For currency field only, this needs to be in cents: eg, 10050 = 100.5)"
                      },
                      "fieldCurrency": {
                        "type": "string",
                        "description": "Currency code for the money value"
                      }
                    },
                    "required": [
                      "id",
                      "fieldValue"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": [
                    {
                      "id": "1",
                      "fieldValue": "test title"
                    },
                    {
                      "id": "2",
                      "fieldValue": [
                        "option 1",
                        "option 3",
                        "option 4"
                      ]
                    },
                    {
                      "id": "3",
                      "fieldValue": 9999,
                      "fieldCurrency": "cad"
                    },
                    {
                      "id": "4",
                      "fieldValue": "100.99"
                    },
                    {
                      "id": "5",
                      "fieldValue": "2018-12-31"
                    },
                    {
                      "id": "6",
                      "fieldValue": "2020-05-19T02:45:00-05:00"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"AccountCustomFieldDatas with ID(s): 1, 2, 3, 4, 5 successfully bulk updated.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "AccountCustomFieldDatas with ID(s): 1, 2, 3, 4, 5 successfully bulk updated."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountCustomFieldMeta": {
      "get": {
        "summary": "List all custom fields",
        "description": "",
        "operationId": "list-all-custom-fields-meta",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of fields returned per request.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountCustomFieldMeta\": [\n        {\n            \"id\": \"1\",\n            \"fieldLabel\": \"Text Example\",\n            \"fieldType\": \"text\",\n            \"fieldOptions\": null,\n            \"fieldDefault\": 1,\n            \"fieldDefaultCurrency\": null,\n            \"isFormVisible\": 0,\n            \"isRequired\": 0,\n            \"displayOrder\": 1,\n            \"personalization\": \"\",\n            \"knownFieldId\": null,\n            \"hideFieldFlag\": 0,\n            \"createdTimestamp\": \"2019-04-23 15:34:00\",\n            \"updatedTimestamp\": \"2019-05-03 15:16:51\",\n            \"links\": {\n                \"accountCustomFieldData\": \"https://:account.api-us1.com/api/:version/accountCustomFieldMeta/1/accountCustomFieldData\"\n            }\n        },\n        {\n            \"id\": \"2\",\n            \"fieldLabel\": \"Multiple Choice Example\",\n            \"fieldType\": \"multiselect\",\n            \"fieldOptions\": [\n            \t\"Option 1\",\n            \t\"Option 2\",\n            \t\"Option 3\"\n            ],\n            \"fieldDefault\": 1,\n            \"fieldDefaultCurrency\": null,\n            \"isFormVisible\": 0,\n            \"isRequired\": 0,\n            \"displayOrder\": 2,\n            \"personalization\": \"\",\n            \"knownFieldId\": null,\n            \"hideFieldFlag\": 0,\n            \"createdTimestamp\": \"2019-04-23 15:34:00\",\n            \"updatedTimestamp\": \"2019-05-03 15:16:51\",\n            \"links\": {\n                \"accountCustomFieldData\": \"https://:account.api-us1.com/api/:version/accountCustomFieldMeta/1/accountCustomFieldData\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountCustomFieldMeta": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "fieldLabel": {
                            "type": "string",
                            "example": "Text Example"
                          },
                          "fieldType": {
                            "type": "string",
                            "example": "text"
                          },
                          "fieldOptions": {},
                          "fieldDefault": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "fieldDefaultCurrency": {},
                          "isFormVisible": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "isRequired": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "displayOrder": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "personalization": {
                            "type": "string",
                            "example": ""
                          },
                          "knownFieldId": {},
                          "hideFieldFlag": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2019-04-23 15:34:00"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2019-05-03 15:16:51"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "accountCustomFieldData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/:version/accountCustomFieldMeta/1/accountCustomFieldData"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a custom field",
        "description": "",
        "operationId": "create-a-customfieldmeta",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountCustomFieldMetum": {
                    "properties": {
                      "fieldLabel": {
                        "type": "string",
                        "description": "Name of the field"
                      },
                      "fieldType": {
                        "type": "string",
                        "description": "Type of field. Possible values are: `text`, `textarea`, `date`, `datetime`, `dropdown`, `multiselect`, `radio`, `checkbox`, `hidden`, `currency`, or `number`."
                      },
                      "fieldOptions": {
                        "type": "array",
                        "description": "Options for the field. Only necessary if `field_type` is `dropdown`, `multiselect`, `radio`, or `checkbox`.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fieldDefault": {
                        "type": "string",
                        "description": "Default value of the field"
                      },
                      "fieldDefaultCurrency": {
                        "type": "string",
                        "description": "The 3-letter currency code of the default currency for the field. Only necessary if `field_type` is `currency`."
                      },
                      "isFormVisible": {
                        "type": "boolean",
                        "description": "Whether or not the field is visible on forms"
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "Order for displaying the field on Manage Fields page and deal profiles",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "fieldLabel",
                      "fieldType"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "text": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample text field2",
                      "fieldType": "text",
                      "fieldDefault": "Default Text",
                      "isFormVisible": 1,
                      "displayOrder": 1
                    }
                  }
                },
                "textarea": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample textarea field",
                      "fieldType": "textarea",
                      "fieldDefault": "Default Text in Text Area",
                      "isFormVisible": 1,
                      "displayOrder": 2
                    }
                  }
                },
                "date (ISO ONLY)": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample date field",
                      "fieldType": "date",
                      "fieldDefault": "2018-12-31 00:00:00",
                      "isFormVisible": 1,
                      "displayOrder": 3
                    }
                  }
                },
                "dropdown": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample dropdown field",
                      "fieldType": "dropdown",
                      "fieldDefault": "option 2",
                      "fieldOptions": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "isFormVisible": 1,
                      "displayOrder": 4
                    }
                  }
                },
                "multiselect": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample multiselect field",
                      "fieldType": "multiselect",
                      "fieldDefault": [
                        "option 2",
                        "option 3"
                      ],
                      "fieldOptions": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "isFormVisible": 1,
                      "displayOrder": 5
                    }
                  }
                },
                "radio": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample radio field",
                      "fieldType": "radio",
                      "fieldDefault": "option 2",
                      "fieldOptions": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "isFormVisible": 1,
                      "displayOrder": 6
                    }
                  }
                },
                "checkbox": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample checkbox field",
                      "fieldType": "checkbox",
                      "fieldDefault": [
                        "option 2",
                        "option 3"
                      ],
                      "fieldOptions": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "isFormVisible": 1,
                      "displayOrder": 7
                    }
                  }
                },
                "hidden": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample hidden field",
                      "fieldType": "hidden",
                      "fieldDefault": "Default Text in Hidden Field",
                      "isFormVisible": 1,
                      "displayOrder": 8
                    }
                  }
                },
                "number": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample number field",
                      "fieldType": "number",
                      "fieldDefault": "100.99",
                      "isFormVisible": 1,
                      "displayOrder": 9
                    }
                  }
                },
                "currency": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample money field",
                      "fieldType": "currency",
                      "fieldDefault": "10099",
                      "fieldDefaultCurrency": "aud",
                      "isFormVisible": 1,
                      "displayOrder": 10
                    }
                  }
                },
                "datetime": {
                  "value": {
                    "accountCustomFieldMetum": {
                      "fieldLabel": "sample datetime field",
                      "fieldType": "datetime",
                      "fieldDefault": "2020-05-16T03:15:00-05:00",
                      "isFormVisible": 1,
                      "displayOrder": 3
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountCustomFieldMetum\": {\n        \"id\": \"1\",\n        \"fieldLabel\": \"title\",\n        \"fieldType\": \"text\",\n        \"fieldOptions\": null,\n        \"fieldDefault\": \"Default Text\",\n        \"isFormVisible\": 1,\n        \"isRequired\": 0,\n        \"displayOrder\": 1,\n        \"createdTimestamp\": \"2018-10-22 19:57:37\",\n        \"updatedTimestamp\": \"2018-10-22 19:57:37\",\n        \"links\": {\n            \"accountCustomFieldData\": \"https://:account.api-us1.com/api/:version/3/accountCustomFieldMeta/1/accountCustomFieldData\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountCustomFieldMetum": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "fieldLabel": {
                          "type": "string",
                          "example": "title"
                        },
                        "fieldType": {
                          "type": "string",
                          "example": "text"
                        },
                        "fieldOptions": {},
                        "fieldDefault": {
                          "type": "string",
                          "example": "Default Text"
                        },
                        "isFormVisible": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "isRequired": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "displayOrder": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 19:57:37"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2018-10-22 19:57:37"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "accountCustomFieldData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/:version/3/accountCustomFieldMeta/1/accountCustomFieldData"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"errors\": [\n  \t\"title\": \"The field type field is required.\",\n    \"detail\": \"\",\n    \"code\": 422\n  ]\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts/{id}/notes": {
      "post": {
        "summary": "Create an account note",
        "description": "Create a new note for an account",
        "operationId": "create-an-account-note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account's id to assign new note to",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "properties": {
                      "note": {
                        "type": "string",
                        "description": "Account note's content"
                      }
                    },
                    "required": [
                      "note"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "note": {
                      "note": "Note for the account"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"accounts\": [\n    {\n      \"name\": \"Museuem of Science and Industry\",\n      \"accountUrl\": \"www.msi.com\",\n      \"createdTimestamp\": \"2019-04-03T13:29:35-05:00\",\n      \"updatedTimestamp\": \"2019-06-12T16:59:54-05:00\",\n      \"id\": \"1\"\n    }\n  ],\n  \"note\": {\n    \"cdate\": \"2017-05-31T09:54:30-05:00\",\n    \"id\": \"2\",\n    \"links\": {\n      \"activities\": \"/api/3/notes/2/activities\",\n      \"mentions\": \"/api/3/notes/2/mentions\",\n      \"notes\": \"/api/3/notes/2/notes\",\n      \"owner\": \"/api/3/notes/2/owner\",\n      \"user\": \"/api/3/notes/2/user\"\n    },\n    \"mdate\": \"2017-05-31T09:54:30-05:00\",\n    \"note\": \"Note for the account\",\n    \"owner\": {\n      \"id\": \"1\",\n      \"type\": \"account\"\n    },\n    \"relid\": \"1\",\n    \"reltype\": \"CustomerAccount\",\n    \"user\": \"1\",\n    \"userid\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Museuem of Science and Industry"
                          },
                          "accountUrl": {
                            "type": "string",
                            "example": "www.msi.com"
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2019-04-03T13:29:35-05:00"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2019-06-12T16:59:54-05:00"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "note": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2017-05-31T09:54:30-05:00"
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "activities": {
                              "type": "string",
                              "example": "/api/3/notes/2/activities"
                            },
                            "mentions": {
                              "type": "string",
                              "example": "/api/3/notes/2/mentions"
                            },
                            "notes": {
                              "type": "string",
                              "example": "/api/3/notes/2/notes"
                            },
                            "owner": {
                              "type": "string",
                              "example": "/api/3/notes/2/owner"
                            },
                            "user": {
                              "type": "string",
                              "example": "/api/3/notes/2/user"
                            }
                          }
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2017-05-31T09:54:30-05:00"
                        },
                        "note": {
                          "type": "string",
                          "example": "Note for the account"
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "1"
                            },
                            "type": {
                              "type": "string",
                              "example": "account"
                            }
                          }
                        },
                        "relid": {
                          "type": "string",
                          "example": "1"
                        },
                        "reltype": {
                          "type": "string",
                          "example": "CustomerAccount"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts/{id}/notes/{noteid}": {
      "put": {
        "summary": "Update an account note",
        "description": "Update an existing note for a account",
        "operationId": "update-a-account-note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account's id to assign new note to",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "noteid",
            "in": "path",
            "description": "Account note's id to update",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "properties": {
                      "note": {
                        "type": "string",
                        "description": "Account note's content"
                      }
                    },
                    "required": [
                      "note"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "note": {
                      "note": "Update with more info"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"accounts\": [\n    {\n      \"name\": \"Example Account\",\n      \"accountUrl\": \"https://www.example.url\",\n      \"createdTimestamp\": \"2019-04-03T13:29:35-05:00\",\n      \"updatedTimestamp\": \"2019-06-12T16:59:54-05:00\",\n      \"links\": {\n        \"notes\": \"https://hosted.localdev/api/3/accounts/1/notes\"\n      },\n      \"id\": \"1\"\n    }\n  ],\n  \"note\": {\n    \"cdate\": \"2017-06-01T13:42:13-05:00\",\n    \"id\": \"2\",\n    \"links\": {\n      \"activities\": \"/api/3/notes/2/activities\",\n      \"mentions\": \"/api/3/notes/2/mentions\",\n      \"notes\": \"/api/3/notes/2/notes\",\n      \"owner\": \"/api/3/notes/2/owner\",\n      \"user\": \"/api/3/notes/2/user\"\n    },\n    \"mdate\": \"2017-06-01T13:42:13-05:00\",\n    \"note\": \"Update with more info\",\n    \"owner\": {\n      \"id\": \"1\",\n      \"type\": \"account\"\n    },\n    \"relid\": \"1\",\n    \"reltype\": \"CustomerAccount\",\n    \"user\": \"1\",\n    \"userid\": \"1\"\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Example Account"
                          },
                          "accountUrl": {
                            "type": "string",
                            "example": "https://www.example.url"
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2019-04-03T13:29:35-05:00"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2019-06-12T16:59:54-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "notes": {
                                "type": "string",
                                "example": "https://hosted.localdev/api/3/accounts/1/notes"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "note": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2017-06-01T13:42:13-05:00"
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "activities": {
                              "type": "string",
                              "example": "/api/3/notes/2/activities"
                            },
                            "mentions": {
                              "type": "string",
                              "example": "/api/3/notes/2/mentions"
                            },
                            "notes": {
                              "type": "string",
                              "example": "/api/3/notes/2/notes"
                            },
                            "owner": {
                              "type": "string",
                              "example": "/api/3/notes/2/owner"
                            },
                            "user": {
                              "type": "string",
                              "example": "/api/3/notes/2/user"
                            }
                          }
                        },
                        "mdate": {
                          "type": "string",
                          "example": "2017-06-01T13:42:13-05:00"
                        },
                        "note": {
                          "type": "string",
                          "example": "Update with more info"
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "1"
                            },
                            "type": {
                              "type": "string",
                              "example": "account"
                            }
                          }
                        },
                        "relid": {
                          "type": "string",
                          "example": "1"
                        },
                        "reltype": {
                          "type": "string",
                          "example": "CustomerAccount"
                        },
                        "user": {
                          "type": "string",
                          "example": "1"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts/bulk_delete": {
      "delete": {
        "summary": "Bulk delete accounts",
        "description": "Delete an existing account",
        "operationId": "bulk-delete-accounts",
        "parameters": [
          {
            "name": "[]ids",
            "in": "query",
            "description": "An integer id of the account to be deleted",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"meta\": {\n        \"success\": true\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountContacts": {
      "get": {
        "summary": "List all associations",
        "description": "Retrieve all existing account association",
        "operationId": "list-all-associations-1",
        "parameters": [
          {
            "name": "filters[contact]",
            "in": "query",
            "description": "Filter by Contact ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filters[account]",
            "in": "query",
            "description": "Filter by Account ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountContacts\": [\n        {\n            \"account\": \"2\",\n            \"contact\": \"3\",\n            \"jobTitle\": \"Product Manager\",\n            \"createdTimestamp\": \"2019-06-26T10:49:10-05:00\",\n            \"updatedTimestamp\": \"2019-06-26T10:49:10-05:00\",\n            \"links\": {\n                \"account\": \"http://hosted.localdev/api/3/accountContacts/17/account\",\n                \"contact\": \"http://hosted.localdev/api/3/accountContacts/17/contact\"\n            },\n            \"id\": \"17\"\n        },\n        {\n            \"account\": \"2\",\n            \"contact\": \"1\",\n            \"jobTitle\": \"Product Manager\",\n            \"createdTimestamp\": \"2019-06-26T11:26:09-05:00\",\n            \"updatedTimestamp\": \"2019-06-26T11:26:09-05:00\",\n            \"links\": {\n                \"account\": \"http://hosted.localdev/api/3/accountContacts/18/account\",\n                \"contact\": \"http://hosted.localdev/api/3/accountContacts/18/contact\"\n            },\n            \"id\": \"18\"\n        },\n        {\n            \"account\": \"3\",\n            \"contact\": \"2\",\n            \"jobTitle\": \"Product Manager\",\n            \"createdTimestamp\": \"2019-06-26T11:26:15-05:00\",\n            \"updatedTimestamp\": \"2019-06-26T11:26:15-05:00\",\n            \"links\": {\n                \"account\": \"http://hosted.localdev/api/3/accountContacts/19/account\",\n                \"contact\": \"http://hosted.localdev/api/3/accountContacts/19/contact\"\n            },\n            \"id\": \"19\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"3\",\n        \"queryLog\": {\n            \"queries\": [\n                {\n                    \"stmt\": \"SELECT  COUNT(DISTINCT t.id) AS `__count` FROM em_customer_account_subscriber t   WHERE 1\",\n                    \"time\": 0.3669261932373\n                },\n                {\n                    \"stmt\": \"SELECT  t.* FROM em_customer_account_subscriber t   WHERE 1 LIMIT 0, 20\",\n                    \"time\": 0.17809867858887\n                }\n            ],\n            \"by_time\": [\n                {\n                    \"stmt\": \"SELECT  COUNT(DISTINCT t.id) AS `__count` FROM em_customer_account_subscriber t   WHERE 1\",\n                    \"time\": 0.3669261932373\n                },\n                {\n                    \"stmt\": \"SELECT  t.* FROM em_customer_account_subscriber t   WHERE 1 LIMIT 0, 20\",\n                    \"time\": 0.17809867858887\n                }\n            ],\n            \"total\": 0.54502487182617,\n            \"mode\": \"read/write\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountContacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "account": {
                            "type": "string",
                            "example": "2"
                          },
                          "contact": {
                            "type": "string",
                            "example": "3"
                          },
                          "jobTitle": {
                            "type": "string",
                            "example": "Product Manager"
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2019-06-26T10:49:10-05:00"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2019-06-26T10:49:10-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "string",
                                "example": "http://hosted.localdev/api/3/accountContacts/17/account"
                              },
                              "contact": {
                                "type": "string",
                                "example": "http://hosted.localdev/api/3/accountContacts/17/contact"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "17"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "3"
                        },
                        "queryLog": {
                          "type": "object",
                          "properties": {
                            "queries": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "stmt": {
                                    "type": "string",
                                    "example": "SELECT  COUNT(DISTINCT t.id) AS `__count` FROM em_customer_account_subscriber t   WHERE 1"
                                  },
                                  "time": {
                                    "type": "number",
                                    "example": 0.3669261932373,
                                    "default": 0
                                  }
                                }
                              }
                            },
                            "by_time": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "stmt": {
                                    "type": "string",
                                    "example": "SELECT  COUNT(DISTINCT t.id) AS `__count` FROM em_customer_account_subscriber t   WHERE 1"
                                  },
                                  "time": {
                                    "type": "number",
                                    "example": 0.3669261932373,
                                    "default": 0
                                  }
                                }
                              }
                            },
                            "total": {
                              "type": "number",
                              "example": 0.54502487182617,
                              "default": 0
                            },
                            "mode": {
                              "type": "string",
                              "example": "read/write"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create an association",
        "description": "Create a new account association",
        "operationId": "create-an-account-1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountContact": {
                    "properties": {
                      "account": {
                        "type": "integer",
                        "description": "Account ID",
                        "format": "int32"
                      },
                      "contact": {
                        "type": "integer",
                        "description": "Contact ID",
                        "format": "int32"
                      },
                      "jobTitle": {
                        "type": "string",
                        "description": "Job Title of the contact at the account"
                      }
                    },
                    "required": [
                      "account",
                      "contact"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "accountContact": {
                      "contact": 2,
                      "account": 1,
                      "jobTitle": "Product Manager"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountContact\": {\n        \"account\": 2,\n        \"contact\": 1,\n        \"jobTitle\": \"Product Manager\",\n        \"createdTimestamp\": \"2019-06-26T10:49:10-05:00\",\n        \"updatedTimestamp\": \"2019-06-26T10:49:10-05:00\",\n        \"links\": {\n            \"account\": \"http://hosted.localdev/api/3/accountContacts/2/account\",\n            \"contact\": \"http://hosted.localdev/api/3/accountContacts/1/contact\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountContact": {
                      "type": "object",
                      "properties": {
                        "account": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "contact": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "jobTitle": {
                          "type": "string",
                          "example": "Product Manager"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2019-06-26T10:49:10-05:00"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2019-06-26T10:49:10-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/accountContacts/2/account"
                            },
                            "contact": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/accountContacts/1/contact"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Missing Data": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The account attribute was not provided\",\n            \"detail\": \"\",\n            \"code\": \"field_missing\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/account\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The account attribute was not provided"
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_missing"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/account"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Alredy Existing": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"This contact is already associated with an account. We currently do not support contacts on multiple accounts.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/account,contact\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "This contact is already associated with an account. We currently do not support contacts on multiple accounts."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_invalid"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/account,contact"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountContacts/{id}": {
      "delete": {
        "summary": "Delete an association",
        "description": "Delete an existing account association",
        "operationId": "delete-an-association-1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Association's ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for CustomerAccountSubscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for CustomerAccountSubscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Retrieve an association",
        "description": "Retrieve an existing account association",
        "operationId": "retrieve-an-association",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Association's ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountContact\": {\n        \"account\": \"2\",\n        \"contact\": \"1\",\n        \"jobTitle\": \"Product Manager\",\n        \"createdTimestamp\": \"2019-06-26T11:26:09-05:00\",\n        \"updatedTimestamp\": \"2019-06-26T11:26:09-05:00\",\n        \"links\": {\n            \"account\": \"http://hosted.localdev/api/3/accountContacts/18/account\",\n            \"contact\": \"http://hosted.localdev/api/3/accountContacts/18/contact\"\n        },\n        \"id\": \"18\"\n    },\n    \"meta\": {\n        \"queryLog\": {\n            \"queries\": [\n                {\n                    \"stmt\": \"SELECT  * FROM em_customer_account_subscriber t   WHERE 1 AND id = '18' LIMIT 0, 1\",\n                    \"time\": 0.31304359436035\n                }\n            ],\n            \"by_time\": [\n                {\n                    \"stmt\": \"SELECT  * FROM em_customer_account_subscriber t   WHERE 1 AND id = '18' LIMIT 0, 1\",\n                    \"time\": 0.31304359436035\n                }\n            ],\n            \"total\": 0.31304359436035,\n            \"mode\": \"read/write\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountContact": {
                      "type": "object",
                      "properties": {
                        "account": {
                          "type": "string",
                          "example": "2"
                        },
                        "contact": {
                          "type": "string",
                          "example": "1"
                        },
                        "jobTitle": {
                          "type": "string",
                          "example": "Product Manager"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2019-06-26T11:26:09-05:00"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2019-06-26T11:26:09-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/accountContacts/18/account"
                            },
                            "contact": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/accountContacts/18/contact"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "18"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "queryLog": {
                          "type": "object",
                          "properties": {
                            "queries": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "stmt": {
                                    "type": "string",
                                    "example": "SELECT  * FROM em_customer_account_subscriber t   WHERE 1 AND id = '18' LIMIT 0, 1"
                                  },
                                  "time": {
                                    "type": "number",
                                    "example": 0.31304359436035,
                                    "default": 0
                                  }
                                }
                              }
                            },
                            "by_time": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "stmt": {
                                    "type": "string",
                                    "example": "SELECT  * FROM em_customer_account_subscriber t   WHERE 1 AND id = '18' LIMIT 0, 1"
                                  },
                                  "time": {
                                    "type": "number",
                                    "example": 0.31304359436035,
                                    "default": 0
                                  }
                                }
                              }
                            },
                            "total": {
                              "type": "number",
                              "example": 0.31304359436035,
                              "default": 0
                            },
                            "mode": {
                              "type": "string",
                              "example": "read/write"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for CustomerAccountSubscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for CustomerAccountSubscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update an association",
        "description": "Update an existing account association",
        "operationId": "update-an-association-1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Association's ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountContact": {
                    "properties": {
                      "account": {
                        "type": "integer",
                        "description": "Account ID",
                        "format": "int32"
                      },
                      "contact": {
                        "type": "integer",
                        "description": "Contact ID",
                        "format": "int32"
                      },
                      "jobTitle": {
                        "type": "string",
                        "description": "Job Title of the contact at the account"
                      }
                    },
                    "required": [
                      "account",
                      "contact"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "accountContact": {
                      "jobTitle": "Product Manager"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountContact\": {\n        \"account\": \"3\",\n        \"contact\": \"2\",\n        \"jobTitle\": \"CEO\",\n        \"createdTimestamp\": \"2019-06-26T11:26:15-05:00\",\n        \"updatedTimestamp\": \"2019-06-26T11:29:57-05:00\",\n        \"links\": {\n            \"account\": \"http://hosted.localdev/api/3/accountContacts/19/account\",\n            \"contact\": \"http://hosted.localdev/api/3/accountContacts/19/contact\"\n        },\n        \"id\": \"19\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountContact": {
                      "type": "object",
                      "properties": {
                        "account": {
                          "type": "string",
                          "example": "3"
                        },
                        "contact": {
                          "type": "string",
                          "example": "2"
                        },
                        "jobTitle": {
                          "type": "string",
                          "example": "CEO"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2019-06-26T11:26:15-05:00"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2019-06-26T11:29:57-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/accountContacts/19/account"
                            },
                            "contact": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/accountContacts/19/contact"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "19"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ecomOrderProducts": {
      "get": {
        "summary": "List EcomOrderProducts",
        "description": "",
        "operationId": "list-ecomorderproducts",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"ecomOrderProducts\": [\n        {\n            \"orderid\": \"1\",\n            \"connectionid\": \"1\",\n            \"externalid\": \"1269385775\",\n            \"sku\": \"SKATE-8\",\n            \"name\": \"My Cool Skateboard\",\n            \"description\": \"This skateboard is so cool, it rides itself\",\n            \"price\": \"5000\",\n            \"quantity\": \"1\",\n            \"category\": \"skateboards\",\n            \"imageUrl\": \"https://example.com/images/skateboard.jpg\",\n            \"productUrl\": \"http://example.com/products/skate-8\",\n            \"createdDate\": \"2019-06-28T18:04:19-05:00\",\n            \"updatedDate\": \"2019-06-28T18:04:19-05:00\",\n            \"tstamp\": \"2019-06-28T18:04:19-05:00\",\n            \"links\": {\n                \"ecomOrder\": \"https://commissiontheatre.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder\"\n            },\n            \"id\": \"1\",\n            \"ecomOrder\": \"2\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomOrderProducts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderid": {
                            "type": "string",
                            "example": "1"
                          },
                          "connectionid": {
                            "type": "string",
                            "example": "1"
                          },
                          "externalid": {
                            "type": "string",
                            "example": "1269385775"
                          },
                          "sku": {
                            "type": "string",
                            "example": "SKATE-8"
                          },
                          "name": {
                            "type": "string",
                            "example": "My Cool Skateboard"
                          },
                          "description": {
                            "type": "string",
                            "example": "This skateboard is so cool, it rides itself"
                          },
                          "price": {
                            "type": "string",
                            "example": "5000"
                          },
                          "quantity": {
                            "type": "string",
                            "example": "1"
                          },
                          "category": {
                            "type": "string",
                            "example": "skateboards"
                          },
                          "imageUrl": {
                            "type": "string",
                            "example": "https://example.com/images/skateboard.jpg"
                          },
                          "productUrl": {
                            "type": "string",
                            "example": "http://example.com/products/skate-8"
                          },
                          "createdDate": {
                            "type": "string",
                            "example": "2019-06-28T18:04:19-05:00"
                          },
                          "updatedDate": {
                            "type": "string",
                            "example": "2019-06-28T18:04:19-05:00"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "2019-06-28T18:04:19-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "ecomOrder": {
                                "type": "string",
                                "example": "https://commissiontheatre.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "ecomOrder": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ecomOrders/{id}/orderProducts": {
      "get": {
        "summary": "List EcomOrderProducts for a Specific EcomOrder",
        "description": "",
        "operationId": "list-products-for-order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order whose products you'd like returned.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"ecomOrderProducts\": [\n        {\n            \"orderid\": \"1\",\n            \"connectionid\": \"1\",\n            \"externalid\": \"1269385775\",\n            \"sku\": \"SKATE-8\",\n            \"name\": \"My Cool Skateboard\",\n            \"description\": \"This skateboard is so cool, it rides itself\",\n            \"price\": \"5000\",\n            \"quantity\": \"1\",\n            \"category\": \"skateboards\",\n            \"imageUrl\": \"https://example.com/images/skateboard.jpg\",\n            \"productUrl\": \"http://example.com/products/skate-8\",\n            \"createdDate\": \"2019-06-28T18:04:19-05:00\",\n            \"updatedDate\": \"2019-06-28T18:04:19-05:00\",\n            \"tstamp\": \"2019-06-28T18:04:19-05:00\",\n            \"links\": {\n                \"ecomOrder\": \"https://commissiontheatre.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder\"\n            },\n            \"id\": \"1\",\n            \"ecomOrder\": \"2\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomOrderProducts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderid": {
                            "type": "string",
                            "example": "1"
                          },
                          "connectionid": {
                            "type": "string",
                            "example": "1"
                          },
                          "externalid": {
                            "type": "string",
                            "example": "1269385775"
                          },
                          "sku": {
                            "type": "string",
                            "example": "SKATE-8"
                          },
                          "name": {
                            "type": "string",
                            "example": "My Cool Skateboard"
                          },
                          "description": {
                            "type": "string",
                            "example": "This skateboard is so cool, it rides itself"
                          },
                          "price": {
                            "type": "string",
                            "example": "5000"
                          },
                          "quantity": {
                            "type": "string",
                            "example": "1"
                          },
                          "category": {
                            "type": "string",
                            "example": "skateboards"
                          },
                          "imageUrl": {
                            "type": "string",
                            "example": "https://example.com/images/skateboard.jpg"
                          },
                          "productUrl": {
                            "type": "string",
                            "example": "http://example.com/products/skate-8"
                          },
                          "createdDate": {
                            "type": "string",
                            "example": "2019-06-28T18:04:19-05:00"
                          },
                          "updatedDate": {
                            "type": "string",
                            "example": "2019-06-28T18:04:19-05:00"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "2019-06-28T18:04:19-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "ecomOrder": {
                                "type": "string",
                                "example": "https://commissiontheatre.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "ecomOrder": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ecomOrderProducts/{id}": {
      "get": {
        "summary": "Retrieve an EcomOrderProduct",
        "description": "",
        "operationId": "retrieve-an-ecomorderproduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product you'd like returned.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"ecomOrderProduct\": {\n        \"orderid\": \"1\",\n        \"connectionid\": \"1\",\n        \"externalid\": \"1269385775\",\n        \"sku\": \"SKATE-8\",\n        \"name\": \"My Cool Skateboard\",\n        \"description\": \"This skateboard is so cool, it rides itself\",\n        \"price\": \"5000\",\n        \"quantity\": \"1\",\n        \"category\": \"skateboards\",\n        \"imageUrl\": \"https://example.com/images/skateboard.jpg\",\n        \"productUrl\": \"http://example.com/products/skate-8\",\n        \"createdDate\": \"2019-06-28T18:04:19-05:00\",\n        \"updatedDate\": \"2019-06-28T18:04:19-05:00\",\n        \"tstamp\": \"2019-06-28T18:04:19-05:00\",\n        \"links\": {\n            \"ecomOrder\": \"https://commissiontheatre.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder\"\n        },\n        \"id\": \"1\",\n        \"ecomOrder\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomOrderProduct": {
                      "type": "object",
                      "properties": {
                        "orderid": {
                          "type": "string",
                          "example": "1"
                        },
                        "connectionid": {
                          "type": "string",
                          "example": "1"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "1269385775"
                        },
                        "sku": {
                          "type": "string",
                          "example": "SKATE-8"
                        },
                        "name": {
                          "type": "string",
                          "example": "My Cool Skateboard"
                        },
                        "description": {
                          "type": "string",
                          "example": "This skateboard is so cool, it rides itself"
                        },
                        "price": {
                          "type": "string",
                          "example": "5000"
                        },
                        "quantity": {
                          "type": "string",
                          "example": "1"
                        },
                        "category": {
                          "type": "string",
                          "example": "skateboards"
                        },
                        "imageUrl": {
                          "type": "string",
                          "example": "https://example.com/images/skateboard.jpg"
                        },
                        "productUrl": {
                          "type": "string",
                          "example": "http://example.com/products/skate-8"
                        },
                        "createdDate": {
                          "type": "string",
                          "example": "2019-06-28T18:04:19-05:00"
                        },
                        "updatedDate": {
                          "type": "string",
                          "example": "2019-06-28T18:04:19-05:00"
                        },
                        "tstamp": {
                          "type": "string",
                          "example": "2019-06-28T18:04:19-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "ecomOrder": {
                              "type": "string",
                              "example": "https://commissiontheatre.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "ecomOrder": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for EcomOrderProduct with id {the id requested}\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for EcomOrderProduct with id {the id requested}"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ecomOrders/{id}": {
      "put": {
        "summary": "Update an order",
        "description": "Update an existing ecommerce order/cart resource.",
        "operationId": "update-order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the order to update",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ecomOrder": {
                    "properties": {
                      "externalid": {
                        "type": "string",
                        "description": "The id of the order in the external service. ONLY REQUIRED IF EXTERNALCHECKOUTID NOT INCLUDED."
                      },
                      "externalcheckoutid": {
                        "type": "string",
                        "description": "The id of the cart in the external service. ONLY REQUIRED IF EXTERNALID IS NOT INCLUDED."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address of the customer who placed the order."
                      },
                      "orderProducts": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the product"
                          },
                          "price": {
                            "type": "integer",
                            "description": "The price of the product, in cents. (i.e. $456.78 => 45678). Must be greater than or equal to zero.",
                            "format": "int32"
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity ordered.",
                            "format": "int32"
                          },
                          "externalid": {
                            "type": "string",
                            "description": "The id of the product in the external service."
                          },
                          "category": {
                            "type": "string",
                            "description": "The category of the product."
                          },
                          "sku": {
                            "type": "string",
                            "description": "The SKU for the product"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the product"
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "An Image URL that displays an image of the product"
                          },
                          "productUrl": {
                            "type": "string",
                            "description": "A URL linking to the product in your store"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "totalPrice": {
                        "type": "integer",
                        "description": "The total price of the order in cents, including tax and shipping charges. (i.e. $456.78 => 45678). Must be greater than or equal to zero.",
                        "format": "int32"
                      },
                      "shippingAmount": {
                        "type": "integer",
                        "description": "The total shipping amount in cents for the order",
                        "format": "int32"
                      },
                      "taxAmount": {
                        "type": "integer",
                        "description": "The total tax amount for the order in cents",
                        "format": "int32"
                      },
                      "discountAmount": {
                        "type": "integer",
                        "description": "The total discount amount for the order in cents",
                        "format": "int32"
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency of the order (3-digit ISO code, e.g., 'USD')."
                      },
                      "orderUrl": {
                        "type": "string",
                        "description": "The URL for the order in the external service."
                      },
                      "externalUpdatedDate": {
                        "type": "string",
                        "description": "The date the order was updated."
                      },
                      "abandonedDate": {
                        "type": "string",
                        "description": "The date the cart was abandoned. REQUIRED ONLY IF INCLUDING EXTERNALCHECKOUTID."
                      },
                      "shippingMethod": {
                        "type": "string",
                        "description": "The shipping method of the order."
                      },
                      "orderNumber": {
                        "type": "string",
                        "description": "The order number in your system. This can be different than the external ID."
                      },
                      "orderDiscounts": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The discount code or name of the discount"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of discount, either 'order' for discount on the order, or 'shipping' for free shipping."
                          },
                          "discountAmount": {
                            "type": "string",
                            "description": "The amount of the discount in cents."
                          }
                        },
                        "required": [],
                        "type": "object"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "ecomOrder": {
                      "externalid": "3246315237",
                      "email": "alice@example.com",
                      "orderProducts": [
                        {
                          "externalid": "PROD12345",
                          "name": "Pogo Stick",
                          "price": 4900,
                          "quantity": 1,
                          "category": "Toys",
                          "sku": "POGO-12",
                          "description": "lorem ipsum...",
                          "imageUrl": "https://example.com/product.jpg",
                          "productUrl": "https://store.example.com/product12345"
                        },
                        {
                          "externalid": "PROD23456",
                          "name": "Skateboard",
                          "price": 3000,
                          "quantity": 1,
                          "category": "Toys",
                          "sku": "SK8BOARD145",
                          "description": "lorem ipsum...",
                          "imageUrl": "https://example.com/product.jpg",
                          "productUrl": "https://store.example.com/product45678"
                        }
                      ],
                      "orderDiscounts": [
                        {
                          "name": "1OFF",
                          "type": "order",
                          "discountAmount": 100
                        }
                      ],
                      "externalUpdatedDate": "2016-09-15T17:41:39-04:00",
                      "shippingMethod": "UPS Ground",
                      "totalPrice": 9111,
                      "shippingAmount": 200,
                      "taxAmount": 500,
                      "discountAmount": 100,
                      "currency": "USD",
                      "orderNumber": "12345-1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"ecomOrderProducts\": [\n        {\n            \"orderid\": \"1\",\n            \"connectionid\": \"1\",\n            \"externalid\": \"PROD12345\",\n            \"sku\": \"POGO-12\",\n            \"name\": \"Pogo Stick\",\n            \"description\": \"lorem ipsum...\",\n            \"price\": \"4900\",\n            \"quantity\": \"1\",\n            \"category\": \"Toys\",\n            \"imageUrl\": \"https://example.com/product.jpg\",\n            \"productUrl\": \"https://store.example.com/product12345\",\n            \"createdDate\": \"2019-09-05T13:55:37-05:00\",\n            \"updatedDate\": \"2019-09-05T13:55:37-05:00\",\n            \"tstamp\": \"2019-09-05T13:55:37-05:00\",\n            \"links\": {\n                \"ecomOrder\": \"https://youraccounthere.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder\"\n            },\n            \"id\": \"3\",\n            \"ecomOrder\": \"1\"\n        },\n        {\n            \"orderid\": \"1\",\n            \"connectionid\": \"1\",\n            \"externalid\": \"PROD23456\",\n            \"sku\": \"SK8BOARD145\",\n            \"name\": \"Skateboard\",\n            \"description\": \"lorem ipsum...\",\n            \"price\": \"3000\",\n            \"quantity\": \"1\",\n            \"category\": \"Toys\",\n            \"imageUrl\": \"https://example.com/product.jpg\",\n            \"productUrl\": \"https://store.example.com/product45678\",\n            \"createdDate\": \"2019-09-05T13:55:37-05:00\",\n            \"updatedDate\": \"2019-09-05T13:55:37-05:00\",\n            \"tstamp\": \"2019-09-05T13:55:37-05:00\",\n            \"links\": {\n                \"ecomOrder\": \"https://youraccounthere.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder\"\n            },\n            \"id\": \"4\",\n            \"ecomOrder\": \"1\"\n        }\n    ],\n    \"ecomOrderDiscounts\": [\n        {\n            \"name\": \"1OFF\",\n            \"type\": \"order\",\n            \"orderid\": \"5355\",\n            \"discountAmount\": \"100\",\n            \"id\": \"1\",\n            \"createdDate\": \"2019-09-05T12:16:18-05:00\",\n            \"updatedDate\": \"2019-09-05T12:16:18-05:00\"\n        }\n    ],\n    \"ecomOrder\": {\n        \"customerid\": \"1\",\n        \"connectionid\": \"1\",\n        \"state\": \"1\",\n        \"source\": \"1\",\n        \"externalid\": \"3246315237\",\n        \"orderNumber\": \"\",\n        \"email\": \"alice@example.com\",\n        \"totalPrice\": 9111,\n        \"discountAmount\": 100,\n        \"shippingAmount\": 200,\n        \"taxAmount\": 500,\n        \"totalProducts\": 2,\n        \"currency\": \"USD\",\n        \"shippingMethod\": \"UPS Ground\",\n        \"orderUrl\": \"https://example.com/orders/3246315233\",\n        \"externalCreatedDate\": \"2016-09-13T16:41:39-05:00\",\n        \"externalUpdatedDate\": \"2016-09-15T16:41:39-05:00\",\n        \"createdDate\": \"2019-09-05T12:52:13-05:00\",\n        \"updatedDate\": \"2019-09-05T13:55:37-05:00\",\n        \"orderProducts\": [\n            \"3\",\n            \"4\"\n        ],\n        \"orderDiscounts\": [\n            \"1\"\n        ],\n        \"customer\": \"1\",\n        \"orderDate\": \"2016-09-13T16:41:39-05:00\",\n        \"tstamp\": \"2019-09-05T13:55:37-05:00\",\n        \"links\": {\n            \"connection\": \"https://youraccounthere.api-us1.com/api/3/ecomOrders/1/connection\",\n            \"customer\": \"https://youraccounthere.api-us1.com/api/3/ecomOrders/1/customer\",\n            \"orderProducts\": \"https://youraccounthere.api-us1.com/api/3/ecomOrders/1/orderProducts\",\n            \"orderDiscounts\": \"https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderDiscounts\",\n            \"orderActivities\": \"https://youraccounthere.api-us1.com/api/3/ecomOrders/1/orderActivities\"\n        },\n        \"id\": \"1\",\n        \"connection\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "ecomOrderProducts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderid": {
                            "type": "string",
                            "example": "1"
                          },
                          "connectionid": {
                            "type": "string",
                            "example": "1"
                          },
                          "externalid": {
                            "type": "string",
                            "example": "PROD12345"
                          },
                          "sku": {
                            "type": "string",
                            "example": "POGO-12"
                          },
                          "name": {
                            "type": "string",
                            "example": "Pogo Stick"
                          },
                          "description": {
                            "type": "string",
                            "example": "lorem ipsum..."
                          },
                          "price": {
                            "type": "string",
                            "example": "4900"
                          },
                          "quantity": {
                            "type": "string",
                            "example": "1"
                          },
                          "category": {
                            "type": "string",
                            "example": "Toys"
                          },
                          "imageUrl": {
                            "type": "string",
                            "example": "https://example.com/product.jpg"
                          },
                          "productUrl": {
                            "type": "string",
                            "example": "https://store.example.com/product12345"
                          },
                          "createdDate": {
                            "type": "string",
                            "example": "2019-09-05T13:55:37-05:00"
                          },
                          "updatedDate": {
                            "type": "string",
                            "example": "2019-09-05T13:55:37-05:00"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "2019-09-05T13:55:37-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "ecomOrder": {
                                "type": "string",
                                "example": "https://youraccounthere.api-us1.com/api/3/ecomOrderProducts/1/ecomOrder"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "3"
                          },
                          "ecomOrder": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "ecomOrderDiscounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "1OFF"
                          },
                          "type": {
                            "type": "string",
                            "example": "order"
                          },
                          "orderid": {
                            "type": "string",
                            "example": "5355"
                          },
                          "discountAmount": {
                            "type": "string",
                            "example": "100"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "createdDate": {
                            "type": "string",
                            "example": "2019-09-05T12:16:18-05:00"
                          },
                          "updatedDate": {
                            "type": "string",
                            "example": "2019-09-05T12:16:18-05:00"
                          }
                        }
                      }
                    },
                    "ecomOrder": {
                      "type": "object",
                      "properties": {
                        "customerid": {
                          "type": "string",
                          "example": "1"
                        },
                        "connectionid": {
                          "type": "string",
                          "example": "1"
                        },
                        "state": {
                          "type": "string",
                          "example": "1"
                        },
                        "source": {
                          "type": "string",
                          "example": "1"
                        },
                        "externalid": {
                          "type": "string",
                          "example": "3246315237"
                        },
                        "orderNumber": {
                          "type": "string",
                          "example": ""
                        },
                        "email": {
                          "type": "string",
                          "example": "alice@example.com"
                        },
                        "totalPrice": {
                          "type": "integer",
                          "example": 9111,
                          "default": 0
                        },
                        "discountAmount": {
                          "type": "integer",
                          "example": 100,
                          "default": 0
                        },
                        "shippingAmount": {
                          "type": "integer",
                          "example": 200,
                          "default": 0
                        },
                        "taxAmount": {
                          "type": "integer",
                          "example": 500,
                          "default": 0
                        },
                        "totalProducts": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "currency": {
                          "type": "string",
                          "example": "USD"
                        },
                        "shippingMethod": {
                          "type": "string",
                          "example": "UPS Ground"
                        },
                        "orderUrl": {
                          "type": "string",
                          "example": "https://example.com/orders/3246315233"
                        },
                        "externalCreatedDate": {
                          "type": "string",
                          "example": "2016-09-13T16:41:39-05:00"
                        },
                        "externalUpdatedDate": {
                          "type": "string",
                          "example": "2016-09-15T16:41:39-05:00"
                        },
                        "createdDate": {
                          "type": "string",
                          "example": "2019-09-05T12:52:13-05:00"
                        },
                        "updatedDate": {
                          "type": "string",
                          "example": "2019-09-05T13:55:37-05:00"
                        },
                        "orderProducts": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "3"
                          }
                        },
                        "orderDiscounts": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "1"
                          }
                        },
                        "customer": {
                          "type": "string",
                          "example": "1"
                        },
                        "orderDate": {
                          "type": "string",
                          "example": "2016-09-13T16:41:39-05:00"
                        },
                        "tstamp": {
                          "type": "string",
                          "example": "2019-09-05T13:55:37-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "connection": {
                              "type": "string",
                              "example": "https://youraccounthere.api-us1.com/api/3/ecomOrders/1/connection"
                            },
                            "customer": {
                              "type": "string",
                              "example": "https://youraccounthere.api-us1.com/api/3/ecomOrders/1/customer"
                            },
                            "orderProducts": {
                              "type": "string",
                              "example": "https://youraccounthere.api-us1.com/api/3/ecomOrders/1/orderProducts"
                            },
                            "orderDiscounts": {
                              "type": "string",
                              "example": "https://exampleaccount.api-us1.com/api/3/ecomOrders/1/orderDiscounts"
                            },
                            "orderActivities": {
                              "type": "string",
                              "example": "https://youraccounthere.api-us1.com/api/3/ecomOrders/1/orderActivities"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "connection": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contact/sync": {
      "post": {
        "summary": "Sync a contact's data",
        "description": "",
        "operationId": "sync-a-contacts-data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact": {
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address of the contact to sync"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "fieldValues": {
                        "type": "array",
                        "description": "Contact's custom field values [{field, value}]"
                      },
                      "orgid": {
                        "type": "integer",
                        "description": "(Deprecated) Please use Account-Contact end points",
                        "format": "int32"
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "(Deprecated) Please use the DELETE endpoint"
                      }
                    },
                    "required": [
                      "email"
                    ],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "contact": {
                      "email": "jondoe@example.com",
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "7223224241",
                      "fieldValues": [
                        {
                          "field": "1",
                          "value": "The Value for First Field"
                        },
                        {
                          "field": "6",
                          "value": "2008-01-20"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldValues\": [\n        {\n            \"contact\": \"10\",\n            \"field\": \"2\",\n            \"value\": \"Albany\",\n            \"cdate\": \"2022-04-14T10:03:23-05:00\",\n            \"udate\": \"2022-04-14T10:03:23-05:00\",\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/14/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/14/field\"\n            },\n            \"id\": \"14\",\n            \"owner\": \"10\"\n        },\n        {\n            \"contact\": \"10\",\n            \"field\": \"3\",\n            \"value\": \"Georgia\",\n            \"cdate\": \"2022-04-14T10:03:23-05:00\",\n            \"udate\": \"2022-04-14T10:03:23-05:00\",\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/15/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/15/field\"\n            },\n            \"id\": \"15\",\n            \"owner\": \"10\"\n        }\n    ],\n    \"contact\": {\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"7223224241\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email_empty\": false,\n        \"cdate\": \"2022-04-14T10:03:23-05:00\",\n        \"udate\": \"2022-04-14T10:03:23-05:00\",\n        \"orgid\": \"\",\n        \"orgname\": \"\",\n        \"links\": {\n            \"bounceLogs\": \"https://:account.api-us1.com/api/3/contacts/10/bounceLogs\",\n            \"contactAutomations\": \"https://:account.api-us1.com/api/3/contacts/10/contactAutomations?limit=1000&orders%5Blastdate%5D=DESC\",\n            \"contactData\": \"https://:account.api-us1.com/api/3/contacts/10/contactData\",\n            \"contactGoals\": \"https://:account.api-us1.com/api/3/contacts/10/contactGoals\",\n            \"contactLists\": \"https://:account.api-us1.com/api/3/contacts/10/contactLists\",\n            \"contactLogs\": \"https://:account.api-us1.com/api/3/contacts/10/contactLogs\",\n            \"contactTags\": \"https://:account.api-us1.com/api/3/contacts/10/contactTags\",\n            \"contactDeals\": \"https://:account.api-us1.com/api/3/contacts/10/contactDeals\",\n            \"deals\": \"https://:account.api-us1.com/api/3/contacts/10/deals\",\n            \"fieldValues\": \"https://:account.api-us1.com/api/3/contacts/10/fieldValues\",\n            \"geoIps\": \"https://:account.api-us1.com/api/3/contacts/10/geoIps\",\n            \"notes\": \"https://:account.api-us1.com/api/3/contacts/10/notes\",\n            \"organization\": \"https://:account.api-us1.com/api/3/contacts/10/organization\",\n            \"plusAppend\": \"https://:account.api-us1.com/api/3/contacts/10/plusAppend\",\n            \"trackingLogs\": \"https://:account.api-us1.com/api/3/contacts/10/trackingLogs\",\n            \"scoreValues\": \"https://:account.api-us1.com/api/3/contacts/10/scoreValues\",\n            \"accountContacts\": \"https://:account.api-us1.com/api/3/contacts/10/accountContacts\",\n            \"automationEntryCounts\": \"https://:account.api-us1.com/api/3/contacts/10/automationEntryCounts\"\n        },\n        \"hash\": \"75b8163f768dff1f0f7b5f69476b986a\",\n        \"fieldValues\": [\n            \"14\",\n            \"15\"\n        ],\n        \"id\": \"10\",\n        \"organization\": \"\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldValues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "10"
                          },
                          "field": {
                            "type": "string",
                            "example": "2"
                          },
                          "value": {
                            "type": "string",
                            "example": "Albany"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2022-04-14T10:03:23-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2022-04-14T10:03:23-05:00"
                          },
                          "created_by": {},
                          "updated_by": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/14/owner"
                              },
                              "field": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/14/field"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "14"
                          },
                          "owner": {
                            "type": "string",
                            "example": "10"
                          }
                        }
                      }
                    },
                    "contact": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "johndoe@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "7223224241"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "email_empty": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "cdate": {
                          "type": "string",
                          "example": "2022-04-14T10:03:23-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2022-04-14T10:03:23-05:00"
                        },
                        "orgid": {
                          "type": "string",
                          "example": ""
                        },
                        "orgname": {
                          "type": "string",
                          "example": ""
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "bounceLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/bounceLogs"
                            },
                            "contactAutomations": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/contactAutomations?limit=1000&orders%5Blastdate%5D=DESC"
                            },
                            "contactData": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/contactData"
                            },
                            "contactGoals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/contactGoals"
                            },
                            "contactLists": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/contactLists"
                            },
                            "contactLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/contactLogs"
                            },
                            "contactTags": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/contactTags"
                            },
                            "contactDeals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/contactDeals"
                            },
                            "deals": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/deals"
                            },
                            "fieldValues": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/fieldValues"
                            },
                            "geoIps": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/geoIps"
                            },
                            "notes": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/notes"
                            },
                            "organization": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/organization"
                            },
                            "plusAppend": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/plusAppend"
                            },
                            "trackingLogs": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/trackingLogs"
                            },
                            "scoreValues": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/scoreValues"
                            },
                            "accountContacts": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/accountContacts"
                            },
                            "automationEntryCounts": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/contacts/10/automationEntryCounts"
                            }
                          }
                        },
                        "hash": {
                          "type": "string",
                          "example": "75b8163f768dff1f0f7b5f69476b986a"
                        },
                        "fieldValues": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "14"
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "10"
                        },
                        "organization": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/import/bulk_import": {
      "post": {
        "summary": "Bulk import contacts",
        "description": "",
        "operationId": "bulk-import-contacts",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Api-Token",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "contacts"
                ],
                "properties": {
                  "contacts": {
                    "type": "array",
                    "description": "An array of objects containing information about a single contact. Up to 250 contacts may be included in a single request. The suggested minimum number of contacts is 10. If less than that, then contact/sync api request should be used.",
                    "items": {
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "The contact's email."
                        },
                        "first_name": {
                          "type": "string",
                          "description": "The contact's first name"
                        },
                        "last_name": {
                          "type": "string",
                          "description": "The contact's last name."
                        },
                        "phone": {
                          "type": "string",
                          "description": "The contact’s phone number."
                        },
                        "customer_acct_name": {
                          "type": "string",
                          "description": "The name of the contact’s account."
                        },
                        "tags": {
                          "type": "array",
                          "description": "Each string in the array will be added as a single tag to the contact. New tags will be created if they do not already exist.",
                          "default": [],
                          "items": {
                            "type": "string"
                          }
                        },
                        "fields": {
                          "type": "array",
                          "description": "A list of custom fields to apply to the contact. Each field must contain two fields: Each contact may have up to N custom fields.",
                          "items": {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The ID of the custom field. Custom fields must be referenced by the ID that ActiveCampaign assigns to them. You can retrieve the ID number for a custom field by using the \"List all custom fields\" API call.",
                                "format": "int32"
                              },
                              "value": {
                                "type": "string",
                                "description": "The value of the custom field. Multiple values may be populated for multi-value fields by separating the different values by the double-pipe delimiter (“||”)."
                              }
                            },
                            "required": [
                              "id",
                              "value"
                            ],
                            "type": "object"
                          }
                        },
                        "subscribe": {
                          "type": "array",
                          "description": "An array of lists to subscribe the contact to. Contacts may not be subscribed to lists which they have previously unsubscribed from. Each list object contains a single field.",
                          "items": {
                            "properties": {
                              "listid": {
                                "type": "string",
                                "description": "The ID of the list to subscribe the contact to or unsubscribe the contact from. Lists must be referenced by the ID that ActiveCampaign assigns to them.  You can find the list ID by clicking the list in your ActiveCampaign account then viewing the URL bar. It will look something like this: /app/contacts/?listid=19&status=1  You can also retrieve the ID number for a list by using the \"Retrieve all lists\" API call."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "unsubscribe": {
                          "type": "array",
                          "description": "An array of lists to unsubscribe the contact to. Each list object contains a single field.",
                          "items": {
                            "properties": {
                              "listid": {
                                "type": "string",
                                "description": "The ID of the list to subscribe the contact to or unsubscribe the contact from. Lists must be referenced by the ID that ActiveCampaign assigns to them.  You can find the list ID by clicking the list in your ActiveCampaign account then viewing the URL bar. It will look something like this: /app/contacts/?listid=19&status=1  You can also retrieve the ID number for a list by using the \"Retrieve all lists\" API call."
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "email"
                      ],
                      "type": "object"
                    }
                  },
                  "callback": {
                    "type": "object",
                    "description": "Callback function to notify users when an import is complete.",
                    "required": [
                      "url",
                      "requestType"
                    ],
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "The URL endpoint which the importer will make a request to once the import has completed."
                      },
                      "requestType": {
                        "type": "string",
                        "description": "Can be set to either “GET” or “POST”. Determines the type of HTTP request which will be sent to the specified endpoint.",
                        "default": "POST"
                      },
                      "detailed_results": {
                        "type": "string",
                        "description": "When set to “true” and the requestType parameter is set to “POST”, the callback will include the number of successes and failures in the originating request, as well as an array of error messages for each failed contact.",
                        "default": "true"
                      },
                      "params": {
                        "type": "array",
                        "description": "A list of parameters to include in the callback request. Add each parameter in the form of a key-value pair. For a GET request, each parameter will be appended to the end of the URL in a query string. For a POST request, parameters will be included in the body of the request.",
                        "items": {
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "headers": {
                        "type": "array",
                        "description": "A list of headers to include in the callback request. Add each header in the form of a key-value pair.",
                        "items": {
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "contacts": [
                      {
                        "email": "someone@somewhere.com",
                        "first_name": "Jane",
                        "last_name": "Doe",
                        "phone": "123-456-7890",
                        "customer_acct_name": "ActiveCampaign",
                        "exclude_automations": false,
                        "tags": [
                          "dictumst",
                          "aliquam",
                          "augue quam",
                          "sollicitudin rutrum"
                        ],
                        "fields": [
                          {
                            "id": 1,
                            "value": "foo"
                          },
                          {
                            "id": 2,
                            "value": "||foo||bar||baz||"
                          }
                        ],
                        "subscribe": [
                          {
                            "listid": 1
                          },
                          {
                            "listid": 2
                          }
                        ],
                        "unsubscribe": [
                          {
                            "listid": 3
                          }
                        ]
                      }
                    ],
                    "callback": {
                      "url": "www.your_web_server.com",
                      "requestType": "POST",
                      "detailed_results": "true",
                      "params": [
                        {
                          "key": "",
                          "value": ""
                        }
                      ],
                      "headers": [
                        {
                          "key": "",
                          "value": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n   \"Success\":1,\n   \"queued_contacts\":1,\n   \"batchId\":\"0641fbdd-f62f-4c2c-ba02-3a83d5d11ac9\",\n   \"message\":\"Contact import queued\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "queued_contacts": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "batchId": {
                      "type": "string",
                      "example": "0641fbdd-f62f-4c2c-ba02-3a83d5d11ac9"
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact import queued"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Contact Create Fail": {
                    "value": "{\n\t\"success\": 0,\n\t\"message\": \"JSON payload did not pass validation. Please fix failure Reasons and retry. The import was not queued for processing.\",\n\t\"failureReasons\": [{\n\t\t\"contact\": 230,\n\t\t\"failureReason\": \"Field‘ email’ incorrect format\"\n\t}]\n}"
                  },
                  "Other Error": {
                    "value": "{\n\t\"success\": 0,\n\t\"message\": \"Rate limit exceeded.\",\n\t\"failureReasons\": [\"Up to 100 imports may be requested per minute.Please batch contacts into larger requests, or retry this request in a minute.\"]\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "title": "Contact Create Fail",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "message": {
                          "type": "string",
                          "example": "JSON payload did not pass validation. Please fix failure Reasons and retry. The import was not queued for processing."
                        },
                        "failureReasons": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "contact": {
                                "type": "integer",
                                "example": 230,
                                "default": 0
                              },
                              "failureReason": {
                                "type": "string",
                                "example": "Field‘ email’ incorrect format"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Other Error",
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "message": {
                          "type": "string",
                          "example": "Rate limit exceeded."
                        },
                        "failureReasons": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Up to 100 imports may be requested per minute.Please batch contacts into larger requests, or retry this request in a minute."
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Bulk import status list",
        "description": "",
        "operationId": "bulk-import-status-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"outstanding\":[\n    {\"forDate\":\"2021-06-01\",\"batches\":\"333\",\"contacts\":\"83250\"}\n  ],\n  \"recentlyCompleted\":[\n    {\"forDate\":\"2021-06-01\",\"batches\":\"17\",\"contacts\":\"4250\"},\n    {\"forDate\":\"2021-06-02\",\"batches\":\"50\",\"contacts\":\"12500\"}\n  ]\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/activities": {
      "get": {
        "summary": "List all contact activities",
        "description": "View a contact's recent activity. The activity is generated when a contact is retrieved via /api/3/contacts/[contactID]. This endpoint should be used after retrieving a contact to obtain the latest data. This is useful for searching for contacts that match certain criteria - such as being part of a certain list, or having a specific custom field value.",
        "operationId": "list-contact-activities",
        "parameters": [
          {
            "name": "contact",
            "in": "query",
            "description": "Required Contact ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter for activities after a specific DateTime",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Activities to include: notes, notes.user, recipients, recipients.recipient, reference, reference.automation, reference.campaign, reference.campaign.campaignList, reference.campaign.campaignMessage, reference.campaignMessage, reference.contact, reference.contactList, reference.contactList.list, reference.deal, reference.deal.contact, reference.dealTasktype, reference.link, reference.list, reference.log, reference.log.campaign, reference.log.contact, reference.log.message, reference.message, reference.note, reference.sms, reference.sms.automation, user",
            "schema": {
              "type": "string",
              "default": "activities to include"
            }
          },
          {
            "name": "emails",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "orders[tstamp]",
            "in": "query",
            "description": "Order activities by tstamp",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\tcontacts: [{\n    cdate: \"2018-02-13T13:25:54-06:00\",\n    email: \"test@example.com\",\n    firstName: \"Test\",\n    lastName: \"Contact\",\n    created_timestamp: \"2019-11-13 16:18:00\",\n    updated_timestamp: \"2021-04-06 11:25:59\",\n    id: \"4\"\n  }],\n  activityRecipients: [{\n    reltype: \"Subscriber\",\n    relid: \"4\",\n    activityid: \"865\",\n    recipient: {\n    type: \"contact\",\n    id: \"4\"\n  }],\n\tactivities: [{\n    tstamp: \"2019-01-03T12:16:19-06:00\",\n    subscriberid: \"4\",\n    reference_type: \"SubscriberEmail\",\n    reference_id: \"13\",\n    reference_action: \"\",\n    jsonData: null,\n    userid: \"1\",\n    permission: \"\",\n    referenceModelName: \"contact-email\",\n    notes: [ ],\n    recipients: [\n\t    \"1496\"\n    ],\n    reference: {\n    type: \"contact-email\",\n    id: \"13\"\n    },\n    user: \"1\",\n    id: \"865\"\n  }],\n\tmeta: {\n\t\ttotal: \"1\"\n\t}\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/schemas": {
      "get": {
        "summary": "List all schemas",
        "description": "Retrieve all schemas available within an account.\n\nUsers are encouraged to leverage the `?showFields=all` query parameter when programmatically creating new schema fields, to ensure field id uniqueness. Fields that have been deleted will contain a `status: marked_for_deletion` attribute.",
        "operationId": "list-all-schemas",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of schemas to retrieve for each API call. Maximum value is 100.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index of items to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "orders",
            "in": "query",
            "description": "Array of sorting criteria to fetch items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Filters schemas by different criteria",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showFields",
            "in": "query",
            "description": "Toggle which fields are shown in the response body of a schema (if there hidden due to e.g. recently being deleted). Omit this parameter entirely to hide fields by default.",
            "schema": {
              "type": "string",
              "default": "all"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"schemas\": [\n    {\n      \"id\": \"6449c3f3-b68d-46d1-850b-c8aea998ce1b\",\n      \"slug\": \"my-object\",\n      \"visibility\": \"private\",\n      \"labels\": {\n        \"singular\": \"My Object\",\n        \"plural\": \"My Objects\"\n      },\n      \"description\": \"Sample Schema\",\n      \"createdTimestamp\": \"2021-04-16T15:08:25.783751329Z\",\n      \"updatedTimestamp\": \"2021-04-16T15:08:25.783751329Z\",\n      \"fields\": [\n        {\n          \"id\": \"my-number-field\",\n          \"labels\": {\n            \"singular\": \"Number\",\n            \"plural\": \"Numbers\"\n          },\n          \"type\": \"number\",\n          \"required\": false,\n          \"scale\": 0\n        }\n      ],\n      \"icons\": {\n        \"default\": \"https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png\"\n      },\n      \"relationships\": [\n        {\n          \"id\": \"primary-contact\",\n          \"labels\": {\n            \"singular\": \"Primary Contact\",\n            \"plural\": \"Primary Contacts\"\n          },\n          \"description\": \"Primary contact to this object\",\n          \"namespace\": \"contacts\",\n          \"hasMany\": false\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"total\": 1,\n    \"count\": 1,\n    \"limit\": 20,\n    \"offset\": 0\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "schemas": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "6449c3f3-b68d-46d1-850b-c8aea998ce1b"
                          },
                          "slug": {
                            "type": "string",
                            "example": "my-object"
                          },
                          "visibility": {
                            "type": "string",
                            "example": "private"
                          },
                          "labels": {
                            "type": "object",
                            "properties": {
                              "singular": {
                                "type": "string",
                                "example": "My Object"
                              },
                              "plural": {
                                "type": "string",
                                "example": "My Objects"
                              }
                            }
                          },
                          "description": {
                            "type": "string",
                            "example": "Sample Schema"
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2021-04-16T15:08:25.783751329Z"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2021-04-16T15:08:25.783751329Z"
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "my-number-field"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {
                                    "singular": {
                                      "type": "string",
                                      "example": "Number"
                                    },
                                    "plural": {
                                      "type": "string",
                                      "example": "Numbers"
                                    }
                                  }
                                },
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                },
                                "required": {
                                  "type": "boolean",
                                  "example": false,
                                  "default": true
                                },
                                "scale": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                }
                              }
                            }
                          },
                          "icons": {
                            "type": "object",
                            "properties": {
                              "default": {
                                "type": "string",
                                "example": "https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png"
                              }
                            }
                          },
                          "relationships": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "primary-contact"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {
                                    "singular": {
                                      "type": "string",
                                      "example": "Primary Contact"
                                    },
                                    "plural": {
                                      "type": "string",
                                      "example": "Primary Contacts"
                                    }
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Primary contact to this object"
                                },
                                "namespace": {
                                  "type": "string",
                                  "example": "contacts"
                                },
                                "hasMany": {
                                  "type": "boolean",
                                  "example": false,
                                  "default": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "count": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "limit": {
                          "type": "integer",
                          "example": 20,
                          "default": 0
                        },
                        "offset": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a schema",
        "description": "",
        "operationId": "create-a-schema",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema": {
                    "properties": {
                      "slug": {
                        "type": "string"
                      },
                      "labels": {
                        "properties": {
                          "singular": {
                            "type": "string",
                            "description": "Singular label for Schema"
                          },
                          "plural": {
                            "type": "string",
                            "description": "Plural label for Schema"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the Schema"
                      },
                      "fields": {
                        "type": "array",
                        "description": "List of Schema fields",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {
                                "singular": {
                                  "type": "string",
                                  "description": "human-readable singular name"
                                },
                                "plural": {
                                  "type": "string",
                                  "description": "human-readable plural name"
                                }
                              }
                            },
                            "type": {
                              "type": "string"
                            },
                            "scale": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {
                                "singular": {
                                  "type": "string",
                                  "description": "human-readable singular name"
                                },
                                "plural": {
                                  "type": "string",
                                  "description": "human-readable plural name"
                                }
                              }
                            },
                            "description": {
                              "type": "string"
                            },
                            "namespace": {
                              "type": "string"
                            },
                            "hasMany": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "A single field with a relationship to the contact": {
                  "value": {
                    "schema": {
                      "slug": "my-object",
                      "labels": {
                        "singular": "My Object",
                        "plural": "My Objects"
                      },
                      "description": "Sample Schema",
                      "fields": [
                        {
                          "id": "my-number-field",
                          "labels": {
                            "singular": "Number",
                            "plural": "Numbers"
                          },
                          "type": "number",
                          "required": false,
                          "scale": 0
                        }
                      ],
                      "relationships": [
                        {
                          "id": "primary-contact",
                          "labels": {
                            "singular": "Primary Contact",
                            "plural": "Primary Contacts"
                          },
                          "description": "Primary contact to this object",
                          "namespace": "contacts",
                          "hasMany": false
                        }
                      ]
                    }
                  }
                },
                "A single field with a relationship to an account": {
                  "value": {
                    "schema": {
                      "slug": "my-object",
                      "labels": {
                        "singular": "My Object",
                        "plural": "My Objects"
                      },
                      "description": "Sample Schema",
                      "fields": [
                        {
                          "id": "my-number-field",
                          "labels": {
                            "singular": "Number",
                            "plural": "Numbers"
                          },
                          "type": "number",
                          "required": false,
                          "scale": 0
                        }
                      ],
                      "relationships": [
                        {
                          "id": "account",
                          "labels": {
                            "singular": "Account",
                            "plural": "Accounts"
                          },
                          "description": "Accounts related to this object",
                          "namespace": "accounts",
                          "hasMany": false
                        }
                      ]
                    }
                  }
                },
                "A single field with a relationship to a deal": {
                  "value": {
                    "schema": {
                      "slug": "my-object",
                      "labels": {
                        "singular": "My Object",
                        "plural": "My Objects"
                      },
                      "description": "Sample Schema",
                      "fields": [
                        {
                          "id": "my-number-field",
                          "labels": {
                            "singular": "Number",
                            "plural": "Numbers"
                          },
                          "type": "number",
                          "required": false,
                          "scale": 0
                        }
                      ],
                      "relationships": [
                        {
                          "id": "deal",
                          "labels": {
                            "singular": "Deal",
                            "plural": "Deals"
                          },
                          "description": "Deals related to this object",
                          "namespace": "deals",
                          "hasMany": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"schema\": {\n        \"id\": \"2123028c-64e6-40e2-97bc-9d63a2ca920b\",\n        \"slug\": \"my-object\",\n        \"visibility\": \"private\",\n        \"labels\": {\n            \"singular\": \"My Object\",\n            \"plural\": \"My Objects\"\n        },\n        \"description\": \"Sample Schema\",\n        \"createdTimestamp\": \"2021-03-19T18:23:17.153996399Z\",\n        \"updatedTimestamp\": \"2021-03-19T18:23:17.153996399Z\",\n        \"fields\": [{\n            \"id\": \"my-number-field\",\n            \"labels\": {\n                \"singular\": \"Number\",\n                \"plural\": \"Numbers\"\n            },\n            \"type\": \"number\",\n            \"required\": false,\n            \"scale\": 0\n        }],\n        \"icons\": {\n            \"default\": \"https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png\"\n        },\n        \"relationships\": [{\n            \"id\": \"primary-contact\",\n            \"labels\": {\n                \"singular\": \"Primary Contact\",\n                \"plural\": \"Primary Contacts\"\n            },\n            \"description\": \"Primary contact to this object\",\n            \"namespace\": \"contacts\",\n            \"hasMany\": false\n        }]\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "2123028c-64e6-40e2-97bc-9d63a2ca920b"
                        },
                        "slug": {
                          "type": "string",
                          "example": "my-object"
                        },
                        "visibility": {
                          "type": "string",
                          "example": "private"
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "singular": {
                              "type": "string",
                              "example": "My Object"
                            },
                            "plural": {
                              "type": "string",
                              "example": "My Objects"
                            }
                          }
                        },
                        "description": {
                          "type": "string",
                          "example": "Sample Schema"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2021-03-19T18:23:17.153996399Z"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2021-03-19T18:23:17.153996399Z"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "my-number-field"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Number"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Numbers"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "example": "number"
                              },
                              "required": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              },
                              "scale": {
                                "type": "integer",
                                "example": 0,
                                "default": 0
                              }
                            }
                          }
                        },
                        "icons": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string",
                              "example": "https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png"
                            }
                          }
                        },
                        "relationships": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "primary-contact"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Primary Contact"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Primary Contacts"
                                  }
                                }
                              },
                              "description": {
                                "type": "string",
                                "example": "Primary contact to this object"
                              },
                              "namespace": {
                                "type": "string",
                                "example": "contacts"
                              },
                              "hasMany": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "invalid field value": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Invalid value for field \\\"schema.fields.labels\\\"\",\n      \"detail\": \"Schema fields must provide labels\",\n      \"source\": {\n        \"type\": \"pointer\",\n        \"value\": \"/data/attributes/schema/fields/labels\"\n      }\n    }\n  ]\n}"
                  },
                  "slug conflict": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"Invalid value for field \\\"schema.slug\\\"\",\n            \"detail\": \"Schema slug must be unique\",\n            \"source\": {\n                \"type\": \"pointer\",\n                \"value\": \"/data/attributes/schema/slug\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "title": "invalid field value",
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Invalid value for field \"schema.fields.labels\""
                              },
                              "detail": {
                                "type": "string",
                                "example": "Schema fields must provide labels"
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "pointer"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "/data/attributes/schema/fields/labels"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "slug conflict",
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Invalid value for field \"schema.slug\""
                              },
                              "detail": {
                                "type": "string",
                                "example": "Schema slug must be unique"
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "pointer"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "/data/attributes/schema/slug"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/schemas/{id}": {
      "get": {
        "summary": "Retrieve a schema",
        "description": "Retrieve a specific schema by id.\n\nUsers are encouraged to leverage the `?showFields=all` query parameter when programmatically creating new schema fields, to ensure field id uniqueness. Fields that have been deleted will contain a `status: marked_for_deletion` attribute.",
        "operationId": "retrieve-a-schema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the Schema",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "showFields",
            "in": "query",
            "description": "Toggle which fields are shown in the response body of a schema (if there hidden due to e.g. recently being deleted). Omit this parameter entirely to hide fields by default.",
            "schema": {
              "type": "string",
              "default": "all"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"schema\": {\n    \"id\": \"6449c3f3-b68d-46d1-850b-c8aea998ce1b\",\n    \"slug\": \"my-object\",\n    \"visibility\": \"private\",\n    \"labels\": {\n      \"singular\": \"My Object\",\n      \"plural\": \"My Objects\"\n    },\n    \"description\": \"Sample Schema\",\n    \"createdTimestamp\": \"2021-04-16T15:08:25.783751329Z\",\n    \"updatedTimestamp\": \"2021-04-16T15:08:25.783751329Z\",\n    \"fields\": [\n      {\n        \"id\": \"my-number-field\",\n        \"labels\": {\n          \"singular\": \"Number\",\n          \"plural\": \"Numbers\"\n        },\n        \"type\": \"number\",\n        \"required\": false,\n        \"scale\": 0\n      }\n    ],\n    \"icons\": {\n      \"default\": \"https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png\"\n    },\n    \"relationships\": [\n      {\n        \"id\": \"primary-contact\",\n        \"labels\": {\n          \"singular\": \"Primary Contact\",\n          \"plural\": \"Primary Contacts\"\n        },\n        \"description\": \"Primary contact to this object\",\n        \"namespace\": \"contacts\",\n        \"hasMany\": false\n      }\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "6449c3f3-b68d-46d1-850b-c8aea998ce1b"
                        },
                        "slug": {
                          "type": "string",
                          "example": "my-object"
                        },
                        "visibility": {
                          "type": "string",
                          "example": "private"
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "singular": {
                              "type": "string",
                              "example": "My Object"
                            },
                            "plural": {
                              "type": "string",
                              "example": "My Objects"
                            }
                          }
                        },
                        "description": {
                          "type": "string",
                          "example": "Sample Schema"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2021-04-16T15:08:25.783751329Z"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2021-04-16T15:08:25.783751329Z"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "my-number-field"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Number"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Numbers"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "example": "number"
                              },
                              "required": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              },
                              "scale": {
                                "type": "integer",
                                "example": 0,
                                "default": 0
                              }
                            }
                          }
                        },
                        "icons": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string",
                              "example": "https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png"
                            }
                          }
                        },
                        "relationships": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "primary-contact"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Primary Contact"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Primary Contacts"
                                  }
                                }
                              },
                              "description": {
                                "type": "string",
                                "example": "Primary contact to this object"
                              },
                              "namespace": {
                                "type": "string",
                                "example": "contacts"
                              },
                              "hasMany": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"Not Found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a schema",
        "description": "",
        "operationId": "delete-a-schema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of schema to delete",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"Not Found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/schemas/{schemaId}": {
      "put": {
        "summary": "Update a schema",
        "description": "Make an update to a given schema.\n\nTo delete a schema field, reference the field delete endpoint: https://developers.activecampaign.com/reference/delete-a-field-1\n\nUsers are encouraged to leverage the `?showFields=all` query parameter when programmatically creating new schema fields, to ensure field id uniqueness. Fields that have been deleted will contain a `status: marked_for_deletion` attribute.",
        "operationId": "update-a-schema",
        "parameters": [
          {
            "name": "schemaId",
            "in": "path",
            "description": "Id of Schema being updated",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "validateOnly",
            "in": "header",
            "description": "When set to `true` the API will validate the schema update without saving changes",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "showFields",
            "in": "query",
            "description": "Toggle which fields are shown in the response body of a schema (if there hidden due to e.g. recently being deleted). Omit this parameter entirely to hide fields by default.",
            "schema": {
              "type": "string",
              "default": "all"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema": {
                    "properties": {
                      "slug": {
                        "type": "string"
                      },
                      "labels": {
                        "properties": {
                          "singular": {
                            "type": "string",
                            "description": "Singular label for Schema"
                          },
                          "plural": {
                            "type": "string",
                            "description": "Plural label for Schema"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "description": {
                        "type": "string",
                        "description": "Text description of the Schema"
                      },
                      "appId": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "id of the field"
                            },
                            "value": {
                              "type": "string",
                              "description": "Data type, appropriate for the field"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "icons": {
                        "properties": {
                          "default": {
                            "type": "string",
                            "description": "URI location of the default icon shown on Schema"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "labels": {
                            "type": "object",
                            "properties": {
                              "singular": {
                                "type": "string",
                                "description": "human-readable singular name"
                              },
                              "plural": {
                                "type": "string",
                                "description": "human-readable plural name"
                              }
                            }
                          },
                          "description": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          },
                          "hasMany": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "schema": {
                      "slug": "stripe-order",
                      "labels": {
                        "singular": "Stripe Order",
                        "plural": "Stripe Orders"
                      },
                      "description": "Orders placed through the Stripe integration",
                      "appId": "123456",
                      "fields": [
                        {
                          "id": "name",
                          "labels": {
                            "singular": "Product Name",
                            "plural": "Product Name"
                          },
                          "description": "Name of the product from the Stripe integration",
                          "isRequired": true,
                          "origin": "stripe",
                          "type": "text"
                        },
                        {
                          "id": "total",
                          "labels": {
                            "singular": "Order Total",
                            "plural": "Order Totals"
                          },
                          "description": "Total cost of the order",
                          "isRequired": true,
                          "origin": "stripe",
                          "type": "currency",
                          "defaultCurrency": "USD"
                        },
                        {
                          "id": "status",
                          "labels": {
                            "singular": "Order Status",
                            "plural": "Order Statuses"
                          },
                          "description": "Status of the order",
                          "isRequired": true,
                          "origin": "stripe",
                          "type": "dropdown",
                          "options": [
                            {
                              "value": "Processed"
                            }
                          ]
                        },
                        {
                          "id": "features",
                          "labels": {
                            "singular": "Order Feature",
                            "plural": "Order Features"
                          },
                          "description": "Extra features for the order",
                          "isRequired": true,
                          "origin": "stripe",
                          "type": "multiselect",
                          "options": [
                            {
                              "value": "Expedited Shipping"
                            }
                          ]
                        },
                        {
                          "id": "rating",
                          "labels": {
                            "singular": "Order Rating",
                            "plural": "Order Ratings"
                          },
                          "description": "Customer satisfaction rating",
                          "isRequired": true,
                          "origin": "stripe",
                          "type": "decimal",
                          "scale": 2
                        }
                      ],
                      "icons": {
                        "default": "https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png"
                      },
                      "relationships": [
                        {
                          "id": "primary-contact",
                          "labels": {
                            "singular": "Primary Contact",
                            "plural": "Primary Contacts"
                          },
                          "description": "Products purchased in this Stripe order",
                          "namespace": "contacts",
                          "hasMany": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"schema\": {\n    \"id\": \"schema-9999-9999\",\n    \"slug\": \"stripe-order\",\n    \"labels\": {\n      \"singular\": \"Stripe Order\",\n      \"plural\": \"Stripe Orders\"\n    },\n    \"description\": \"Orders placed through the Stripe integration\",\n    \"appId\": \"123456\",\n    \"fields\": [\n      {\n        \"id\": \"name\",\n        \"labels\": {\n          \"singular\": \"Product Name\",\n          \"plural\": \"Product Name\"\n        },\n        \"description\": \"Name of the product from the Stripe integration\",\n        \"isRequired\": true,\n        \"origin\": \"stripe\",\n        \"type\": \"text\"\n      },\n      {\n        \"id\": \"total\",\n        \"labels\": {\n          \"singular\": \"Order Total\",\n          \"plural\": \"Order Totals\"\n        },\n        \"description\": \"Total cost of the order\",\n        \"isRequired\": true,\n        \"origin\": \"stripe\",\n        \"type\": \"currency\",\n        \"defaultCurrency\": \"USD\"\n      },\n      {\n        \"id\": \"status\",\n        \"labels\": {\n          \"singular\": \"Order Status\",\n          \"plural\": \"Order Statuses\"\n        },\n        \"description\": \"Status of the order\",\n        \"isRequired\": true,\n        \"origin\": \"stripe\",\n        \"type\": \"dropdown\",\n        \"options\": [\n          {\n            \"id\": \"264d3b73-069e-4ca1-b270-dbfa3137b541\",\n            \"value\": \"Processed\"\n          }\n        ]\n      },\n      {\n        \"id\": \"features\",\n        \"labels\": {\n          \"singular\": \"Order Feature\",\n          \"plural\": \"Order Features\"\n        },\n        \"description\": \"Extra features for the order\",\n        \"isRequired\": true,\n        \"origin\": \"stripe\",\n        \"type\": \"multiselect\",\n        \"options\": [\n          {\n            \"id\": \"041ef416-a85b-678f-4a15-5dd481dad123\",\n            \"value\": \"Expedited Shipping\"\n          }\n        ]\n      },\n      {\n        \"id\": \"rating\",\n        \"labels\": {\n          \"singular\": \"Order Rating\",\n          \"plural\": \"Order Ratings\"\n        },\n        \"description\": \"Customer satisfaction rating\",\n        \"isRequired\": true,\n        \"origin\": \"stripe\",\n        \"type\": \"decimal\",\n        \"scale\": 2\n      }\n    ],\n    \"icons\": {\n      \"default\": \"https://activehosted.com/temp-placeholder.svg\"\n    },\n    \"relationships\": [\n      {\n        \"id\": \"primary-contact\",\n        \"labels\": {\n          \"singular\": \"Primary Contact\",\n          \"plural\": \"Primary Contacts\"\n        },\n        \"description\": \"Products purchased in this Stripe order\",\n        \"namespace\": \"contacts\",\n        \"hasMany\": false\n      }\n    ],\n    \"createdTimestamp\": \"2021-04-13T21:12:53.390Z\",\n    \"updatedTimestamp\": \"2021-04-13T21:12:53.390Z\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "schema-9999-9999"
                        },
                        "slug": {
                          "type": "string",
                          "example": "stripe-order"
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "singular": {
                              "type": "string",
                              "example": "Stripe Order"
                            },
                            "plural": {
                              "type": "string",
                              "example": "Stripe Orders"
                            }
                          }
                        },
                        "description": {
                          "type": "string",
                          "example": "Orders placed through the Stripe integration"
                        },
                        "appId": {
                          "type": "string",
                          "example": "123456"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "name"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Product Name"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Product Name"
                                  }
                                }
                              },
                              "description": {
                                "type": "string",
                                "example": "Name of the product from the Stripe integration"
                              },
                              "isRequired": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "origin": {
                                "type": "string",
                                "example": "stripe"
                              },
                              "type": {
                                "type": "string",
                                "example": "text"
                              }
                            }
                          }
                        },
                        "icons": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string",
                              "example": "https://activehosted.com/temp-placeholder.svg"
                            }
                          }
                        },
                        "relationships": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "primary-contact"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Primary Contact"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Primary Contacts"
                                  }
                                }
                              },
                              "description": {
                                "type": "string",
                                "example": "Products purchased in this Stripe order"
                              },
                              "namespace": {
                                "type": "string",
                                "example": "contacts"
                              },
                              "hasMany": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              }
                            }
                          }
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2021-04-13T21:12:53.390Z"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2021-04-13T21:12:53.390Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Invalid value for field \\\"{field_name}\\\"\",\n      \"detail\": \"{description}\",\n      \"source\": {\n        \"type\": \"pointer\",\n        \"value\": \"/data/attributes/{field_name}\"\n      }\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Invalid value for field \"{field_name}\""
                          },
                          "detail": {
                            "type": "string",
                            "example": "{description}"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "pointer"
                              },
                              "value": {
                                "type": "string",
                                "example": "/data/attributes/{field_name}"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/records/{schemaId}": {
      "get": {
        "summary": "List records by schema",
        "description": "",
        "operationId": "list-records-created-from-a-schema",
        "parameters": [
          {
            "name": "schemaId",
            "in": "path",
            "description": "ID of schema",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records to return for each call. Maximum value is 100.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index of records to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Use ?filters[relationships.{your-contact-relationship}][eq]={contactId} to filter records to a specific contact.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "200": {
                    "value": "{\n  \"records\": [\n    {\n      \"id\": \"1fba439a-208e-48e6-bd23-f6c97c3e0519\",\n      \"externalId\": \"test-obj-1\",\n      \"schemaId\": \"6449c3f3-b68d-46d1-850b-c8aea998ce1b\",\n      \"fields\": [\n        {\n          \"id\": \"my-number-field\",\n          \"value\": 100\n        }\n      ],\n      \"relationships\": {\n        \"primary-contact\": [\n          \"14\"\n        ]\n      },\n      \"createdTimestamp\": \"2021-04-16T16:12:22.222685095Z\",\n      \"updatedTimestamp\": \"2021-04-16T16:13:12.022671090Z\"\n    }\n  ],\n  \"meta\": {\n    \"total\": 1,\n    \"count\": 1,\n    \"limit\": 20,\n    \"offset\": 0\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1fba439a-208e-48e6-bd23-f6c97c3e0519"
                          },
                          "externalId": {
                            "type": "string",
                            "example": "test-obj-1"
                          },
                          "schemaId": {
                            "type": "string",
                            "example": "6449c3f3-b68d-46d1-850b-c8aea998ce1b"
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "my-number-field"
                                },
                                "value": {
                                  "type": "integer",
                                  "example": 100,
                                  "default": 0
                                }
                              }
                            }
                          },
                          "relationships": {
                            "type": "object",
                            "properties": {
                              "primary-contact": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "14"
                                }
                              }
                            }
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2021-04-16T16:12:22.222685095Z"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2021-04-16T16:13:12.022671090Z"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "count": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "limit": {
                          "type": "integer",
                          "example": 20,
                          "default": 0
                        },
                        "offset": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\":400,\n      \"title\":\"Bad Request\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 400,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Bad Request"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Not Found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create or update record",
        "description": "",
        "operationId": "create-or-update-record",
        "parameters": [
          {
            "name": "schemaId",
            "in": "path",
            "description": "ID of schema",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The Record's id"
                      },
                      "externalId": {
                        "type": "string",
                        "description": "The Record's external id"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "id of the field"
                            },
                            "value": {
                              "type": "string",
                              "description": "Data type, appropriate for the field"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "primary-contact": {
                              "type": "array",
                              "description": "List of Contact integers",
                              "default": [],
                              "items": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Create with Contact": {
                  "value": {
                    "record": {
                      "schemaId": "6449c3f3-b68d-46d1-850b-c8aea998ce1b",
                      "id": "test-obj-1",
                      "externalId": "test-obj-1",
                      "fields": [
                        {
                          "id": "my-number-field",
                          "value": 100
                        }
                      ],
                      "relationships": {
                        "primary-contact": [
                          14
                        ]
                      }
                    }
                  }
                },
                "Create with Deal": {
                  "value": {
                    "record": {
                      "schemaId": "6449c3f3-b68d-46d1-850b-c8aea998ce1b",
                      "id": "test-obj-1",
                      "externalId": "test-obj-1",
                      "fields": [
                        {
                          "id": "my-number-field",
                          "value": 100
                        }
                      ],
                      "relationships": {
                        "deal": [
                          22
                        ]
                      }
                    }
                  }
                },
                "Create with Account": {
                  "value": {
                    "record": {
                      "schemaId": "6449c3f3-b68d-46d1-850b-c8aea998ce1b",
                      "id": "test-obj-1",
                      "externalId": "test-obj-1",
                      "fields": [
                        {
                          "id": "my-number-field",
                          "value": 100
                        }
                      ],
                      "relationships": {
                        "account": [
                          123
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"record\": {\n    \t\"id\": \"test-obj-1\",\n    \t\"externalId\": \"test-obj-1\",\n        \"schemaId\": \"6449c3f3-b68d-46d1-850b-c8aea998ce1b\",\n        \"fields\": [\n            {\n                \"id\": \"my-number-field\",\n                \"value\": 100\n            }\n        ],\n        \"relationships\": {\n            \"account\": [123]\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "record": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "test-obj-1"
                        },
                        "externalId": {
                          "type": "string",
                          "example": "test-obj-1"
                        },
                        "schemaId": {
                          "type": "string",
                          "example": "6449c3f3-b68d-46d1-850b-c8aea998ce1b"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "my-number-field"
                              },
                              "value": {
                                "type": "integer",
                                "example": 100,
                                "default": 0
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "example": 123,
                                "default": 0
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"errors\":[{\"status\":400,\"title\":\"Bad Request\"}]}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 400,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Bad Request"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "text/plain": {
                "examples": {
                  "invalid field value": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Invalid value for field \\\"{field_name}\\\"\",\n      \"detail\": \"{field_name} cannot accept a value that is not defined in the schema.\",\n      \"source\": {\n        \"type\": \"pointer\",\n        \"value\": \"/data/attributes/{field_name}\"\n      }\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Invalid value for field \"{field_name}\""
                          },
                          "detail": {
                            "type": "string",
                            "example": "{field_name} cannot accept a value that is not defined in the schema."
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "pointer"
                              },
                              "value": {
                                "type": "string",
                                "example": "/data/attributes/{field_name}"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/records/{schemaId}/{recordId}": {
      "get": {
        "summary": "Get a record by id",
        "description": "",
        "operationId": "get-a-single-record",
        "parameters": [
          {
            "name": "schemaId",
            "in": "path",
            "description": "ID of schema",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "ID of record",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Success": {
                    "value": "{\n    \"record\": {\n        \"id\": \"1fba439a-208e-48e6-bd23-f6c97c3e0519\",\n        \"externalId\": \"test-obj-1\",\n        \"schemaId\": \"6449c3f3-b68d-46d1-850b-c8aea998ce1b\",\n        \"fields\": [\n            {\n                \"id\": \"my-number-field\",\n                \"value\": 100\n            }\n        ],\n        \"relationships\": {\n            \"primary-contact\": [\n                \"14\"\n            ]\n        },\n        \"createdTimestamp\": \"2021-04-16T16:12:22.222685095Z\",\n        \"updatedTimestamp\": \"2021-04-16T16:13:12.022671090Z\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "record": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1fba439a-208e-48e6-bd23-f6c97c3e0519"
                        },
                        "externalId": {
                          "type": "string",
                          "example": "test-obj-1"
                        },
                        "schemaId": {
                          "type": "string",
                          "example": "6449c3f3-b68d-46d1-850b-c8aea998ce1b"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "my-number-field"
                              },
                              "value": {
                                "type": "integer",
                                "example": 100,
                                "default": 0
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "primary-contact": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "14"
                              }
                            }
                          }
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2021-04-16T16:12:22.222685095Z"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2021-04-16T16:13:12.022671090Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\":400,\n      \"title\":\"Bad Request\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 400,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Bad Request"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a record by id",
        "description": "",
        "operationId": "delete-a-record",
        "parameters": [
          {
            "name": "schemaId",
            "in": "path",
            "description": "ID of schema",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "ID of record",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "202",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\":400,\n      \"title\":\"Bad Request\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 400,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Bad Request"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/records/{schemaId}/external/{externalId}": {
      "delete": {
        "summary": "Delete a record by external ID",
        "description": "",
        "operationId": "delete-a-record-by-external-id",
        "parameters": [
          {
            "name": "schemaId",
            "in": "path",
            "description": "ID of schema",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "externalId",
            "in": "path",
            "description": "External ID of record",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "202",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\":400,\n      \"title\":\"Bad Request\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 400,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Bad Request"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealRoles": {
      "get": {
        "summary": "List all deal roles",
        "description": "",
        "operationId": "list-all-deal-roles",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "(optional string used to search for matching titles)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n   \"dealRoles\":[\n      {\n         \"title\":\"Contributor\",\n         \"created_timestamp\":\"2019-09-10T13:01:49-05:00\",\n         \"updated_timestamp\":\"2019-09-10T13:01:49-05:00\",\n         \"links\":{\n            \"contactDeals\":\"https://example.activehosted.com/api/3/dealRoles/2/contactDeals\"\n         },\n         \"id\":\"2\"\n      },\n      {\n         \"title\":\"Decision Maker\",\n         \"created_timestamp\":\"2019-09-10T13:01:49-05:00\",\n         \"updated_timestamp\":\"2019-09-10T13:01:49-05:00\",\n         \"links\":{\n            \"contactDeals\":\"https://example.activehosted.com/api/3/dealRoles/1/contactDeals\"\n         },\n         \"id\":\"1\"\n      }\n   ],\n   \"meta\":{\n      \"total\":\"2\"\n   }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Contributor"
                          },
                          "created_timestamp": {
                            "type": "string",
                            "example": "2019-09-10T13:01:49-05:00"
                          },
                          "updated_timestamp": {
                            "type": "string",
                            "example": "2019-09-10T13:01:49-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "contactDeals": {
                                "type": "string",
                                "example": "https://example.activehosted.com/api/3/dealRoles/2/contactDeals"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a deal role",
        "description": "",
        "operationId": "create-a-deal-role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title for the new deal role"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"dealRole\":{\n    \"title\":\"Finance\",\n    \"created_timestamp\":\"2021-04-14T21:34:55-05:00\",\n    \"updated_timestamp\":\"2021-04-14T21:34:55-05:00\",\n    \"links\":{\"contactDeals\":\"https://example.activehosted.com/api/3/dealRoles/3/contactDeals\"},\n    \"id\":\"3\"\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealRole": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Finance"
                        },
                        "created_timestamp": {
                          "type": "string",
                          "example": "2021-04-14T21:34:55-05:00"
                        },
                        "updated_timestamp": {
                          "type": "string",
                          "example": "2021-04-14T21:34:55-05:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "contactDeals": {
                              "type": "string",
                              "example": "https://example.activehosted.com/api/3/dealRoles/3/contactDeals"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealRoles/{id}": {
      "delete": {
        "summary": "Delete a deal role",
        "description": "",
        "operationId": "delete-a-deal-role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Deal role's id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/records/{schemdId}/external/{externalId}": {
      "get": {
        "summary": "Get a record by external id",
        "description": "",
        "operationId": "get-a-single-record-using-external-id",
        "parameters": [
          {
            "name": "schemdId",
            "in": "path",
            "description": "ID of schema",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "externalId",
            "in": "path",
            "description": "External ID for record",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"record\": {\n        \"id\": \"1fba439a-208e-48e6-bd23-f6c97c3e0519\",\n        \"externalId\": \"test-obj-1\",\n        \"schemaId\": \"6449c3f3-b68d-46d1-850b-c8aea998ce1b\",\n        \"fields\": [\n            {\n                \"id\": \"my-number-field\",\n                \"value\": 100\n            }\n        ],\n        \"relationships\": {\n            \"primary-contact\": [\n                \"14\"\n            ]\n        },\n        \"createdTimestamp\": \"2021-04-16T16:12:22.222685095Z\",\n        \"updatedTimestamp\": \"2021-04-16T16:13:12.022671090Z\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "record": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1fba439a-208e-48e6-bd23-f6c97c3e0519"
                        },
                        "externalId": {
                          "type": "string",
                          "example": "test-obj-1"
                        },
                        "schemaId": {
                          "type": "string",
                          "example": "6449c3f3-b68d-46d1-850b-c8aea998ce1b"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "my-number-field"
                              },
                              "value": {
                                "type": "integer",
                                "example": 100,
                                "default": 0
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "primary-contact": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "14"
                              }
                            }
                          }
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "example": "2021-04-16T16:12:22.222685095Z"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "example": "2021-04-16T16:13:12.022671090Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\":400,\n      \"title\":\"Bad Request\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 400,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Bad Request"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/taskOutcomes": {
      "post": {
        "summary": "Create a task outcome",
        "description": "Create a new task outcome",
        "operationId": "create-a-task-outcome",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "sentiment"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the outcome"
                  },
                  "sentiment": {
                    "type": "string",
                    "description": "Sentiment of the outcome. Only three values are currently allowed.",
                    "enum": [
                      "Positive",
                      "Neutral",
                      "or Negative"
                    ]
                  },
                  "disabled": {
                    "type": "string",
                    "description": "1 is for disabled and 0 is for active outcome.",
                    "enum": [
                      "0 or 1"
                    ]
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "taskOutcome": {
                      "title": "Interested",
                      "sentiment": "Positive"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"taskOutcome\": {\n    \"title\": \"Interested\",\n    \"sentiment\": \"POSITIVE\",\n    \"created_by\": \"1\",\n    \"disabled\": \"\",\n    \"links\": {\n      \"tasktypeOutcomeRels\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels\",\n      \"dealTasks\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks\"\n    },\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskOutcome": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Interested"
                        },
                        "sentiment": {
                          "type": "string",
                          "example": "POSITIVE"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "1"
                        },
                        "disabled": {
                          "type": "string",
                          "example": ""
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "tasktypeOutcomeRels": {
                              "type": "string",
                              "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels"
                            },
                            "dealTasks": {
                              "type": "string",
                              "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The taskOutcome title was not provided.\",\n            \"detail\": \"\",\n            \"code\": \"field_missing\",\n            \"error\": \"taskOutcome_title_was_not_provided\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/title\"\n            }\n        },\n        {\n            \"title\": \"Sentiment value must be one of Positive, Neutral, or Negative.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/sentiment\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The taskOutcome title was not provided."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_missing"
                          },
                          "error": {
                            "type": "string",
                            "example": "taskOutcome_title_was_not_provided"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/title"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"A task outcome with the same title already exists.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/title\"\n            }\n        },\n        {\n            \"title\": \"Sentiment value must be one of Positive, Neutral, or Negative.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/sentiment\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "A task outcome with the same title already exists."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_invalid"
                          },
                          "error": {
                            "type": "string",
                            "example": ""
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/title"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "List all task outcomes",
        "description": "Retrieve all existing task outcomes",
        "operationId": "list-all-task-outcomes",
        "parameters": [
          {
            "name": "filters[sentiment]",
            "in": "query",
            "description": "1 is for Negative, 2 is for Neutral and 3 is for Positive",
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "2 or 3"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"taskOutcomes\": [\n        {\n            \"title\": \"Interested\",\n            \"sentiment\": \"POSITIVE\",\n            \"disabled\": \"0\",\n            \"created_by\": \"1\",\n            \"updated_by\": \"1\",\n            \"created_utc_timestamp\": \"2021-02-16T12:26:15-06:00\",\n            \"updated_utc_timestamp\": \"2021-02-16T12:27:56-06:00\",\n            \"dealTasktype_ids\": [],\n            \"links\": {\n                \"tasktypeOutcomeRels\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels\",\n                \"dealTasks\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks\"\n            },\n            \"id\": \"1\"\n        },\n        {\n            \"title\": \"Not Interested\",\n            \"sentiment\": \"NEGATIVE\",\n            \"disabled\": \"0\",\n            \"created_by\": \"1\",\n            \"updated_by\": \"1\",\n            \"created_utc_timestamp\": \"2021-02-16T12:27:01-06:00\",\n            \"updated_utc_timestamp\": \"2021-02-16T12:27:01-06:00\",\n            \"dealTasktype_ids\": [],\n            \"links\": {\n                \"tasktypeOutcomeRels\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/2/tasktypeOutcomeRels\",\n                \"dealTasks\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/2/dealTasks\"\n            },\n            \"id\": \"2\"\n        },\n        {\n            \"title\": \"Left a voicemail\",\n            \"sentiment\": \"NEUTRAL\",\n            \"disabled\": \"0\",\n            \"created_by\": \"1\",\n            \"updated_by\": \"1\",\n            \"created_utc_timestamp\": \"2021-02-16T12:27:13-06:00\",\n            \"updated_utc_timestamp\": \"2021-02-16T12:27:13-06:00\",\n            \"dealTasktype_ids\": [],\n            \"links\": {\n                \"tasktypeOutcomeRels\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/3/tasktypeOutcomeRels\",\n                \"dealTasks\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/3/dealTasks\"\n            },\n            \"id\": \"3\"\n        },\n        {\n            \"title\": \"Disabled outcome\",\n            \"sentiment\": \"NEUTRAL\",\n            \"disabled\": \"1\",\n            \"created_by\": \"1\",\n            \"updated_by\": \"1\",\n            \"created_utc_timestamp\": \"2021-02-16T12:28:27-06:00\",\n            \"updated_utc_timestamp\": \"2021-02-16T12:28:27-06:00\",\n            \"dealTasktype_ids\": [],\n            \"links\": {\n                \"tasktypeOutcomeRels\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/4/tasktypeOutcomeRels\",\n                \"dealTasks\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/4/dealTasks\"\n            },\n            \"id\": \"4\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"4\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskOutcomes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Interested"
                          },
                          "sentiment": {
                            "type": "string",
                            "example": "POSITIVE"
                          },
                          "disabled": {
                            "type": "string",
                            "example": "0"
                          },
                          "created_by": {
                            "type": "string",
                            "example": "1"
                          },
                          "updated_by": {
                            "type": "string",
                            "example": "1"
                          },
                          "created_utc_timestamp": {
                            "type": "string",
                            "example": "2021-02-16T12:26:15-06:00"
                          },
                          "updated_utc_timestamp": {
                            "type": "string",
                            "example": "2021-02-16T12:27:56-06:00"
                          },
                          "dealTasktype_ids": {
                            "type": "array"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "tasktypeOutcomeRels": {
                                "type": "string",
                                "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels"
                              },
                              "dealTasks": {
                                "type": "string",
                                "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/taskOutcomes/{id}": {
      "get": {
        "summary": "Retrieve a task outcome",
        "description": "Retrieve an existing task outcome",
        "operationId": "retrieve-a-task-outcome",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task outcome's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"taskOutcome\": {\n        \"title\": \"Interested\",\n        \"sentiment\": \"POSITIVE\",\n        \"disabled\": \"0\",\n        \"created_by\": \"1\",\n        \"updated_by\": \"1\",\n        \"created_utc_timestamp\": \"2021-02-16T12:26:15-06:00\",\n        \"updated_utc_timestamp\": \"2021-02-16T12:27:56-06:00\",\n        \"dealTasktype_ids\": [],\n        \"links\": {\n            \"tasktypeOutcomeRels\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels\",\n            \"dealTasks\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskOutcome": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Interested"
                        },
                        "sentiment": {
                          "type": "string",
                          "example": "POSITIVE"
                        },
                        "disabled": {
                          "type": "string",
                          "example": "0"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "1"
                        },
                        "updated_by": {
                          "type": "string",
                          "example": "1"
                        },
                        "created_utc_timestamp": {
                          "type": "string",
                          "example": "2021-02-16T12:26:15-06:00"
                        },
                        "updated_utc_timestamp": {
                          "type": "string",
                          "example": "2021-02-16T12:27:56-06:00"
                        },
                        "dealTasktype_ids": {
                          "type": "array"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "tasktypeOutcomeRels": {
                              "type": "string",
                              "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels"
                            },
                            "dealTasks": {
                              "type": "string",
                              "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for TaskOutcome with id 111\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for TaskOutcome with id 111"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/taskOutccomes/{id}": {
      "delete": {
        "summary": "Delete a task outcome",
        "description": "Delete an existing task outcome",
        "operationId": "delete-a-task-outcome",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task outcome's id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for TaskOutcome with id 111\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for TaskOutcome with id 111"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a task outcome",
        "description": "Update an existing task outcome",
        "operationId": "update-a-task-outcome",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task outcome's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "sentiment"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Task outcome's title. The title should be unique among task outcomes."
                  },
                  "sentiment": {
                    "type": "string",
                    "description": "Sentiment of the outcome. Only three values are currently allowed.",
                    "enum": [
                      "Positive",
                      "Neutral",
                      "or Negative"
                    ]
                  },
                  "disabled": {
                    "type": "string",
                    "description": "1 is for disabled and 0 is for active outcome.",
                    "enum": [
                      "0 or 1"
                    ]
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "taskOutcome": {
                      "sentiment": "Neutral"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"taskOutcome\": {\n        \"title\": \"Interested\",\n        \"sentiment\": \"NEUTRAL\",\n        \"disabled\": \"0\",\n        \"created_by\": \"1\",\n        \"updated_by\": \"1\",\n        \"created_utc_timestamp\": \"2021-02-16T12:26:15-06:00\",\n        \"updated_utc_timestamp\": \"2021-02-16T12:27:56-06:00\",\n        \"links\": {\n            \"tasktypeOutcomeRels\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels\",\n            \"dealTasks\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskOutcome": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Interested"
                        },
                        "sentiment": {
                          "type": "string",
                          "example": "NEUTRAL"
                        },
                        "disabled": {
                          "type": "string",
                          "example": "0"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "1"
                        },
                        "updated_by": {
                          "type": "string",
                          "example": "1"
                        },
                        "created_utc_timestamp": {
                          "type": "string",
                          "example": "2021-02-16T12:26:15-06:00"
                        },
                        "updated_utc_timestamp": {
                          "type": "string",
                          "example": "2021-02-16T12:27:56-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "tasktypeOutcomeRels": {
                              "type": "string",
                              "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels"
                            },
                            "dealTasks": {
                              "type": "string",
                              "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"A task outcome with the same title already exists.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/title\"\n            }\n        },\n        {\n            \"title\": \"Sentiment value must be one of Positive, Neutral, or Negative.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/sentiment\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "A task outcome with the same title already exists."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_invalid"
                          },
                          "error": {
                            "type": "string",
                            "example": ""
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/title"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tasktypeOutcomeRels": {
      "get": {
        "summary": "List all task type - outcome relations",
        "description": "Retrieve all existing task type - outcome relations",
        "operationId": "list-all-task-type-outcome-relations",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"tasktypeOutcomeRels\": [\n        {\n            \"tasktype_id\": \"1\",\n            \"outcome_id\": \"9\",\n            \"display_order\": \"0\",\n            \"created_by\": \"0\",\n            \"created_utc_timestamp\": \"2021-04-02T12:06:06-05:00\",\n            \"updated_by\": null,\n            \"updated_utc_timestamp\": \"2021-04-02 12:06:06\",\n            \"links\": {\n                \"tasktype\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/57/tasktype\",\n                \"outcome\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/57/outcome\",\n                \"createdBy\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/57/createdBy\"\n            },\n            \"id\": \"1\",\n            \"tasktype\": \"1\",\n            \"outcome\": \"9\",\n            \"createdBy\": \"1\"\n        },\n        {\n            \"tasktype_id\": \"1\",\n            \"outcome_id\": \"10\",\n            \"display_order\": \"1\",\n            \"created_by\": \"0\",\n            \"created_utc_timestamp\": \"2021-04-02T12:06:06-05:00\",\n            \"updated_by\": null,\n            \"updated_utc_timestamp\": \"2021-04-02 12:06:06\",\n            \"links\": {\n                \"tasktype\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/58/tasktype\",\n                \"outcome\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/58/outcome\",\n                \"createdBy\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/58/createdBy\"\n            },\n            \"id\": \"2\",\n            \"tasktype\": \"1\",\n            \"outcome\": \"10\",\n            \"createdBy\": \"1\"\n        },\n        {\n            \"tasktype_id\": \"2\",\n            \"outcome_id\": \"9\",\n            \"display_order\": \"2\",\n            \"created_by\": \"0\",\n            \"created_utc_timestamp\": \"2021-04-02T12:06:07-05:00\",\n            \"updated_by\": null,\n            \"updated_utc_timestamp\": \"2021-04-02 12:06:07\",\n            \"links\": {\n                \"tasktype\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/60/tasktype\",\n                \"outcome\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/60/outcome\",\n                \"createdBy\": \"https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/60/createdBy\"\n            },\n            \"id\": \"3\",\n            \"tasktype\": \"2\",\n            \"outcome\": \"9\",\n            \"createdBy\": \"1\"\n        }\n    ],\n    \"meta\": {\n        \"total\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "tasktypeOutcomeRels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tasktype_id": {
                            "type": "string",
                            "example": "1"
                          },
                          "outcome_id": {
                            "type": "string",
                            "example": "9"
                          },
                          "display_order": {
                            "type": "string",
                            "example": "0"
                          },
                          "created_by": {
                            "type": "string",
                            "example": "0"
                          },
                          "created_utc_timestamp": {
                            "type": "string",
                            "example": "2021-04-02T12:06:06-05:00"
                          },
                          "updated_by": {},
                          "updated_utc_timestamp": {
                            "type": "string",
                            "example": "2021-04-02 12:06:06"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "tasktype": {
                                "type": "string",
                                "example": "https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/57/tasktype"
                              },
                              "outcome": {
                                "type": "string",
                                "example": "https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/57/outcome"
                              },
                              "createdBy": {
                                "type": "string",
                                "example": "https://youraccountname.api-us1.com/api/3/tasktypeOutcomeRels/57/createdBy"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "tasktype": {
                            "type": "string",
                            "example": "1"
                          },
                          "outcome": {
                            "type": "string",
                            "example": "9"
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "WIP Create a task type - outcome relation",
        "description": "Create a new task type",
        "operationId": "create-a-task-outcome-1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "sentiment"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the outcome"
                  },
                  "sentiment": {
                    "type": "string",
                    "description": "Sentiment of the outcome",
                    "enum": [
                      "Positive",
                      "Neutral",
                      "Negative"
                    ]
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "taskOutcome": {
                      "title": "Interested",
                      "sentiment": "Positive"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"taskOutcome\": {\n    \"title\": \"Interested\",\n    \"sentiment\": \"POSITIVE\",\n    \"created_by\": \"1\",\n    \"disabled\": \"\",\n    \"links\": {\n      \"tasktypeOutcomeRels\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels\",\n      \"dealTasks\": \"https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks\"\n    },\n    \"id\": \"1\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskOutcome": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Interested"
                        },
                        "sentiment": {
                          "type": "string",
                          "example": "POSITIVE"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "1"
                        },
                        "disabled": {
                          "type": "string",
                          "example": ""
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "tasktypeOutcomeRels": {
                              "type": "string",
                              "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels"
                            },
                            "dealTasks": {
                              "type": "string",
                              "example": "https://youraccountname.api-us1.com/api/3/taskOutcomes/1/dealTasks"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"A task outcome with the same title already exists.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/title\"\n            }\n        },\n        {\n            \"title\": \"Sentiment value must be one of Positive, Neutral, or Negative.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/sentiment\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "A task outcome with the same title already exists."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_invalid"
                          },
                          "error": {
                            "type": "string",
                            "example": ""
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "example": "/data/attributes/title"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tasktypeOutcomeRels/{id}": {
      "get": {
        "summary": "Retrieve a task type - outcome relation",
        "description": "Retrieve an existing task type - outcome relation",
        "operationId": "retrieve-a-task-type-outcome-relation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task type - outcome relation's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"tasktypeOutcomeRel\": {\n        \"tasktype_id\": \"1\",\n        \"outcome_id\": \"9\",\n        \"display_order\": \"0\",\n        \"created_by\": \"0\",\n        \"created_utc_timestamp\": \"2021-04-05T15:19:36-05:00\",\n        \"updated_by\": null,\n        \"updated_utc_timestamp\": \"2021-04-05 15:19:36\",\n        \"links\": {\n            \"tasktype\": \"http://hosted.localdev/api/3/tasktypeOutcomeRels/1/tasktype\",\n            \"outcome\": \"http://hosted.localdev/api/3/tasktypeOutcomeRels/1/outcome\",\n            \"createdBy\": \"http://hosted.localdev/api/3/tasktypeOutcomeRels/1/createdBy\"\n        },\n        \"id\": \"1\",\n        \"tasktype\": \"1\",\n        \"outcome\": \"1\",\n        \"createdBy\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "tasktypeOutcomeRel": {
                      "type": "object",
                      "properties": {
                        "tasktype_id": {
                          "type": "string",
                          "example": "1"
                        },
                        "outcome_id": {
                          "type": "string",
                          "example": "9"
                        },
                        "display_order": {
                          "type": "string",
                          "example": "0"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "0"
                        },
                        "created_utc_timestamp": {
                          "type": "string",
                          "example": "2021-04-05T15:19:36-05:00"
                        },
                        "updated_by": {},
                        "updated_utc_timestamp": {
                          "type": "string",
                          "example": "2021-04-05 15:19:36"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "tasktype": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/tasktypeOutcomeRels/1/tasktype"
                            },
                            "outcome": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/tasktypeOutcomeRels/1/outcome"
                            },
                            "createdBy": {
                              "type": "string",
                              "example": "http://hosted.localdev/api/3/tasktypeOutcomeRels/1/createdBy"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "tasktype": {
                          "type": "string",
                          "example": "1"
                        },
                        "outcome": {
                          "type": "string",
                          "example": "1"
                        },
                        "createdBy": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for TasktypeOutcomeRel with id 111\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for TasktypeOutcomeRel with id 111"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "WIP Update a task type - outcome relation",
        "description": "Update an existing task type",
        "operationId": "update-a-task-outcome-1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task type - outcome relation's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dealTasktype": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Deal task type's title. The title should be unique among deal task types."
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "taskOutcome": {
                      "title": "Interested"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"taskOutcome\": {\n        \"title\": \"Interested\",\n        \"sentiment\": \"POSITIVE\",\n        \"disabled\": \"0\",\n        \"created_by\": \"1\",\n        \"updated_by\": \"1\",\n        \"created_utc_timestamp\": \"2021-02-16T12:26:15-06:00\",\n        \"updated_utc_timestamp\": \"2021-02-16T12:27:56-06:00\",\n        \"links\": {\n            \"tasktypeOutcomeRels\": \"https://task-outcomes.staging.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels\",\n            \"dealTasks\": \"https://task-outcomes.staging.api-us1.com/api/3/taskOutcomes/1/dealTasks\"\n        },\n        \"id\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskOutcome": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Interested"
                        },
                        "sentiment": {
                          "type": "string",
                          "example": "POSITIVE"
                        },
                        "disabled": {
                          "type": "string",
                          "example": "0"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "1"
                        },
                        "updated_by": {
                          "type": "string",
                          "example": "1"
                        },
                        "created_utc_timestamp": {
                          "type": "string",
                          "example": "2021-02-16T12:26:15-06:00"
                        },
                        "updated_utc_timestamp": {
                          "type": "string",
                          "example": "2021-02-16T12:27:56-06:00"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "tasktypeOutcomeRels": {
                              "type": "string",
                              "example": "https://task-outcomes.staging.api-us1.com/api/3/taskOutcomes/1/tasktypeOutcomeRels"
                            },
                            "dealTasks": {
                              "type": "string",
                              "example": "https://task-outcomes.staging.api-us1.com/api/3/taskOutcomes/1/dealTasks"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"A task outcome with the same title already exists.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/title\"\n            }\n        },\n        {\n            \"title\": \"Sentiment value must be one of Positive, Neutral, or Negative.\",\n            \"detail\": \"\",\n            \"code\": \"field_invalid\",\n            \"error\": \"\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/sentiment\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "The taskOutcome title was not provided."
                              },
                              "detail": {
                                "type": "string",
                                "example": ""
                              },
                              "code": {
                                "type": "string",
                                "example": "field_missing"
                              },
                              "error": {
                                "type": "string",
                                "example": "taskOutcome_title_was_not_provided"
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "pointer": {
                                    "type": "string",
                                    "example": "/data/attributes/title"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "A task outcome with the same title already exists."
                              },
                              "detail": {
                                "type": "string",
                                "example": ""
                              },
                              "code": {
                                "type": "string",
                                "example": "field_invalid"
                              },
                              "error": {
                                "type": "string",
                                "example": ""
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "pointer": {
                                    "type": "string",
                                    "example": "/data/attributes/title"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a task type - outcome relation",
        "description": "Delete an existing task type - outcome relation",
        "operationId": "delete-a-task-type-outcome-relation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task type - outcome relation's id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for TasktypeOutcomeRel with id 111\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for TasktypeOutcomeRel with id 111"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/schemas/public": {
      "post": {
        "summary": "Create a public schema",
        "description": "",
        "operationId": "create-a-public-schema",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema": {
                    "properties": {
                      "slug": {
                        "type": "string"
                      },
                      "appId": {
                        "type": "string"
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "singular": {
                            "type": "string",
                            "description": "human-readable singular name"
                          },
                          "plural": {
                            "type": "string",
                            "description": "human-readable plural name"
                          }
                        }
                      },
                      "description": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {
                                "singular": {
                                  "type": "string",
                                  "description": "human-readable singular name"
                                },
                                "plural": {
                                  "type": "string",
                                  "description": "human-readable plural name"
                                }
                              }
                            },
                            "type": {
                              "type": "string"
                            },
                            "scale": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "isRequired": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {
                                "singular": {
                                  "type": "string",
                                  "description": "human-readable singular name"
                                },
                                "plural": {
                                  "type": "string",
                                  "description": "human-readable plural name"
                                }
                              }
                            },
                            "description": {
                              "type": "string"
                            },
                            "namespace": {
                              "type": "string"
                            },
                            "hasMany": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "schema": {
                      "slug": "event-tickets",
                      "appId": "cxapp-studio-app-id",
                      "labels": {
                        "singular": "Event Ticket",
                        "plural": "Event Tickets"
                      },
                      "description": "Event Tickets",
                      "fields": [
                        {
                          "id": "name",
                          "labels": {
                            "singular": "Name",
                            "plural": "Names"
                          },
                          "type": "textarea"
                        }
                      ],
                      "relationships": [
                        {
                          "id": "primary-contact",
                          "labels": {
                            "singular": "Primary Contact",
                            "plural": "Primary Contacts"
                          },
                          "description": "Primary contact that owns a ticket",
                          "namespace": "contacts"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"schema\": {\n    \"id\": \"230f6065-a8e5-4df2-a70a-f6832d004d8d\",\n    \"slug\": \"app-230f6065-a8e5-4df2-a70a-f6832d004d8d-event-tickets\",\n    \"visibility\": \"public\",\n    \"labels\": {\"singular\": \"Event Ticket\", \"plural\": \"Event Tickets\"},\n    \"description\": \"Event Tickets\",\n    \"appId\": \"cxapp-studio-app-id\",\n    \"fields\": [\n        {\n            \"id\": \"name\",\n            \"labels\": {\"singular\": \"Name\", \"plural\": \"Names\"},\n            \"type\": \"textarea\"\n        }\n    ],\n    \"relationships\": [\n      {\n        \"id\": \"primary-contact\",\n        \"labels\": {\n          \"singular\": \"Primary Contact\",\n          \"plural\": \"Primary Contacts\"\n        },\n        \"description\": \"Primary contact that owns a ticket\",\n        \"namespace\": \"contacts\",\n        \"hasMany\": false,\n        \"inherited\": false\n      }\n    ],\n    \"icons\": {\n        \"default\": \"https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "230f6065-a8e5-4df2-a70a-f6832d004d8d"
                        },
                        "slug": {
                          "type": "string",
                          "example": "app-230f6065-a8e5-4df2-a70a-f6832d004d8d-event-tickets"
                        },
                        "visibility": {
                          "type": "string",
                          "example": "public"
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "singular": {
                              "type": "string",
                              "example": "Event Ticket"
                            },
                            "plural": {
                              "type": "string",
                              "example": "Event Tickets"
                            }
                          }
                        },
                        "description": {
                          "type": "string",
                          "example": "Event Tickets"
                        },
                        "appId": {
                          "type": "string",
                          "example": "cxapp-studio-app-id"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "name"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Name"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Names"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "example": "textarea"
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "primary-contact"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Primary Contact"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Primary Contacts"
                                  }
                                }
                              },
                              "description": {
                                "type": "string",
                                "example": "Primary contact that owns a ticket"
                              },
                              "namespace": {
                                "type": "string",
                                "example": "contacts"
                              },
                              "hasMany": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              },
                              "inherited": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              }
                            }
                          }
                        },
                        "icons": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string",
                              "example": "https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/schemas/{id}/child": {
      "post": {
        "summary": "Create a child schema",
        "description": "",
        "operationId": "create-a-child-schema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the parent schema the new child schema will extend",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"schema\": {\n    \"id\": \"475c4ea7-65cc-4d59-a690-6ac232633fca\",\n    \"parentId\": \"230f6065-a8e5-4df2-a70a-f6832d004d8d\",\n    \"slug\": \"app-cxapp-studio-app-id-event-tickets\",\n    \"appId\": \"cxapp-studio-app-id\",\n    \"visibility\": \"private\",\n    \"labels\": {\"singular\": \"Event Ticket\", \"plural\": \"Event Tickets\"},\n    \"description\": \"Event Tickets\",\n    \"fields\": [\n        {\n            \"id\": \"name\",\n            \"labels\": {\"singular\": \"Name\", \"plural\": \"Names\"},\n            \"type\": \"textarea\",\n            \"inherited\": true\n        }\n    ],\n    \"relationships\": [\n      {\n        \"id\": \"primary-contact\",\n        \"labels\": {\n          \"singular\": \"Primary Contact\",\n          \"plural\": \"Primary Contacts\"\n        },\n        \"description\": \"Primary contact that owns a ticket\",\n        \"namespace\": \"contacts\",\n        \"inherited\": true\n      }\n    ],\n    \"icons\": {\n        \"default\": \"https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "475c4ea7-65cc-4d59-a690-6ac232633fca"
                        },
                        "parentId": {
                          "type": "string",
                          "example": "230f6065-a8e5-4df2-a70a-f6832d004d8d"
                        },
                        "slug": {
                          "type": "string",
                          "example": "app-cxapp-studio-app-id-event-tickets"
                        },
                        "appId": {
                          "type": "string",
                          "example": "cxapp-studio-app-id"
                        },
                        "visibility": {
                          "type": "string",
                          "example": "private"
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "singular": {
                              "type": "string",
                              "example": "Event Ticket"
                            },
                            "plural": {
                              "type": "string",
                              "example": "Event Tickets"
                            }
                          }
                        },
                        "description": {
                          "type": "string",
                          "example": "Event Tickets"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "name"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Name"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Names"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "example": "textarea"
                              },
                              "inherited": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "primary-contact"
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "singular": {
                                    "type": "string",
                                    "example": "Primary Contact"
                                  },
                                  "plural": {
                                    "type": "string",
                                    "example": "Primary Contacts"
                                  }
                                }
                              },
                              "description": {
                                "type": "string",
                                "example": "Primary contact that owns a ticket"
                              },
                              "namespace": {
                                "type": "string",
                                "example": "contacts"
                              },
                              "inherited": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              }
                            }
                          }
                        },
                        "icons": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string",
                              "example": "https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/import/info": {
      "get": {
        "summary": "Bulk import status info",
        "description": "",
        "operationId": "bulk-import-status-info",
        "parameters": [
          {
            "name": "batchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"status\":\"completed\",\n  \"success\":[\"123\",\"124\",\"125\",\"126\"],\n  \"failure\":[\n    \"invalid.email@invalidDomain\", \n    \"invalid'character@example.com\"\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "completed"
                    },
                    "success": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "123"
                      }
                    },
                    "failure": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "invalid.email@invalidDomain"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Bad Request": {
                    "value": "{\"success\":0,\"message\":\"'batchId' is a required field.\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "'batchId' is a required field."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/deals/bulkUpdate": {
      "patch": {
        "summary": "Bulk Update Deal Owners",
        "description": "Update an existing deal",
        "operationId": "bulk-update-deal-owners",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deals": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "id of the Deal"
                        },
                        "ownerId": {
                          "type": "string",
                          "description": "id of the Deal's Owner"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "examples": {
                "Correct request": {
                  "value": {
                    "deals": [
                      {
                        "id": 1,
                        "ownerId": 1
                      },
                      {
                        "id": 2,
                        "ownerId": 1
                      },
                      {
                        "id": 3,
                        "ownerId": 1
                      }
                    ]
                  }
                },
                "Missing ownerId": {
                  "value": {
                    "deals": [
                      {
                        "id": 1
                      },
                      {
                        "id": 2,
                        "ownerId": 2
                      }
                    ]
                  }
                },
                "Non-existing deal id": {
                  "value": {
                    "deals": [
                      {
                        "id": 99999999,
                        "ownerId": 2
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"success\": [\n        \"1\",\n        \"2\"\n    ],\n    \"nochange\": [\n        \"3\"\n    ],\n    \"failed\": []\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "1"
                      }
                    },
                    "nochange": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "3"
                      }
                    },
                    "failed": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Mandatory ownerId": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 422,\n            \"title\": \"ownerId is required for a deal '1'.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 422,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "ownerId is required for a deal '1'."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Non-existing ownerId": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 422,\n            \"title\": \"Owner(user) with id '999999' was not found for a deal '1'.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 422,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Owner(user) with id '999999' was not found for a deal '1'."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "text",
              "code": "{\n    \"deals\": [\n        {\n            \"id\": 1,\n            \"ownerId\": 999999\n        }\n    ]\n}",
              "name": "Non-existing ownerId"
            }
          ],
          "samples-languages": [
            "text"
          ]
        }
      }
    },
    "/dealGroup/get_inaccessible_deal_groups": {
      "get": {
        "summary": "Retrieve inaccessible pipelines by user",
        "description": "Retrieve pipelines that given user doesn't have access to",
        "operationId": "retrieve-inaccessible-pipelines-by-user",
        "parameters": [
          {
            "name": "dealIds[]",
            "in": "query",
            "description": "Deal Ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User's Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"dealGroups\": [\n        {\n            \"title\": \"p1\",\n            \"currency\": \"usd\",\n            \"autoassign\": \"0\",\n            \"allusers\": \"1\",\n            \"allgroups\": \"0\",\n            \"win_probability_initialize_date\": \"0000-00-00 00:00:00\",\n            \"cdate\": \"2021-08-10T12:16:06-05:00\",\n            \"udate\": \"2021-11-09T10:09:25-06:00\",\n            \"links\": {\n                \"stages\": \"http://hosted.localdev/api/3/dealGroups/1/stages\",\n                \"dealGroupUsers\": \"http://hosted.localdev/api/3/dealGroups/1/dealGroupUsers\",\n                \"dealGroupGroups\": \"http://hosted.localdev/api/3/dealGroups/1/dealGroupGroups\",\n                \"winProbabilityFeatures\": \"http://hosted.localdev/api/3/dealGroups/1/winProbabilityFeatures\"\n            },\n            \"id\": \"1\"\n        },\n        {\n            \"title\": \"p6\",\n            \"currency\": \"usd\",\n            \"autoassign\": \"0\",\n            \"allusers\": \"1\",\n            \"allgroups\": \"0\",\n            \"win_probability_initialize_date\": \"0000-00-00 00:00:00\",\n            \"cdate\": \"2021-11-09T15:14:06-06:00\",\n            \"udate\": \"2021-11-09T15:36:53-06:00\",\n            \"links\": {\n                \"stages\": \"http://hosted.localdev/api/3/dealGroups/6/stages\",\n                \"dealGroupUsers\": \"http://hosted.localdev/api/3/dealGroups/6/dealGroupUsers\",\n                \"dealGroupGroups\": \"http://hosted.localdev/api/3/dealGroups/6/dealGroupGroups\",\n                \"winProbabilityFeatures\": \"http://hosted.localdev/api/3/dealGroups/6/winProbabilityFeatures\"\n            },\n            \"id\": \"6\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "dealGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "p1"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "autoassign": {
                            "type": "string",
                            "example": "0"
                          },
                          "allusers": {
                            "type": "string",
                            "example": "1"
                          },
                          "allgroups": {
                            "type": "string",
                            "example": "0"
                          },
                          "win_probability_initialize_date": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2021-08-10T12:16:06-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2021-11-09T10:09:25-06:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "stages": {
                                "type": "string",
                                "example": "http://hosted.localdev/api/3/dealGroups/1/stages"
                              },
                              "dealGroupUsers": {
                                "type": "string",
                                "example": "http://hosted.localdev/api/3/dealGroups/1/dealGroupUsers"
                              },
                              "dealGroupGroups": {
                                "type": "string",
                                "example": "http://hosted.localdev/api/3/dealGroups/1/dealGroupGroups"
                              },
                              "winProbabilityFeatures": {
                                "type": "string",
                                "example": "http://hosted.localdev/api/3/dealGroups/1/winProbabilityFeatures"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Missing userId parameter": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 422,\n            \"title\": \"Invalid Input Parameter\",\n            \"detail\": \"Parameter userId is required.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 422,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Invalid Input Parameter"
                          },
                          "detail": {
                            "type": "string",
                            "example": "Parameter userId is required."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Missing dealIds parameter": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 422,\n            \"title\": \"Invalid Input Parameter\",\n            \"detail\": \"Parameter dealIds is required.\"\n        }\n    ]\n}"
                  },
                  "Non-existing user": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 422,\n            \"title\": \"Invalid Input Parameter\",\n            \"detail\": \"User was not found.\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "title": "Missing dealIds parameter",
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "integer",
                                "example": 422,
                                "default": 0
                              },
                              "title": {
                                "type": "string",
                                "example": "Invalid Input Parameter"
                              },
                              "detail": {
                                "type": "string",
                                "example": "Parameter dealIds is required."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "title": "Non-existing user",
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "integer",
                                "example": 422,
                                "default": 0
                              },
                              "title": {
                                "type": "string",
                                "example": "Invalid Input Parameter"
                              },
                              "detail": {
                                "type": "string",
                                "example": "User was not found."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "text",
              "code": "/dealGroup/get_inaccessible_deal_groups?userId=2&dealIds[]=1&dealIds[]=2&dealIds[]=3&dealIds[]=4&dealIds[]=5"
            }
          ],
          "samples-languages": [
            "text"
          ]
        }
      }
    },
    "/contacts/{id}/bounceLogs": {
      "get": {
        "summary": "Retrieve a contact's bounce logs",
        "description": "",
        "operationId": "retrieve-contact-bounce-logs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"bounceLogs\": [\n        {\n            \"tstamp\": \"2021-05-12T11:30:06-05:00\",\n            \"bounceid\": \"1\",\n            \"subscriberid\": \"4\",\n            \"campaignid\": \"11\",\n            \"messageid\": \"12\",\n            \"codeid\": \"48\",\n            \"email\": \"uhOhBounced@example.com\",\n            \"error\": \"\",\n            \"source\": \"Return-Path: <>\\nReceived: from xxx.xxxx.xxxxxxc.com (unknown [XX.X.XX.XX]) ...\",\n            \"created_timestamp\": \"2021-05-12 11:30:06\",\n            \"updated_timestamp\": \"2021-05-12 11:30:06\",\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"links\": {\n                \"bounce\": \"https://:account.api-us1.com/api/3/bounceLogs/23/bounce\",\n                \"contact\": \"https://:account.api-us1.com/api/3/bounceLogs/23/contact\",\n                \"campaign\": \"https://:account.api-us1.com/api/3/bounceLogs/23/campaign\",\n                \"message\": \"https://:account.api-us1.com/api/3/bounceLogs/23/message\",\n                \"code\": \"https://:account.api-us1.com/api/3/bounceLogs/23/code\"\n            },\n            \"id\": \"23\",\n            \"bounce\": \"1\",\n            \"contact\": \"4\",\n            \"campaign\": \"11\",\n            \"message\": \"12\",\n            \"code\": \"48\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "bounceLogs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tstamp": {
                            "type": "string",
                            "example": "2021-05-12T11:30:06-05:00"
                          },
                          "bounceid": {
                            "type": "string",
                            "example": "1"
                          },
                          "subscriberid": {
                            "type": "string",
                            "example": "4"
                          },
                          "campaignid": {
                            "type": "string",
                            "example": "11"
                          },
                          "messageid": {
                            "type": "string",
                            "example": "12"
                          },
                          "codeid": {
                            "type": "string",
                            "example": "48"
                          },
                          "email": {
                            "type": "string",
                            "example": "uhOhBounced@example.com"
                          },
                          "error": {
                            "type": "string",
                            "example": ""
                          },
                          "source": {
                            "type": "string",
                            "example": "Return-Path: <>\nReceived: from xxx.xxxx.xxxxxxc.com (unknown [XX.X.XX.XX]) ..."
                          },
                          "created_timestamp": {
                            "type": "string",
                            "example": "2021-05-12 11:30:06"
                          },
                          "updated_timestamp": {
                            "type": "string",
                            "example": "2021-05-12 11:30:06"
                          },
                          "created_by": {},
                          "updated_by": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "bounce": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/bounceLogs/23/bounce"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/bounceLogs/23/contact"
                              },
                              "campaign": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/bounceLogs/23/campaign"
                              },
                              "message": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/bounceLogs/23/message"
                              },
                              "code": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/bounceLogs/23/code"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "23"
                          },
                          "bounce": {
                            "type": "string",
                            "example": "1"
                          },
                          "contact": {
                            "type": "string",
                            "example": "4"
                          },
                          "campaign": {
                            "type": "string",
                            "example": "11"
                          },
                          "message": {
                            "type": "string",
                            "example": "12"
                          },
                          "code": {
                            "type": "string",
                            "example": "48"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/contactData": {
      "get": {
        "summary": "Retrieve a contact's data",
        "description": "",
        "operationId": "retrieve-contact-data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactDatum\": {\n        \"contact\": \"4\",\n        \"tstamp\": \"2021-06-09T14:35:10-05:00\",\n        \"geoTstamp\": null,\n        \"geoIp4\": \"0\",\n        \"geoCountry2\": \"\",\n        \"geo_country\": \"\",\n        \"geoState\": \"\",\n        \"geoCity\": \"\",\n        \"geoZip\": \"\",\n        \"geoArea\": \"0\",\n        \"geoLat\": \"0.000000\",\n        \"geoLon\": \"0.000000\",\n        \"geoTz\": \"\",\n        \"geoTzOffset\": \"0.00\",\n        \"ga_campaign_source\": \"\",\n        \"ga_campaign_name\": \"\",\n        \"ga_campaign_medium\": \"\",\n        \"ga_campaign_term\": \"\",\n        \"ga_campaign_content\": \"\",\n        \"ga_campaign_customsegment\": \"\",\n        \"ga_first_visit\": null,\n        \"ga_times_visited\": \"0\",\n        \"fb_id\": \"0\",\n        \"fb_name\": \"\",\n        \"tw_id\": \"0\",\n        \"created_timestamp\": \"0000-00-00 00:00:00\",\n        \"updated_timestamp\": \"0000-00-00 00:00:00\",\n        \"created_by\": \"0\",\n        \"updated_by\": \"0\",\n        \"links\": [],\n        \"id\": \"12\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactDatum": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "string",
                          "example": "4"
                        },
                        "tstamp": {
                          "type": "string",
                          "example": "2021-06-09T14:35:10-05:00"
                        },
                        "geoTstamp": {},
                        "geoIp4": {
                          "type": "string",
                          "example": "0"
                        },
                        "geoCountry2": {
                          "type": "string",
                          "example": ""
                        },
                        "geo_country": {
                          "type": "string",
                          "example": ""
                        },
                        "geoState": {
                          "type": "string",
                          "example": ""
                        },
                        "geoCity": {
                          "type": "string",
                          "example": ""
                        },
                        "geoZip": {
                          "type": "string",
                          "example": ""
                        },
                        "geoArea": {
                          "type": "string",
                          "example": "0"
                        },
                        "geoLat": {
                          "type": "string",
                          "example": "0.000000"
                        },
                        "geoLon": {
                          "type": "string",
                          "example": "0.000000"
                        },
                        "geoTz": {
                          "type": "string",
                          "example": ""
                        },
                        "geoTzOffset": {
                          "type": "string",
                          "example": "0.00"
                        },
                        "ga_campaign_source": {
                          "type": "string",
                          "example": ""
                        },
                        "ga_campaign_name": {
                          "type": "string",
                          "example": ""
                        },
                        "ga_campaign_medium": {
                          "type": "string",
                          "example": ""
                        },
                        "ga_campaign_term": {
                          "type": "string",
                          "example": ""
                        },
                        "ga_campaign_content": {
                          "type": "string",
                          "example": ""
                        },
                        "ga_campaign_customsegment": {
                          "type": "string",
                          "example": ""
                        },
                        "ga_first_visit": {},
                        "ga_times_visited": {
                          "type": "string",
                          "example": "0"
                        },
                        "fb_id": {
                          "type": "string",
                          "example": "0"
                        },
                        "fb_name": {
                          "type": "string",
                          "example": ""
                        },
                        "tw_id": {
                          "type": "string",
                          "example": "0"
                        },
                        "created_timestamp": {
                          "type": "string",
                          "example": "0000-00-00 00:00:00"
                        },
                        "updated_timestamp": {
                          "type": "string",
                          "example": "0000-00-00 00:00:00"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "0"
                        },
                        "updated_by": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "12"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 121\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 121"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/contactGoals": {
      "get": {
        "summary": "Retrieve a contact's goals",
        "description": "",
        "operationId": "retrieve-contact-goals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactGoals\": [\n        {\n            \"goalid\": \"3\",\n            \"seriesid\": \"2\",\n            \"subscriberid\": \"5\",\n            \"subscriberseriesid\": \"83\",\n            \"timespan\": \"1\",\n            \"tstamp\": \"2021-05-12T14:55:19-05:00\",\n            \"links\": {\n                \"goal\": \"https://:account.api-us1.com/api/3/contactGoals/3/goal\",\n                \"automation\": \"https://:account.api-us1.com/api/3/contactGoals/3/automation\",\n                \"contact\": \"https://:account.api-us1.com/api/3/contactGoals/3/contact\",\n                \"contactAutomation\": \"https://:account.api-us1.com/api/3/contactGoals/3/contactAutomation\",\n                \"contactGoalLists\": \"https://:account.api-us1.com/api/3/contactGoals/3/contactGoalLists\",\n                \"contactGoalTags\": \"https://:account.api-us1.com/api/3/contactGoals/3/contactGoalTags\"\n            },\n            \"id\": \"3\",\n            \"goal\": \"3\",\n            \"automation\": \"2\",\n            \"contact\": \"5\",\n            \"contactAutomation\": \"83\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactGoals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "goalid": {
                            "type": "string",
                            "example": "3"
                          },
                          "seriesid": {
                            "type": "string",
                            "example": "2"
                          },
                          "subscriberid": {
                            "type": "string",
                            "example": "5"
                          },
                          "subscriberseriesid": {
                            "type": "string",
                            "example": "83"
                          },
                          "timespan": {
                            "type": "string",
                            "example": "1"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "2021-05-12T14:55:19-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "goal": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactGoals/3/goal"
                              },
                              "automation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactGoals/3/automation"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactGoals/3/contact"
                              },
                              "contactAutomation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactGoals/3/contactAutomation"
                              },
                              "contactGoalLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactGoals/3/contactGoalLists"
                              },
                              "contactGoalTags": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactGoals/3/contactGoalTags"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "3"
                          },
                          "goal": {
                            "type": "string",
                            "example": "3"
                          },
                          "automation": {
                            "type": "string",
                            "example": "2"
                          },
                          "contact": {
                            "type": "string",
                            "example": "5"
                          },
                          "contactAutomation": {
                            "type": "string",
                            "example": "83"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 121\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 121"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/contactLists": {
      "get": {
        "summary": "Retrieve a contact's list memberships",
        "description": "",
        "operationId": "retrieve-contact-list-memberships",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactLists\": [\n        {\n            \"contact\": \"19\",\n            \"list\": \"1\",\n            \"form\": null,\n            \"seriesid\": \"0\",\n            \"sdate\": \"2021-04-08T11:17:44-05:00\",\n            \"udate\": \"2021-05-12T11:10:06-05:00\",\n            \"status\": \"3\",\n            \"responder\": \"1\",\n            \"sync\": \"1\",\n            \"unsubreason\": null,\n            \"campaign\": null,\n            \"message\": null,\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"ip4Sub\": \"XXXXXXXXXX\",\n            \"sourceid\": \"1\",\n            \"autosyncLog\": null,\n            \"ip4_last\": \"0\",\n            \"ip4Unsub\": \"0\",\n            \"created_timestamp\": \"2021-04-08 11:17:44\",\n            \"updated_timestamp\": \"2021-05-12 11:10:06\",\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"unsubscribeAutomation\": null,\n            \"links\": {\n                \"automation\": \"https://:account.api-us1.com/api/3/contactLists/19/automation\",\n                \"list\": \"https://:account.api-us1.com/api/3/contactLists/19/list\",\n                \"contact\": \"https://:account.api-us1.com/api/3/contactLists/19/contact\",\n                \"form\": \"https://:account.api-us1.com/api/3/contactLists/19/form\",\n                \"autosyncLog\": \"https://:account.api-us1.com/api/3/contactLists/19/autosyncLog\",\n                \"campaign\": \"https://:account.api-us1.com/api/3/contactLists/19/campaign\",\n                \"unsubscribeAutomation\": \"https://:account.api-us1.com/api/3/contactLists/19/unsubscribeAutomation\",\n                \"message\": \"https://:account.api-us1.com/api/3/contactLists/19/message\"\n            },\n            \"id\": \"19\",\n            \"automation\": null\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactLists": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "19"
                          },
                          "list": {
                            "type": "string",
                            "example": "1"
                          },
                          "form": {},
                          "seriesid": {
                            "type": "string",
                            "example": "0"
                          },
                          "sdate": {
                            "type": "string",
                            "example": "2021-04-08T11:17:44-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2021-05-12T11:10:06-05:00"
                          },
                          "status": {
                            "type": "string",
                            "example": "3"
                          },
                          "responder": {
                            "type": "string",
                            "example": "1"
                          },
                          "sync": {
                            "type": "string",
                            "example": "1"
                          },
                          "unsubreason": {},
                          "campaign": {},
                          "message": {},
                          "first_name": {
                            "type": "string",
                            "example": "John"
                          },
                          "last_name": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "ip4Sub": {
                            "type": "string",
                            "example": "XXXXXXXXXX"
                          },
                          "sourceid": {
                            "type": "string",
                            "example": "1"
                          },
                          "autosyncLog": {},
                          "ip4_last": {
                            "type": "string",
                            "example": "0"
                          },
                          "ip4Unsub": {
                            "type": "string",
                            "example": "0"
                          },
                          "created_timestamp": {
                            "type": "string",
                            "example": "2021-04-08 11:17:44"
                          },
                          "updated_timestamp": {
                            "type": "string",
                            "example": "2021-05-12 11:10:06"
                          },
                          "created_by": {},
                          "updated_by": {},
                          "unsubscribeAutomation": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "automation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactLists/19/automation"
                              },
                              "list": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactLists/19/list"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactLists/19/contact"
                              },
                              "form": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactLists/19/form"
                              },
                              "autosyncLog": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactLists/19/autosyncLog"
                              },
                              "campaign": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactLists/19/campaign"
                              },
                              "unsubscribeAutomation": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactLists/19/unsubscribeAutomation"
                              },
                              "message": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactLists/19/message"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "19"
                          },
                          "automation": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 121\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 121"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/contactLogs": {
      "get": {
        "summary": "Retrieve a contact's logs",
        "description": "",
        "operationId": "retrieve-contact-logs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contactLogs\": []\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contactLogs": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/contactDeals": {
      "get": {
        "summary": "Retrieve a list of contact's deals",
        "description": "",
        "operationId": "retrieve-contact-deals-list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contacts\": [\n        {\n            \"cdate\": \"2021-11-28T00:00:00-06:00\",\n            \"email\": \"john.doe@example.com\",\n            \"phone\": \"555-555-5555\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"orgid\": \"XX\",\n            \"orgname\": \"Opulence Time\",\n            \"segmentio_id\": \"\",\n            \"bounced_hard\": \"0\",\n            \"bounced_soft\": \"0\",\n            \"bounced_date\": \"0000-00-00\",\n            \"ip\": \"0\",\n            \"ua\": \"\",\n            \"hash\": \"43fa9ikvd23cbc59915f89asd234gsda27b33\",\n            \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n            \"email_local\": \"\",\n            \"email_domain\": \"\",\n            \"sentcnt\": \"0\",\n            \"rating_tstamp\": \"0000-00-00\",\n            \"gravatar\": \"0\",\n            \"deleted\": \"0\",\n            \"anonymized\": \"0\",\n            \"adate\": \"2021-11-28T00:00:00-06:00\",\n            \"udate\": \"2021-11-28T00:00:00-06:00\",\n            \"edate\": \"2021-12-20T06:23:31-06:00\",\n            \"deleted_at\": \"0000-00-00 00:00:00\",\n            \"created_utc_timestamp\": \"2021-11-28 00:00:00\",\n            \"updated_utc_timestamp\": \"2022-01-25 16:26:37\",\n            \"created_timestamp\": \"2021-11-28 00:00:00\",\n            \"updated_timestamp\": \"2021-12-09 00:00:00\",\n            \"created_by\": \"0\",\n            \"updated_by\": \"0\",\n            \"email_empty\": false,\n            \"mpp_tracking\": \"0\",\n            \"links\": {\n                \"bounceLogs\": \"https://:account.api-us1.com/api/3/contacts/1107/bounceLogs\",\n                \"contactAutomations\": \"https://:account.api-us1.com/api/3/contacts/1107/contactAutomations?limit=1000&orders%5Blastdate%5D=DESC\",\n                \"contactData\": \"https://:account.api-us1.com/api/3/contacts/1107/contactData\",\n                \"contactGoals\": \"https://:account.api-us1.com/api/3/contacts/1107/contactGoals\",\n                \"contactLists\": \"https://:account.api-us1.com/api/3/contacts/1107/contactLists\",\n                \"contactLogs\": \"https://:account.api-us1.com/api/3/contacts/1107/contactLogs\",\n                \"contactTags\": \"https://:account.api-us1.com/api/3/contacts/1107/contactTags\",\n                \"contactDeals\": \"https://:account.api-us1.com/api/3/contacts/1107/contactDeals\",\n                \"deals\": \"https://:account.api-us1.com/api/3/contacts/1107/deals\",\n                \"fieldValues\": \"https://:account.api-us1.com/api/3/contacts/1107/fieldValues\",\n                \"geoIps\": \"https://:account.api-us1.com/api/3/contacts/1107/geoIps\",\n                \"notes\": \"https://:account.api-us1.com/api/3/contacts/1107/notes\",\n                \"organization\": \"https://:account.api-us1.com/api/3/contacts/1107/organization\",\n                \"plusAppend\": \"https://:account.api-us1.com/api/3/contacts/1107/plusAppend\",\n                \"trackingLogs\": \"https://:account.api-us1.com/api/3/contacts/1107/trackingLogs\",\n                \"scoreValues\": \"https://:account.api-us1.com/api/3/contacts/1107/scoreValues\",\n                \"accountContacts\": \"https://:account.api-us1.com/api/3/contacts/1107/accountContacts\",\n                \"automationEntryCounts\": \"https://:account.api-us1.com/api/3/contacts/1107/automationEntryCounts\"\n            },\n            \"id\": \"XXXX\",\n            \"organization\": \"XX\"\n        }\n    ],\n    \"deals\": [\n        {\n            \"hash\": \"dx60eh125\",\n            \"owner\": \"8\",\n            \"contact\": \"XXXX\",\n            \"organization\": \"31\",\n            \"group\": \"1\",\n            \"stage\": \"1\",\n            \"title\": \"Opulence Time\",\n            \"description\": \"\",\n            \"percent\": \"0\",\n            \"cdate\": \"2022-01-24T00:00:00-06:00\",\n            \"mdate\": \"2022-01-25T00:00:00-06:00\",\n            \"nextdate\": null,\n            \"nexttaskid\": \"0\",\n            \"value\": \"7320163\",\n            \"currency\": \"usd\",\n            \"winProbability\": null,\n            \"winProbabilityMdate\": null,\n            \"status\": \"0\",\n            \"activitycount\": \"24\",\n            \"nextdealid\": \"4218\",\n            \"edate\": \"2022-03-07 00:00:00\",\n            \"links\": {\n                \"dealActivities\": \"https://:account.api-us1.com/api/3/deals/4228/dealActivities\",\n                \"contact\": \"https://:account.api-us1.com/api/3/deals/4228/contact\",\n                \"contactDeals\": \"https://:account.api-us1.com/api/3/deals/4228/contactDeals\",\n                \"group\": \"https://:account.api-us1.com/api/3/deals/4228/group\",\n                \"nextTask\": \"https://:account.api-us1.com/api/3/deals/4228/nextTask\",\n                \"notes\": \"https://:account.api-us1.com/api/3/deals/4228/notes\",\n                \"account\": \"https://:account.api-us1.com/api/3/deals/4228/account\",\n                \"customerAccount\": \"https://:account.api-us1.com/api/3/deals/4228/customerAccount\",\n                \"organization\": \"https://:account.api-us1.com/api/3/deals/4228/organization\",\n                \"owner\": \"https://:account.api-us1.com/api/3/deals/4228/owner\",\n                \"scoreValues\": \"https://:account.api-us1.com/api/3/deals/4228/scoreValues\",\n                \"stage\": \"https://:account.api-us1.com/api/3/deals/4228/stage\",\n                \"tasks\": \"https://:account.api-us1.com/api/3/deals/4228/tasks\",\n                \"dealCustomFieldData\": \"https://:account.api-us1.com/api/3/deals/4228/dealCustomFieldData\"\n            },\n            \"id\": \"4228\",\n            \"isDisabled\": false,\n            \"nextTask\": null,\n            \"account\": \"31\",\n            \"customerAccount\": \"31\"\n        }\n    ],\n    \"contactDeals\": [\n        {\n            \"deal\": \"4228\",\n            \"contact\": \"5\",\n            \"role\": null,\n            \"cdate\": \"2021-10-22T13:16:27-05:00\",\n            \"created_timestamp\": \"2021-10-22 13:16:27\",\n            \"updated_timestamp\": \"2021-10-22 13:16:27\",\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"links\": {\n                \"deal\": \"https://:account.api-us1.com/api/3/contactDeals/4248/deal\",\n                \"contact\": \"https://:account.api-us1.com/api/3/contactDeals/4248/contact\",\n                \"role\": \"https://:account.api-us1.com/api/3/contactDeals/4248/role\"\n            },\n            \"id\": \"4248\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdate": {
                            "type": "string",
                            "example": "2021-11-28T00:00:00-06:00"
                          },
                          "email": {
                            "type": "string",
                            "example": "john.doe@example.com"
                          },
                          "phone": {
                            "type": "string",
                            "example": "555-555-5555"
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "orgid": {
                            "type": "string",
                            "example": "XX"
                          },
                          "orgname": {
                            "type": "string",
                            "example": "Opulence Time"
                          },
                          "segmentio_id": {
                            "type": "string",
                            "example": ""
                          },
                          "bounced_hard": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_soft": {
                            "type": "string",
                            "example": "0"
                          },
                          "bounced_date": {
                            "type": "string",
                            "example": "0000-00-00"
                          },
                          "ip": {
                            "type": "string",
                            "example": "0"
                          },
                          "ua": {
                            "type": "string",
                            "example": ""
                          },
                          "hash": {
                            "type": "string",
                            "example": "43fa9ikvd23cbc59915f89asd234gsda27b33"
                          },
                          "socialdata_lastcheck": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "email_local": {
                            "type": "string",
                            "example": ""
                          },
                          "email_domain": {
                            "type": "string",
                            "example": ""
                          },
                          "sentcnt": {
                            "type": "string",
                            "example": "0"
                          },
                          "rating_tstamp": {
                            "type": "string",
                            "example": "0000-00-00"
                          },
                          "gravatar": {
                            "type": "string",
                            "example": "0"
                          },
                          "deleted": {
                            "type": "string",
                            "example": "0"
                          },
                          "anonymized": {
                            "type": "string",
                            "example": "0"
                          },
                          "adate": {
                            "type": "string",
                            "example": "2021-11-28T00:00:00-06:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2021-11-28T00:00:00-06:00"
                          },
                          "edate": {
                            "type": "string",
                            "example": "2021-12-20T06:23:31-06:00"
                          },
                          "deleted_at": {
                            "type": "string",
                            "example": "0000-00-00 00:00:00"
                          },
                          "created_utc_timestamp": {
                            "type": "string",
                            "example": "2021-11-28 00:00:00"
                          },
                          "updated_utc_timestamp": {
                            "type": "string",
                            "example": "2022-01-25 16:26:37"
                          },
                          "created_timestamp": {
                            "type": "string",
                            "example": "2021-11-28 00:00:00"
                          },
                          "updated_timestamp": {
                            "type": "string",
                            "example": "2021-12-09 00:00:00"
                          },
                          "created_by": {
                            "type": "string",
                            "example": "0"
                          },
                          "updated_by": {
                            "type": "string",
                            "example": "0"
                          },
                          "email_empty": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "mpp_tracking": {
                            "type": "string",
                            "example": "0"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "bounceLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/bounceLogs"
                              },
                              "contactAutomations": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/contactAutomations?limit=1000&orders%5Blastdate%5D=DESC"
                              },
                              "contactData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/contactData"
                              },
                              "contactGoals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/contactGoals"
                              },
                              "contactLists": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/contactLists"
                              },
                              "contactLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/contactLogs"
                              },
                              "contactTags": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/contactTags"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/contactDeals"
                              },
                              "deals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/deals"
                              },
                              "fieldValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/fieldValues"
                              },
                              "geoIps": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/geoIps"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/notes"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/organization"
                              },
                              "plusAppend": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/plusAppend"
                              },
                              "trackingLogs": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/trackingLogs"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/scoreValues"
                              },
                              "accountContacts": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/accountContacts"
                              },
                              "automationEntryCounts": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contacts/1107/automationEntryCounts"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "XXXX"
                          },
                          "organization": {
                            "type": "string",
                            "example": "XX"
                          }
                        }
                      }
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "example": "dx60eh125"
                          },
                          "owner": {
                            "type": "string",
                            "example": "8"
                          },
                          "contact": {
                            "type": "string",
                            "example": "XXXX"
                          },
                          "organization": {
                            "type": "string",
                            "example": "31"
                          },
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "stage": {
                            "type": "string",
                            "example": "1"
                          },
                          "title": {
                            "type": "string",
                            "example": "Opulence Time"
                          },
                          "description": {
                            "type": "string",
                            "example": ""
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2022-01-24T00:00:00-06:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2022-01-25T00:00:00-06:00"
                          },
                          "nextdate": {},
                          "nexttaskid": {
                            "type": "string",
                            "example": "0"
                          },
                          "value": {
                            "type": "string",
                            "example": "7320163"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "winProbability": {},
                          "winProbabilityMdate": {},
                          "status": {
                            "type": "string",
                            "example": "0"
                          },
                          "activitycount": {
                            "type": "string",
                            "example": "24"
                          },
                          "nextdealid": {
                            "type": "string",
                            "example": "4218"
                          },
                          "edate": {
                            "type": "string",
                            "example": "2022-03-07 00:00:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealActivities": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/dealActivities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/notes"
                              },
                              "account": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/account"
                              },
                              "customerAccount": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/customerAccount"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/tasks"
                              },
                              "dealCustomFieldData": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/deals/4228/dealCustomFieldData"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "4228"
                          },
                          "isDisabled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "nextTask": {},
                          "account": {
                            "type": "string",
                            "example": "31"
                          },
                          "customerAccount": {
                            "type": "string",
                            "example": "31"
                          }
                        }
                      }
                    },
                    "contactDeals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deal": {
                            "type": "string",
                            "example": "4228"
                          },
                          "contact": {
                            "type": "string",
                            "example": "5"
                          },
                          "role": {},
                          "cdate": {
                            "type": "string",
                            "example": "2021-10-22T13:16:27-05:00"
                          },
                          "created_timestamp": {
                            "type": "string",
                            "example": "2021-10-22 13:16:27"
                          },
                          "updated_timestamp": {
                            "type": "string",
                            "example": "2021-10-22 13:16:27"
                          },
                          "created_by": {},
                          "updated_by": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "deal": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactDeals/4248/deal"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactDeals/4248/contact"
                              },
                              "role": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/contactDeals/4248/role"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "4248"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/deals": {
      "get": {
        "summary": "Retrieve a contact's deals",
        "description": "",
        "operationId": "retrieve-contact-deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"deals\": [\n        {\n            \"hash\": \"8be32as98\",\n            \"owner\": \"8\",\n            \"contact\": \"8\",\n            \"organization\": \"5\",\n            \"group\": \"1\",\n            \"stage\": \"4\",\n            \"title\": \"Acme Corp\",\n            \"description\": \"\",\n            \"percent\": \"0\",\n            \"cdate\": \"2021-06-30T15:27:44-05:00\",\n            \"mdate\": \"2021-06-30T15:27:44-05:00\",\n            \"nextdate\": null,\n            \"nexttaskid\": null,\n            \"value\": \"494227\",\n            \"currency\": \"usd\",\n            \"winProbability\": null,\n            \"winProbabilityMdate\": null,\n            \"status\": \"2\",\n            \"activitycount\": \"1\",\n            \"nextdealid\": \"3060\",\n            \"edate\": null,\n            \"links\": {\n                \"dealActivities\": \"https://:acount.api-us1.com/api/3/deals/3057/dealActivities\",\n                \"contact\": \"https://:acount.api-us1.com/api/3/deals/3057/contact\",\n                \"contactDeals\": \"https://:acount.api-us1.com/api/3/deals/3057/contactDeals\",\n                \"group\": \"https://:acount.api-us1.com/api/3/deals/3057/group\",\n                \"nextTask\": \"https://:acount.api-us1.com/api/3/deals/3057/nextTask\",\n                \"notes\": \"https://:acount.api-us1.com/api/3/deals/3057/notes\",\n                \"account\": \"https://:acount.api-us1.com/api/3/deals/3057/account\",\n                \"customerAccount\": \"https://:acount.api-us1.com/api/3/deals/3057/customerAccount\",\n                \"organization\": \"https://:acount.api-us1.com/api/3/deals/3057/organization\",\n                \"owner\": \"https://:acount.api-us1.com/api/3/deals/3057/owner\",\n                \"scoreValues\": \"https://:acount.api-us1.com/api/3/deals/3057/scoreValues\",\n                \"stage\": \"https://:acount.api-us1.com/api/3/deals/3057/stage\",\n                \"tasks\": \"https://:acount.api-us1.com/api/3/deals/3057/tasks\",\n                \"dealCustomFieldData\": \"https://:acount.api-us1.com/api/3/deals/3057/dealCustomFieldData\"\n            },\n            \"id\": \"3057\",\n            \"isDisabled\": false,\n            \"account\": \"5\",\n            \"customerAccount\": \"5\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "example": "8be32as98"
                          },
                          "owner": {
                            "type": "string",
                            "example": "8"
                          },
                          "contact": {
                            "type": "string",
                            "example": "8"
                          },
                          "organization": {
                            "type": "string",
                            "example": "5"
                          },
                          "group": {
                            "type": "string",
                            "example": "1"
                          },
                          "stage": {
                            "type": "string",
                            "example": "4"
                          },
                          "title": {
                            "type": "string",
                            "example": "Acme Corp"
                          },
                          "description": {
                            "type": "string",
                            "example": ""
                          },
                          "percent": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2021-06-30T15:27:44-05:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2021-06-30T15:27:44-05:00"
                          },
                          "nextdate": {},
                          "nexttaskid": {},
                          "value": {
                            "type": "string",
                            "example": "494227"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd"
                          },
                          "winProbability": {},
                          "winProbabilityMdate": {},
                          "status": {
                            "type": "string",
                            "example": "2"
                          },
                          "activitycount": {
                            "type": "string",
                            "example": "1"
                          },
                          "nextdealid": {
                            "type": "string",
                            "example": "3060"
                          },
                          "edate": {},
                          "links": {
                            "type": "object",
                            "properties": {
                              "dealActivities": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/dealActivities"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/contact"
                              },
                              "contactDeals": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/contactDeals"
                              },
                              "group": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/group"
                              },
                              "nextTask": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/nextTask"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/notes"
                              },
                              "account": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/account"
                              },
                              "customerAccount": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/customerAccount"
                              },
                              "organization": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/organization"
                              },
                              "owner": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/owner"
                              },
                              "scoreValues": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/scoreValues"
                              },
                              "stage": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/stage"
                              },
                              "tasks": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/tasks"
                              },
                              "dealCustomFieldData": {
                                "type": "string",
                                "example": "https://:acount.api-us1.com/api/3/deals/3057/dealCustomFieldData"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "3057"
                          },
                          "isDisabled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "account": {
                            "type": "string",
                            "example": "5"
                          },
                          "customerAccount": {
                            "type": "string",
                            "example": "5"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/fieldValues": {
      "get": {
        "summary": "Retrieve a contact's field values",
        "description": "",
        "operationId": "retrieve-contact-field-values",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fieldValues\": [\n        {\n            \"contact\": \"5\",\n            \"field\": \"1\",\n            \"value\": \"United States\",\n            \"cdate\": \"2021-05-12T14:19:38-05:00\",\n            \"udate\": \"2021-05-12T14:54:57-05:00\",\n            \"created_by\": \"0\",\n            \"updated_by\": \"0\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/1/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/1/field\"\n            },\n            \"id\": \"1\",\n            \"owner\": \"5\"\n        },\n        {\n            \"contact\": \"5\",\n            \"field\": \"2\",\n            \"value\": \"Software\",\n            \"cdate\": \"2021-05-12T14:22:54-05:00\",\n            \"udate\": \"2021-05-12T14:54:57-05:00\",\n            \"created_by\": \"0\",\n            \"updated_by\": \"0\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/2/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/2/field\"\n            },\n            \"id\": \"2\",\n            \"owner\": \"5\"\n        },\n        {\n            \"contact\": \"5\",\n            \"field\": \"3\",\n            \"value\": \"Yes\",\n            \"cdate\": \"2021-05-12T14:34:19-05:00\",\n            \"udate\": \"2021-05-12T14:54:57-05:00\",\n            \"created_by\": \"0\",\n            \"updated_by\": \"0\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/3/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/3/field\"\n            },\n            \"id\": \"3\",\n            \"owner\": \"5\"\n        },\n        {\n            \"contact\": \"5\",\n            \"field\": \"4\",\n            \"value\": \"Landing Page\",\n            \"cdate\": \"2021-05-12T14:34:56-05:00\",\n            \"udate\": \"2021-05-12T14:54:57-05:00\",\n            \"created_by\": \"0\",\n            \"updated_by\": \"0\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/4/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/4/field\"\n            },\n            \"id\": \"4\",\n            \"owner\": \"5\"\n        },\n        {\n            \"contact\": \"5\",\n            \"field\": \"5\",\n            \"value\": \"2021-05-02\",\n            \"cdate\": \"2021-05-12T14:36:26-05:00\",\n            \"udate\": \"2021-05-19T10:34:19-05:00\",\n            \"created_by\": \"0\",\n            \"updated_by\": \"0\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/5/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/5/field\"\n            },\n            \"id\": \"5\",\n            \"owner\": \"5\"\n        },\n        {\n            \"contact\": \"5\",\n            \"field\": \"7\",\n            \"value\": \"Director\",\n            \"cdate\": \"2021-05-12T14:39:00-05:00\",\n            \"udate\": \"2021-05-12T14:54:57-05:00\",\n            \"created_by\": \"0\",\n            \"updated_by\": \"0\",\n            \"links\": {\n                \"owner\": \"https://:account.api-us1.com/api/3/fieldValues/6/owner\",\n                \"field\": \"https://:account.api-us1.com/api/3/fieldValues/6/field\"\n            },\n            \"id\": \"6\",\n            \"owner\": \"5\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldValues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "5"
                          },
                          "field": {
                            "type": "string",
                            "example": "1"
                          },
                          "value": {
                            "type": "string",
                            "example": "United States"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2021-05-12T14:19:38-05:00"
                          },
                          "udate": {
                            "type": "string",
                            "example": "2021-05-12T14:54:57-05:00"
                          },
                          "created_by": {
                            "type": "string",
                            "example": "0"
                          },
                          "updated_by": {
                            "type": "string",
                            "example": "0"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/1/owner"
                              },
                              "field": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/fieldValues/1/field"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "owner": {
                            "type": "string",
                            "example": "5"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/geoIps": {
      "get": {
        "summary": "Retrieve a contacts list of geo-ips",
        "description": "",
        "operationId": "retrieve-contact-geo-ips",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"geoIps\": [{\n\t\t\"contact\": \"49\",\n\t\t\"campaignid\": \"11\",\n\t\t\"messageid\": \"12\",\n\t\t\"geoaddrid\": \"2\",\n\t\t\"ip4\": \"1123637995\",\n\t\t\"tstamp\": \"2021-05-12T11:10:06-05:00\",\n\t\t\"links\": {\n\t\t\t\"geoAddress\": \"https://:account.api-us1.com/api/3/geoIps/4/geoAddress\"\n\t\t},\n\t\t\"id\": \"4\",\n\t\t\"geoAddress\": \"2\"\n\t}]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "geoIps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": {
                            "type": "string",
                            "example": "49"
                          },
                          "campaignid": {
                            "type": "string",
                            "example": "11"
                          },
                          "messageid": {
                            "type": "string",
                            "example": "12"
                          },
                          "geoaddrid": {
                            "type": "string",
                            "example": "2"
                          },
                          "ip4": {
                            "type": "string",
                            "example": "1123637995"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "2021-05-12T11:10:06-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "geoAddress": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/geoIps/4/geoAddress"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "4"
                          },
                          "geoAddress": {
                            "type": "string",
                            "example": "2"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/notes": {
      "get": {
        "summary": "Retrieve a contacts notes",
        "description": "",
        "operationId": "retrieve-contact-notes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"notes\": [\n        {\n            \"relid\": \"7\",\n            \"reltype\": \"Subscriber\",\n            \"userid\": \"1\",\n            \"is_draft\": \"0\",\n            \"cdate\": \"2022-02-04T14:21:28-06:00\",\n            \"mdate\": \"2022-02-04T14:21:28-06:00\",\n            \"note\": \"Here is a note!\",\n            \"links\": {\n                \"activities\": \"https://:account.api-us1.com/api/3/notes/1/activities\",\n                \"user\": \"https://:account.api-us1.com/api/3/notes/1/user\",\n                \"mentions\": \"https://:account.api-us1.com/api/3/notes/1/mentions\",\n                \"notes\": \"https://:account.api-us1.com/api/3/notes/1/notes\",\n                \"owner\": \"https://:account.api-us1.com/api/3/notes/1/owner\"\n            },\n            \"id\": \"1\",\n            \"user\": \"1\",\n            \"owner\": {\n                \"type\": \"contact\",\n                \"id\": \"7\"\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relid": {
                            "type": "string",
                            "example": "7"
                          },
                          "reltype": {
                            "type": "string",
                            "example": "Subscriber"
                          },
                          "userid": {
                            "type": "string",
                            "example": "1"
                          },
                          "is_draft": {
                            "type": "string",
                            "example": "0"
                          },
                          "cdate": {
                            "type": "string",
                            "example": "2022-02-04T14:21:28-06:00"
                          },
                          "mdate": {
                            "type": "string",
                            "example": "2022-02-04T14:21:28-06:00"
                          },
                          "note": {
                            "type": "string",
                            "example": "Here is a note!"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "activities": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/activities"
                              },
                              "user": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/user"
                              },
                              "mentions": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/mentions"
                              },
                              "notes": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/notes"
                              },
                              "owner": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/notes/1/owner"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "user": {
                            "type": "string",
                            "example": "1"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "contact"
                              },
                              "id": {
                                "type": "string",
                                "example": "7"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/organization": {
      "get": {
        "summary": "Retrieve a contacts organization",
        "description": "",
        "operationId": "retrieve-contact-organization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"organization\": {\n        \"name\": \"M Corp\",\n        \"created_timestamp\": \"2021-05-21T16:15:47-05:00\",\n        \"updated_timestamp\": \"2021-08-24T06:28:56-05:00\",\n        \"userid\": \"1\",\n        \"id\": \"9\",\n        \"owner\": \"1\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "organization": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "M Corp"
                        },
                        "created_timestamp": {
                          "type": "string",
                          "example": "2021-05-21T16:15:47-05:00"
                        },
                        "updated_timestamp": {
                          "type": "string",
                          "example": "2021-08-24T06:28:56-05:00"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "id": {
                          "type": "string",
                          "example": "9"
                        },
                        "owner": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/plusAppend": {
      "get": {
        "summary": "Retrieve a contacts plus append",
        "description": "",
        "operationId": "retrieve-contact-plus-append",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"plusAppend\": {\n        \"contact\": \"3\",\n        \"last_updated_rapleaf\": null,\n        \"last_updated_fliptop\": null,\n        \"last_updated_fullcontact\": null,\n        \"imageUrl\": \"https://img.fullcontact.com/static/ece148ad832u8f2c66f23442_3e5923f243234234cec57395be553465p96u9345u69u3456354345634\",\n        \"membershipsFacebook\": \"\",\n        \"membershipsTwitter\": \"https://twitter.com/twitterHandleHere\",\n        \"membershipsLinkedin\": \"\",\n        \"links\": {\n            \"contact\": \"https://:account.api-us1.com/api/3/plusAppends/2/contact\"\n        },\n        \"id\": \"2\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "plusAppend": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "type": "string",
                          "example": "3"
                        },
                        "last_updated_rapleaf": {},
                        "last_updated_fliptop": {},
                        "last_updated_fullcontact": {},
                        "imageUrl": {
                          "type": "string",
                          "example": "https://img.fullcontact.com/static/ece148ad832u8f2c66f23442_3e5923f243234234cec57395be553465p96u9345u69u3456354345634"
                        },
                        "membershipsFacebook": {
                          "type": "string",
                          "example": ""
                        },
                        "membershipsTwitter": {
                          "type": "string",
                          "example": "https://twitter.com/twitterHandleHere"
                        },
                        "membershipsLinkedin": {
                          "type": "string",
                          "example": ""
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "contact": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/plusAppends/2/contact"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/trackingLogs": {
      "get": {
        "summary": "Retrieve a contacts tracking logs",
        "description": "",
        "operationId": "retrieve-contact-tracking-logs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"trackingLogs\": []\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "trackingLogs": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/accountContacts": {
      "get": {
        "summary": "Retrieve a contacts account contacts",
        "description": "",
        "operationId": "retrieve-contact-account-contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountContacts\": [\n        {\n            \"account\": \"9\",\n            \"contact\": \"7\",\n            \"jobTitle\": \"\",\n            \"createdTimestamp\": \"2021-05-21T16:30:23-05:00\",\n            \"updatedTimestamp\": \"2021-05-21T16:30:23-05:00\",\n            \"links\": {\n                \"account\": \"https://:account.api-us1.com/api/3/accountContacts/7/account\",\n                \"contact\": \"https://:account.api-us1.com/api/3/accountContacts/7/contact\"\n            },\n            \"id\": \"7\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountContacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "account": {
                            "type": "string",
                            "example": "9"
                          },
                          "contact": {
                            "type": "string",
                            "example": "7"
                          },
                          "jobTitle": {
                            "type": "string",
                            "example": ""
                          },
                          "createdTimestamp": {
                            "type": "string",
                            "example": "2021-05-21T16:30:23-05:00"
                          },
                          "updatedTimestamp": {
                            "type": "string",
                            "example": "2021-05-21T16:30:23-05:00"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/accountContacts/7/account"
                              },
                              "contact": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/accountContacts/7/contact"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "7"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}/automationEntryCounts": {
      "get": {
        "summary": "Retrieve a contacts automation entry counts",
        "description": "",
        "operationId": "retrieve-contact-automation-entry-counts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"automationEntryCounts\": [\n        {\n            \"id\": \"2\",\n            \"name\": \"Pages: Lead Delivery\",\n            \"status\": \"1\",\n            \"hidden\": \"0\",\n            \"contactEntryCount\": \"1\"\n        },\n        {\n            \"id\": \"4\",\n            \"name\": \"Lead Scoring\",\n            \"status\": \"1\",\n            \"hidden\": \"0\",\n            \"contactEntryCount\": \"2\"\n        },\n        {\n            \"id\": \"7\",\n            \"name\": \"Foo: Bar Creation\",\n            \"status\": \"1\",\n            \"hidden\": \"0\",\n            \"contactEntryCount\": \"1\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "automationEntryCounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "2"
                          },
                          "name": {
                            "type": "string",
                            "example": "Pages: Lead Delivery"
                          },
                          "status": {
                            "type": "string",
                            "example": "1"
                          },
                          "hidden": {
                            "type": "string",
                            "example": "0"
                          },
                          "contactEntryCount": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groupLimits": {
      "get": {
        "summary": "List All Group Limits",
        "description": "",
        "operationId": "list-all-group-limits",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"groupLimits\": [\n\t\t{\n\t\t\t\"groupid\": \"1\",\n\t\t\t\"limitMail\": \"0\",\n\t\t\t\"limitMailType\": \"month\",\n\t\t\t\"limitContact\": \"0\",\n\t\t\t\"limitList\": \"0\",\n\t\t\t\"limitCampaign\": \"0\",\n\t\t\t\"limitCampaignType\": \"month\",\n\t\t\t\"limitAttachment\": \"-1\",\n\t\t\t\"limitUser\": \"0\",\n\t\t\t\"abuseRatio\": \"4\",\n\t\t\t\"forceSenderInfo\": \"0\",\n\t\t\t\"links\": {\n\t\t\t\t\"group\": \"https://:account.api-us1.com/api/3/groupLimits/1/group\"\n\t\t\t},\n\t\t\t\"id\": \"1\",\n\t\t\t\"group\": \"1\"\n\t\t},\n\t\t{\n\t\t\t\"groupid\": \"2\",\n\t\t\t\"limitMail\": \"0\",\n\t\t\t\"limitMailType\": \"month\",\n\t\t\t\"limitContact\": \"0\",\n\t\t\t\"limitList\": \"0\",\n\t\t\t\"limitCampaign\": \"0\",\n\t\t\t\"limitCampaignType\": \"month\",\n\t\t\t\"limitAttachment\": \"-1\",\n\t\t\t\"limitUser\": \"0\",\n\t\t\t\"abuseRatio\": \"4\",\n\t\t\t\"forceSenderInfo\": \"0\",\n\t\t\t\"links\": {\n\t\t\t\t\"group\": \"https://:accounts.api-us1.com/api/3/groupLimits/2/group\"\n\t\t\t},\n\t\t\t\"id\": \"2\",\n\t\t\t\"group\": \"2\"\n\t\t},\n\t\t{\n\t\t\t\"groupid\": \"3\",\n\t\t\t\"limitMail\": \"0\",\n\t\t\t\"limitMailType\": \"month\",\n\t\t\t\"limitContact\": \"0\",\n\t\t\t\"limitList\": \"0\",\n\t\t\t\"limitCampaign\": \"0\",\n\t\t\t\"limitCampaignType\": \"month\",\n\t\t\t\"limitAttachment\": \"-1\",\n\t\t\t\"limitUser\": \"0\",\n\t\t\t\"abuseRatio\": \"4\",\n\t\t\t\"forceSenderInfo\": \"0\",\n\t\t\t\"links\": {\n\t\t\t\t\"group\": \"https://:account.api-us1.com/api/3/groupLimits/3/group\"\n\t\t\t},\n\t\t\t\"id\": \"3\",\n\t\t\t\"group\": \"3\"\n\t\t},\n\t\t{\n\t\t\t\"groupid\": \"4\",\n\t\t\t\"limitMail\": \"0\",\n\t\t\t\"limitMailType\": \"month\",\n\t\t\t\"limitContact\": \"0\",\n\t\t\t\"limitList\": \"0\",\n\t\t\t\"limitCampaign\": \"0\",\n\t\t\t\"limitCampaignType\": \"month\",\n\t\t\t\"limitAttachment\": \"-1\",\n\t\t\t\"limitUser\": \"0\",\n\t\t\t\"abuseRatio\": \"4\",\n\t\t\t\"forceSenderInfo\": \"0\",\n\t\t\t\"links\": {\n\t\t\t\t\"group\": \"https://:account.api-us1.com/api/3/groupLimits/4/group\"\n\t\t\t},\n\t\t\t\"id\": \"4\",\n\t\t\t\"group\": \"4\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": \"4\"\n\t}\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupLimits": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "groupid": {
                            "type": "string",
                            "example": "1"
                          },
                          "limitMail": {
                            "type": "string",
                            "example": "0"
                          },
                          "limitMailType": {
                            "type": "string",
                            "example": "month"
                          },
                          "limitContact": {
                            "type": "string",
                            "example": "0"
                          },
                          "limitList": {
                            "type": "string",
                            "example": "0"
                          },
                          "limitCampaign": {
                            "type": "string",
                            "example": "0"
                          },
                          "limitCampaignType": {
                            "type": "string",
                            "example": "month"
                          },
                          "limitAttachment": {
                            "type": "string",
                            "example": "-1"
                          },
                          "limitUser": {
                            "type": "string",
                            "example": "0"
                          },
                          "abuseRatio": {
                            "type": "string",
                            "example": "4"
                          },
                          "forceSenderInfo": {
                            "type": "string",
                            "example": "0"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "group": {
                                "type": "string",
                                "example": "https://:account.api-us1.com/api/3/groupLimits/1/group"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "group": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "4"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/localevent": {
      "post": {
        "summary": "Local Events",
        "description": "Published by TrackCmp. Creates an em_local_event row in production database.",
        "operationId": "local-events",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "localEvent": {
                    "type": "object",
                    "description": "Data about local event sent by TrackCmp",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email of the contact"
                      },
                      "tstamp": {
                        "type": "string",
                        "description": "Time the event happened.",
                        "format": "date-time"
                      },
                      "input": {
                        "type": "string",
                        "description": "Example: \"{\\\"event\\\":\\\"__pagevisit\\\",\\\"url\\\":\\\"www.url.com\\\"}\"",
                        "format": "json"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"message\": \"Email message\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email message"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fieldRels/{fieldRelId}": {
      "delete": {
        "summary": "Delete a custom field relationship to list(s)",
        "description": "",
        "operationId": "delete-a-custom-field-relationship-to-lists",
        "parameters": [
          {
            "name": "fieldRelId",
            "in": "path",
            "description": "Field relationship ID to be deleted",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Forbidden\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/taskNotifications": {
      "post": {
        "summary": "Create a task reminder",
        "description": "Create a new task reminder",
        "operationId": "create-a-task-reminder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "dealTask",
                  "interval"
                ],
                "properties": {
                  "dealTask": {
                    "type": "string",
                    "description": "ID of task"
                  },
                  "interval": {
                    "type": "integer",
                    "description": "Amount of time in minutes that a reminder will be sent to a task assignee ahead of task's due date.",
                    "format": "int32"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "taskNotification": {
                      "dealTask": "1",
                      "interval": "123"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customObjects/schemas/{schemaId}/fields/{fieldId}": {
      "delete": {
        "summary": "Delete a field",
        "description": "Deleting a schema field is an irreversible process.\n\nAssuming a valid `202 Accepted` response is received, any associated field data on associated records will immediately be unavailable to the user. There may be a small delay if record requests are in the midst of processing when the field delete request is issued.\n\nThe deleted field id will *not* be immediately recycled for reuse. Users are encouraged to leverage the `?showFields=all` query parameter when programmatically creating new schema fields, to ensure field id uniqueness. Fields that have been deleted will contain a `status: marked_for_deletion` attribute.\n\nThe field delete operation is only permitted for admin users.\nField deletion is not permitted on public or child schemas (private schemas only).",
        "operationId": "delete-a-field-1",
        "parameters": [
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema ID of the field to be deleted",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "Field ID of the field to be deleted",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "showFields",
            "in": "query",
            "description": "Toggle which fields are shown in the response body of a schema (if there hidden due to e.g. recently being deleted). Omit this parameter entirely to hide fields by default.",
            "schema": {
              "type": "string",
              "default": "all"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "202",
            "content": {
              "application/json": {
                "examples": {
                  "Accepted": {
                    "value": "{\n    \"schema\": {\n        \"id\": \"82ec659f-8283-4e88-9df3-26f4585fec02\",\n        \"slug\": \"my-object\",\n        \"visibility\": \"private\",\n        \"labels\": {\n            \"singular\": \"My Object\",\n            \"plural\": \"My Objects\"\n        },\n        \"description\": \"Sample Schema\",\n        \"createdTimestamp\": \"2021-10-04T20:08:09.574382410Z\",\n        \"updatedTimestamp\": \"2022-06-10T14:19:06.834158129Z\",\n        \"fields\": [\n            {\n                \"id\": \"my-number-field\",\n                \"labels\": {\n                    \"singular\": \"Number\",\n                    \"plural\": \"Numbers\"\n                },\n                \"type\": \"number\",\n                \"required\": false,\n                \"scale\": 0,\n                \"inherited\": false\n            },\n            {\n                \"id\": \"multiselect\",\n                \"labels\": {\n                    \"singular\": \"Multiselect\",\n                    \"plural\": \"Multiselect\"\n                },\n                \"type\": \"multiselect\",\n                \"required\": false,\n                \"options\": [\n                    {\n                        \"id\": \"c56d7f15-d61d-46a6-9b7e-edec21192cd5\",\n                        \"value\": \"Option 4\"\n                    },\n                    {\n                        \"id\": \"91fa9499-c08d-4b24-97c7-04a7fcf5d0dc\",\n                        \"value\": \"Option 5\"\n                    },\n                    {\n                        \"id\": \"42bc2e29-eab5-40ff-85cb-b703c7bc9fd9\",\n                        \"value\": \"Option 6\"\n                    }\n                ],\n                \"inherited\": false,\n                \"status\": \"marked_for_deletion\"\n            },\n            {\n                \"id\": \"test-field-1\",\n                \"labels\": {\n                    \"singular\": \"test field\",\n                    \"plural\": \"test field\"\n                },\n                \"type\": \"text\",\n                \"required\": false,\n                \"inherited\": false,\n                \"status\": \"marked_for_deletion\"\n            },\n            {\n                \"id\": \"test-field\",\n                \"labels\": {\n                    \"singular\": \"test field\",\n                    \"plural\": \"test field\"\n                },\n                \"type\": \"text\",\n                \"required\": false,\n                \"inherited\": false,\n                \"status\": \"marked_for_deletion\"\n            },\n            {\n                \"id\": \"dropdown\",\n                \"labels\": {\n                    \"singular\": \"Dropdown\",\n                    \"plural\": \"Dropdown\"\n                },\n                \"type\": \"dropdown\",\n                \"required\": false,\n                \"options\": [\n                    {\n                        \"id\": \"81529d6b-b5f5-4b13-a3d7-f00b62f1072f\",\n                        \"value\": \"Option 1\"\n                    },\n                    {\n                        \"id\": \"0a9d10a0-a3ea-4247-a2ef-0ed990e2d908\",\n                        \"value\": \"Option 2\"\n                    },\n                    {\n                        \"id\": \"d60f84cf-cca5-4284-97fd-fdc833caa82b\",\n                        \"value\": \"Option 3\"\n                    }\n                ],\n                \"inherited\": false,\n                \"status\": \"marked_for_deletion\"\n            }\n        ],\n        \"icons\": {\n            \"default\": \"https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png\"\n        },\n        \"relationships\": [\n            {\n                \"id\": \"primary-contact\",\n                \"labels\": {\n                    \"singular\": \"Primary Contact\",\n                    \"plural\": \"Primary Contacts\"\n                },\n                \"description\": \"Primary contact to this object\",\n                \"namespace\": \"contacts\",\n                \"hasMany\": false,\n                \"inherited\": false\n            }\n        ]\n    }\n}"
                  },
                  "Result": {
                    "value": "{\n    \"schema\": {\n        \"id\": \"82ec659f-8283-4e88-9df3-26f4585fec02\",\n        \"slug\": \"my-object\",\n        \"visibility\": \"private\",\n        \"labels\": {\n            \"singular\": \"My Object\",\n            \"plural\": \"My Objects\"\n        },\n        \"description\": \"Sample Schema\",\n        \"createdTimestamp\": \"2021-10-04T20:08:09.574382410Z\",\n        \"updatedTimestamp\": \"2022-06-10T14:19:06.834158129Z\",\n        \"fields\": [\n            {\n                \"id\": \"my-number-field\",\n                \"labels\": {\n                    \"singular\": \"Number\",\n                    \"plural\": \"Numbers\"\n                },\n                \"type\": \"number\",\n                \"required\": false,\n                \"scale\": 0,\n                \"inherited\": false\n            },\n            {\n                \"id\": \"multiselect\",\n                \"labels\": {\n                    \"singular\": \"Multiselect\",\n                    \"plural\": \"Multiselect\"\n                },\n                \"type\": \"multiselect\",\n                \"required\": false,\n                \"options\": [\n                    {\n                        \"id\": \"c56d7f15-d61d-46a6-9b7e-edec21192cd5\",\n                        \"value\": \"Option 4\"\n                    },\n                    {\n                        \"id\": \"91fa9499-c08d-4b24-97c7-04a7fcf5d0dc\",\n                        \"value\": \"Option 5\"\n                    },\n                    {\n                        \"id\": \"42bc2e29-eab5-40ff-85cb-b703c7bc9fd9\",\n                        \"value\": \"Option 6\"\n                    }\n                ],\n                \"inherited\": false,\n                \"status\": \"marked_for_deletion\"\n            },\n            {\n                \"id\": \"test-field-1\",\n                \"labels\": {\n                    \"singular\": \"test field\",\n                    \"plural\": \"test field\"\n                },\n                \"type\": \"text\",\n                \"required\": false,\n                \"inherited\": false,\n                \"status\": \"marked_for_deletion\"\n            },\n            {\n                \"id\": \"test-field\",\n                \"labels\": {\n                    \"singular\": \"test field\",\n                    \"plural\": \"test field\"\n                },\n                \"type\": \"text\",\n                \"required\": false,\n                \"inherited\": false,\n                \"status\": \"marked_for_deletion\"\n            },\n            {\n                \"id\": \"dropdown\",\n                \"labels\": {\n                    \"singular\": \"Dropdown\",\n                    \"plural\": \"Dropdown\"\n                },\n                \"type\": \"dropdown\",\n                \"required\": false,\n                \"options\": [\n                    {\n                        \"id\": \"81529d6b-b5f5-4b13-a3d7-f00b62f1072f\",\n                        \"value\": \"Option 1\"\n                    },\n                    {\n                        \"id\": \"0a9d10a0-a3ea-4247-a2ef-0ed990e2d908\",\n                        \"value\": \"Option 2\"\n                    },\n                    {\n                        \"id\": \"d60f84cf-cca5-4284-97fd-fdc833caa82b\",\n                        \"value\": \"Option 3\"\n                    }\n                ],\n                \"inherited\": false,\n                \"status\": \"marked_for_deletion\"\n            }\n        ],\n        \"icons\": {\n            \"default\": \"https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png\"\n        },\n        \"relationships\": [\n            {\n                \"id\": \"primary-contact\",\n                \"labels\": {\n                    \"singular\": \"Primary Contact\",\n                    \"plural\": \"Primary Contacts\"\n                },\n                \"description\": \"Primary contact to this object\",\n                \"namespace\": \"contacts\",\n                \"hasMany\": false,\n                \"inherited\": false\n            }\n        ]\n    }\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "title": "Accepted",
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "82ec659f-8283-4e88-9df3-26f4585fec02"
                            },
                            "slug": {
                              "type": "string",
                              "example": "my-object"
                            },
                            "visibility": {
                              "type": "string",
                              "example": "private"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {
                                "singular": {
                                  "type": "string",
                                  "example": "My Object"
                                },
                                "plural": {
                                  "type": "string",
                                  "example": "My Objects"
                                }
                              }
                            },
                            "description": {
                              "type": "string",
                              "example": "Sample Schema"
                            },
                            "createdTimestamp": {
                              "type": "string",
                              "example": "2021-10-04T20:08:09.574382410Z"
                            },
                            "updatedTimestamp": {
                              "type": "string",
                              "example": "2022-06-10T14:19:06.834158129Z"
                            },
                            "fields": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "my-number-field"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "properties": {
                                      "singular": {
                                        "type": "string",
                                        "example": "Number"
                                      },
                                      "plural": {
                                        "type": "string",
                                        "example": "Numbers"
                                      }
                                    }
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "number"
                                  },
                                  "required": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  },
                                  "scale": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "inherited": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  }
                                }
                              }
                            },
                            "icons": {
                              "type": "object",
                              "properties": {
                                "default": {
                                  "type": "string",
                                  "example": "https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png"
                                }
                              }
                            },
                            "relationships": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "primary-contact"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "properties": {
                                      "singular": {
                                        "type": "string",
                                        "example": "Primary Contact"
                                      },
                                      "plural": {
                                        "type": "string",
                                        "example": "Primary Contacts"
                                      }
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "Primary contact to this object"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "example": "contacts"
                                  },
                                  "hasMany": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  },
                                  "inherited": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "82ec659f-8283-4e88-9df3-26f4585fec02"
                            },
                            "slug": {
                              "type": "string",
                              "example": "my-object"
                            },
                            "visibility": {
                              "type": "string",
                              "example": "private"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {
                                "singular": {
                                  "type": "string",
                                  "example": "My Object"
                                },
                                "plural": {
                                  "type": "string",
                                  "example": "My Objects"
                                }
                              }
                            },
                            "description": {
                              "type": "string",
                              "example": "Sample Schema"
                            },
                            "createdTimestamp": {
                              "type": "string",
                              "example": "2021-10-04T20:08:09.574382410Z"
                            },
                            "updatedTimestamp": {
                              "type": "string",
                              "example": "2022-06-10T14:19:06.834158129Z"
                            },
                            "fields": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "my-number-field"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "properties": {
                                      "singular": {
                                        "type": "string",
                                        "example": "Number"
                                      },
                                      "plural": {
                                        "type": "string",
                                        "example": "Numbers"
                                      }
                                    }
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "number"
                                  },
                                  "required": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  },
                                  "scale": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "inherited": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  }
                                }
                              }
                            },
                            "icons": {
                              "type": "object",
                              "properties": {
                                "default": {
                                  "type": "string",
                                  "example": "https://d226aj4ao1t61q.cloudfront.net/n9mayqo2d_customobject.png"
                                }
                              }
                            },
                            "relationships": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "primary-contact"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "properties": {
                                      "singular": {
                                        "type": "string",
                                        "example": "Primary Contact"
                                      },
                                      "plural": {
                                        "type": "string",
                                        "example": "Primary Contacts"
                                      }
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "Primary contact to this object"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "example": "contacts"
                                  },
                                  "hasMany": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  },
                                  "inherited": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{contactId}/trackingLogs": {
      "get": {
        "summary": "Get Contact's Tracking Logs/Events",
        "description": "Get a log of events for a Contact",
        "operationId": "get-contacts-tracking-logsevents",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "The Contact's ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"trackingLogs\": [\n        {\n            \"subscriberid\": \"112\",\n            \"type\": \"Another event\",\n            \"value\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure do\",\n            \"tstamp\": \"2022-09-27T12:39:59-05:00\",\n            \"hash\": \"358a9a13d85efb7b888014ec57790efb6c13ab3a\",\n            \"links\": {\n                \"contact\": \"https://yourAccountName.api-us1.com/api/3/trackingLogs/12/contact\"\n            },\n            \"id\": \"12\",\n            \"contact\": \"112\"\n        },\n        {\n            \"subscriberid\": \"112\",\n            \"type\": \"Yet Another Event\",\n            \"value\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure do\",\n            \"tstamp\": \"2022-09-27T13:35:01-05:00\",\n            \"hash\": \"abc4307d06ff83df6869c24e86552dfada77277d\",\n            \"links\": {\n                \"contact\": \"https://yourAccountName.api-us1.com/api/3/trackingLogs/15/contact\"\n            },\n            \"id\": \"15\",\n            \"contact\": \"112\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "trackingLogs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "subscriberid": {
                            "type": "string",
                            "example": "112"
                          },
                          "type": {
                            "type": "string",
                            "example": "Another event"
                          },
                          "value": {
                            "type": "string",
                            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure do"
                          },
                          "tstamp": {
                            "type": "string",
                            "example": "2022-09-27T12:39:59-05:00"
                          },
                          "hash": {
                            "type": "string",
                            "example": "358a9a13d85efb7b888014ec57790efb6c13ab3a"
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "contact": {
                                "type": "string",
                                "example": "https://yourAccountName.api-us1.com/api/3/trackingLogs/12/contact"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "example": "12"
                          },
                          "contact": {
                            "type": "string",
                            "example": "112"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/trackingLogs/{eventId}/contact": {
      "get": {
        "summary": "Get Contact By Event ID",
        "description": "Get the contact that was involved in an event.",
        "operationId": "get-contact-by-event-id",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The Event's ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"contact\": {\n        \"cdate\": \"2022-09-22T12:36:33-05:00\",\n        \"email\": \"jd@example.com\",\n        \"phone\": \"555-555-5555\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"orgid\": \"0\",\n        \"orgname\": \"\",\n        \"segmentio_id\": \"\",\n        \"bounced_hard\": \"0\",\n        \"bounced_soft\": \"0\",\n        \"bounced_date\": \"0000-00-00\",\n        \"ip\": \"0\",\n        \"ua\": \"\",\n        \"hash\": \"ef73fe360240b8bf171744f7f341524f\",\n        \"socialdata_lastcheck\": \"0000-00-00 00:00:00\",\n        \"email_local\": \"\",\n        \"email_domain\": \"example.com\",\n        \"sentcnt\": \"0\",\n        \"rating_tstamp\": \"0000-00-00\",\n        \"gravatar\": \"0\",\n        \"deleted\": \"0\",\n        \"anonymized\": \"0\",\n        \"adate\": \"2022-09-27T14:57:35-05:00\",\n        \"udate\": \"2022-09-22T12:36:33-05:00\",\n        \"edate\": \"2022-09-27T13:36:04-05:00\",\n        \"deleted_at\": \"0000-00-00 00:00:00\",\n        \"created_utc_timestamp\": \"2022-09-22 12:36:33\",\n        \"updated_utc_timestamp\": \"2022-09-27 13:36:04\",\n        \"created_timestamp\": \"2022-09-22 12:36:33\",\n        \"updated_timestamp\": \"2022-09-27 13:36:04\",\n        \"created_by\": \"0\",\n        \"updated_by\": \"0\",\n        \"email_empty\": false,\n        \"mpp_tracking\": \"0\",\n        \"links\": {\n            \"bounceLogs\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/bounceLogs\",\n            \"contactAutomations\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/contactAutomations?limit=1000&orders%5Blastdate%5D=DESC\",\n            \"contactData\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/contactData\",\n            \"contactGoals\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/contactGoals\",\n            \"contactLists\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/contactLists\",\n            \"contactLogs\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/contactLogs\",\n            \"contactTags\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/contactTags\",\n            \"contactDeals\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/contactDeals\",\n            \"deals\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/deals\",\n            \"fieldValues\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/fieldValues\",\n            \"geoIps\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/geoIps\",\n            \"notes\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/notes\",\n            \"organization\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/organization\",\n            \"plusAppend\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/plusAppend\",\n            \"trackingLogs\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/trackingLogs\",\n            \"scoreValues\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/scoreValues\",\n            \"accountContacts\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/accountContacts\",\n            \"automationEntryCounts\": \"https://yourAccountName.api-us1.com/api/3/contacts/112/automationEntryCounts\"\n        },\n        \"id\": \"112\",\n        \"organization\": null\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "contact": {
                      "type": "object",
                      "properties": {
                        "cdate": {
                          "type": "string",
                          "example": "2022-09-22T12:36:33-05:00"
                        },
                        "email": {
                          "type": "string",
                          "example": "jd@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "555-555-5555"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "orgid": {
                          "type": "string",
                          "example": "0"
                        },
                        "orgname": {
                          "type": "string",
                          "example": ""
                        },
                        "segmentio_id": {
                          "type": "string",
                          "example": ""
                        },
                        "bounced_hard": {
                          "type": "string",
                          "example": "0"
                        },
                        "bounced_soft": {
                          "type": "string",
                          "example": "0"
                        },
                        "bounced_date": {
                          "type": "string",
                          "example": "0000-00-00"
                        },
                        "ip": {
                          "type": "string",
                          "example": "0"
                        },
                        "ua": {
                          "type": "string",
                          "example": ""
                        },
                        "hash": {
                          "type": "string",
                          "example": "ef73fe360240b8bf171744f7f341524f"
                        },
                        "socialdata_lastcheck": {
                          "type": "string",
                          "example": "0000-00-00 00:00:00"
                        },
                        "email_local": {
                          "type": "string",
                          "example": ""
                        },
                        "email_domain": {
                          "type": "string",
                          "example": "example.com"
                        },
                        "sentcnt": {
                          "type": "string",
                          "example": "0"
                        },
                        "rating_tstamp": {
                          "type": "string",
                          "example": "0000-00-00"
                        },
                        "gravatar": {
                          "type": "string",
                          "example": "0"
                        },
                        "deleted": {
                          "type": "string",
                          "example": "0"
                        },
                        "anonymized": {
                          "type": "string",
                          "example": "0"
                        },
                        "adate": {
                          "type": "string",
                          "example": "2022-09-27T14:57:35-05:00"
                        },
                        "udate": {
                          "type": "string",
                          "example": "2022-09-22T12:36:33-05:00"
                        },
                        "edate": {
                          "type": "string",
                          "example": "2022-09-27T13:36:04-05:00"
                        },
                        "deleted_at": {
                          "type": "string",
                          "example": "0000-00-00 00:00:00"
                        },
                        "created_utc_timestamp": {
                          "type": "string",
                          "example": "2022-09-22 12:36:33"
                        },
                        "updated_utc_timestamp": {
                          "type": "string",
                          "example": "2022-09-27 13:36:04"
                        },
                        "created_timestamp": {
                          "type": "string",
                          "example": "2022-09-22 12:36:33"
                        },
                        "updated_timestamp": {
                          "type": "string",
                          "example": "2022-09-27 13:36:04"
                        },
                        "created_by": {
                          "type": "string",
                          "example": "0"
                        },
                        "updated_by": {
                          "type": "string",
                          "example": "0"
                        },
                        "email_empty": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "mpp_tracking": {
                          "type": "string",
                          "example": "0"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "bounceLogs": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/bounceLogs"
                            },
                            "contactAutomations": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/contactAutomations?limit=1000&orders%5Blastdate%5D=DESC"
                            },
                            "contactData": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/contactData"
                            },
                            "contactGoals": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/contactGoals"
                            },
                            "contactLists": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/contactLists"
                            },
                            "contactLogs": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/contactLogs"
                            },
                            "contactTags": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/contactTags"
                            },
                            "contactDeals": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/contactDeals"
                            },
                            "deals": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/deals"
                            },
                            "fieldValues": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/fieldValues"
                            },
                            "geoIps": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/geoIps"
                            },
                            "notes": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/notes"
                            },
                            "organization": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/organization"
                            },
                            "plusAppend": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/plusAppend"
                            },
                            "trackingLogs": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/trackingLogs"
                            },
                            "scoreValues": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/scoreValues"
                            },
                            "accountContacts": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/accountContacts"
                            },
                            "automationEntryCounts": {
                              "type": "string",
                              "example": "https://yourAccountName.api-us1.com/api/3/contacts/112/automationEntryCounts"
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "112"
                        },
                        "organization": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/dealActivities": {
      "get": {
        "summary": "List all deal activities",
        "description": "View a recent activity for Deals. A specific deal's activity can also be viewed using /api/3/deals/[dealID]/dealActivities.",
        "operationId": "list-all-deal-activities",
        "parameters": [
          {
            "name": "exclude=email",
            "in": "query",
            "description": "Include this param to exclude \"email\", \"connection_email\", and \"LinkData\" activity types",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deal",
            "in": "query",
            "description": "Filter by deal ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[data_type]",
            "in": "query",
            "description": "Enter any dataType (see Response Details) to filter by that type. Examples: \"userid\" or task\" or \"note\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters[data_id]",
            "in": "query",
            "description": "Enter any dataId (see Response details) to filter by related object. Example \"291\" for a note with ID 291",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "\"dealActivities\": [\n\t{\n    \"d_id\": \"1361\",\n    \"d_stageid\": \"0\",\n    \"userid\": \"1\",\n    \"dataId\": \"0\",\n    \"dataType\": \"\",\n    \"dataAction\": \"add\",\n    \"dataOldval\": \"\",\n    \"cdate\": \"2023-03-29T10:22:03-05:00\",\n    \"sortdate\": \"2023-03-29T10:22:03-05:00\",\n    \"isAddtask\": \"0\",\n    \"deleted\": \"0\",\n    \"seriesid\": \"0\",\n    \"links\": {\n      \"deal\": \"https://account.activehosted.com/api/3/dealActivities/15110/deal\",\n      \"stage\": \"https://account.activehosted.com/api/3/dealActivities/15110/stage\",\n      \"user\": \"https://account.activehosted.com/api/3/dealActivities/15110/user\",\n      \"automation\": \"https://account.activehosted.com/api/3/dealActivities/15110/automation\",\n      \"activity\": \"https://account.activehosted.com/api/3/dealActivities/15110/activity\"\n    },\n    \"id\": \"15110\",\n    \"deal\": \"1361\",\n    \"stage\": null,\n    \"user\": \"1\",\n    \"automation\": null\n   },\n  {\n    \"d_id\": \"1361\",\n    \"d_stageid\": \"0\",\n    \"userid\": \"1\",\n    \"dataId\": \"1512\",\n    \"dataType\": \"contact\",\n    \"dataAction\": \"add\",\n    \"dataOldval\": \"\",\n    \"cdate\": \"2023-03-29T10:22:04-05:00\",\n    \"sortdate\": \"2023-03-29T10:22:04-05:00\",\n    \"isAddtask\": \"0\",\n    \"deleted\": \"0\",\n    \"seriesid\": \"0\",\n    \"links\": {\n      \"deal\": \"https://account.activehosted.com/api/3/dealActivities/15111/deal\",\n      \"stage\": \"https://account.activehosted.com/api/3/dealActivities/15111/stage\",\n      \"user\": \"https://account.activehosted.com/api/3/dealActivities/15111/user\",\n      \"automation\": \"https://account.activehosted.com/api/3/dealActivities/15111/automation\",\n      \"activity\": \"https://account.activehosted.com/api/3/dealActivities/15111/activity\"\n    },\n    \"id\": \"15111\",\n    \"deal\": \"1361\",\n    \"stage\": null,\n    \"user\": \"1\",\n    \"automation\": null\n   }\n  ],\n  \"meta\": {\n  \"total\": \"2\"\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groupMembers": {
      "post": {
        "summary": "Add Custom Field to Field Group",
        "description": "",
        "operationId": "add-custom-field-to-field-group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rel_id": {
                    "type": "integer",
                    "description": "Custom field ID",
                    "format": "int32"
                  },
                  "ordernum": {
                    "type": "integer",
                    "description": "Order within the field group, use null to append",
                    "format": "int32"
                  },
                  "group_id": {
                    "type": "integer",
                    "default": null,
                    "format": "int32"
                  }
                }
              },
              "examples": {
                "POST": {
                  "value": {
                    "groupMember": {
                      "rel_id": "10",
                      "ordernum": null,
                      "group_id": "1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"groupMember\": {\n        \"id\": 87,\n        \"group_id\": 1,\n        \"rel_id\": 10,\n        \"ordernum\": 18,\n        \"created_by\": 1,\n        \"updated_by\": 1,\n        \"links\": {\n            \"groupDefinition\": \"https://yourAccounut.api-us1.com/api/3/groupDefinitions/1\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupMember": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 87,
                          "default": 0
                        },
                        "group_id": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "rel_id": {
                          "type": "integer",
                          "example": 10,
                          "default": 0
                        },
                        "ordernum": {
                          "type": "integer",
                          "example": 18,
                          "default": 0
                        },
                        "created_by": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "updated_by": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupDefinition": {
                              "type": "string",
                              "example": "https://yourAccounut.api-us1.com/api/3/groupDefinitions/1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "rel_id left blank": {
                    "value": "{\n    \"message\": \"Client error: `POST https://escape-velocity-grouper.cluster-private.app-us1.com/member` resulted in a `400 Bad Request` response:\\n{\\\"message\\\": {\\\"rel_id\\\": \\\"rel_id is required\\\"}}\\n\\n\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Client error: `POST https://escape-velocity-grouper.cluster-private.app-us1.com/member` resulted in a `400 Bad Request` response:\n{\"message\": {\"rel_id\": \"rel_id is required\"}}\n\n"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for GroupDefinition with id 94\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for GroupDefinition with id 94"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The field title was not provided.\",\n            \"detail\": \"\",\n            \"code\": \"field_missing\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The field title was not provided."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_missing"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/groupMembers/{groupID}": {
      "delete": {
        "summary": "Delete Custom Field Field Group",
        "description": "",
        "operationId": "delete-custom-field-field-group",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "Group ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {},
              "examples": {
                "POST": {
                  "value": {
                    "groupMember": {
                      "rel_id": "10",
                      "ordernum": null,
                      "group_id": "1"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Custom Field to Field Group",
        "description": "",
        "operationId": "get-custom-field-to-field-group",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "Group ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"groupMember\": {\n        \"id\": 89,\n        \"group_id\": 1,\n        \"rel_id\": 5,\n        \"ordernum\": 20,\n        \"links\": {\n            \"groupDefinition\": \"https://:account.api-us1.com/api/3/groupDefinitions/1\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupMember": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 89,
                          "default": 0
                        },
                        "group_id": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "rel_id": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "ordernum": {
                          "type": "integer",
                          "example": 20,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupDefinition": {
                              "type": "string",
                              "example": "https://:account.api-us1.com/api/3/groupDefinitions/1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"status\": 404,\n            \"title\": \"Not Found\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {},
              "examples": {
                "POST": {
                  "value": {
                    "groupMember": {
                      "rel_id": "10",
                      "ordernum": null,
                      "group_id": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groupMembers/{groupId}": {
      "put": {
        "summary": "Update Custom Field Field Group",
        "description": "",
        "operationId": "update-custom-field-field-group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Field group ID (see notes)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rel_id": {
                    "type": "integer",
                    "description": "Custom field ID",
                    "format": "int32"
                  },
                  "ordernum": {
                    "type": "integer",
                    "description": "Order within the field group, use null to append",
                    "format": "int32"
                  },
                  "group_id": {
                    "type": "integer",
                    "default": null,
                    "format": "int32"
                  }
                }
              },
              "examples": {
                "POST": {
                  "value": {
                    "groupMember": {
                      "rel_id": "10",
                      "ordernum": null,
                      "group_id": "1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"groupMember\": {\n        \"id\": 87,\n        \"group_id\": 1,\n        \"rel_id\": 10,\n        \"ordernum\": 18,\n        \"created_by\": 1,\n        \"updated_by\": 1,\n        \"links\": {\n            \"groupDefinition\": \"https://yourAccounut.api-us1.com/api/3/groupDefinitions/1\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupMember": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 87,
                          "default": 0
                        },
                        "group_id": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "rel_id": {
                          "type": "integer",
                          "example": 10,
                          "default": 0
                        },
                        "ordernum": {
                          "type": "integer",
                          "example": 18,
                          "default": 0
                        },
                        "created_by": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "updated_by": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupDefinition": {
                              "type": "string",
                              "example": "https://yourAccounut.api-us1.com/api/3/groupDefinitions/1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "rel_id left blank": {
                    "value": "{\n    \"message\": \"Client error: `POST https://escape-velocity-grouper.cluster-private.app-us1.com/member` resulted in a `400 Bad Request` response:\\n{\\\"message\\\": {\\\"rel_id\\\": \\\"rel_id is required\\\"}}\\n\\n\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Client error: `POST https://escape-velocity-grouper.cluster-private.app-us1.com/member` resulted in a `400 Bad Request` response:\n{\"message\": {\"rel_id\": \"rel_id is required\"}}\n\n"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for GroupDefinition with id 94\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for GroupDefinition with id 94"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        {\n            \"title\": \"The field title was not provided.\",\n            \"detail\": \"\",\n            \"code\": \"field_missing\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "The field title was not provided."
                          },
                          "detail": {
                            "type": "string",
                            "example": ""
                          },
                          "code": {
                            "type": "string",
                            "example": "field_missing"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/geoIps/{geoAddressID}/geoAddress": {
      "get": {
        "summary": "Retrieve a contacts geo IP address",
        "description": "",
        "operationId": "retrieve-a-contacts-geo-ip-address",
        "parameters": [
          {
            "name": "geoAddressID",
            "in": "path",
            "description": "ID of the contact",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"geoAddress\": {\n        \"ip4\": \"1234567890\",\n        \"country2\": \"US\",\n        \"country\": \"United States\",\n        \"state\": \"New York\",\n        \"city\": \"New York\",\n        \"zip\": \"10001\",\n        \"area\": \"0\",\n        \"lat\": \"40.7128\",\n        \"lon\": \"-74.0060\",\n        \"tz\": \"America/Chicago\",\n        \"tstamp\": \"2023-12-20T14:14:46-06:00\",\n        \"links\": [],\n        \"id\": \"3\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "geoAddress": {
                      "type": "object",
                      "properties": {
                        "ip4": {
                          "type": "string",
                          "example": "1234567890"
                        },
                        "country2": {
                          "type": "string",
                          "example": "US"
                        },
                        "country": {
                          "type": "string",
                          "example": "United States"
                        },
                        "state": {
                          "type": "string",
                          "example": "New York"
                        },
                        "city": {
                          "type": "string",
                          "example": "New York"
                        },
                        "zip": {
                          "type": "string",
                          "example": "10001"
                        },
                        "area": {
                          "type": "string",
                          "example": "0"
                        },
                        "lat": {
                          "type": "string",
                          "example": "40.7128"
                        },
                        "lon": {
                          "type": "string",
                          "example": "-74.0060"
                        },
                        "tz": {
                          "type": "string",
                          "example": "America/Chicago"
                        },
                        "tstamp": {
                          "type": "string",
                          "example": "2023-12-20T14:14:46-06:00"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Subscriber with id 100\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Subscriber with id 100"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/personalizations": {
      "get": {
        "summary": "List Variables",
        "description": "Retrieve a list of personalization variables",
        "operationId": "list-variables",
        "parameters": [
          {
            "name": "orders[format]",
            "in": "query",
            "description": "Order variables by format (ASC/DESC)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[tag]",
            "in": "query",
            "description": "Order variables by tag (ASC/DESC)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[name]",
            "in": "query",
            "description": "Order variables by name (ASC/DESC)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders[content]",
            "in": "query",
            "description": "Order variables by content (ASC/DESC)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Filter by variable name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[tag]",
            "in": "query",
            "description": "Filter by variable tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[listName]",
            "in": "query",
            "description": "Filter by name of list",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[content]",
            "in": "query",
            "description": "Contents of variable",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[format]",
            "in": "query",
            "description": "Filter by tag format (html, text)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Result limit (Default: 20)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"personalizations\": [\n    {\n      \"name\": \"address\",\n      \"tag\": \"awesometag\",\n      \"format\": \"html\",\n      \"content\": \"this is the first content\",\n      \"listIds\": \"1,2,3\",\n      \"listNames\": \"List1,List2,List3\",\n      \"links\": [\n        \n      ],\n      \"id\": \"1\"\n    },\n    {\n      \"name\": \"phone\",\n      \"tag\": \"greattag\",\n      \"format\": \"html\",\n      \"content\": \"this is the second one\",\n      \"listIds\": \"3,4\",\n      \"listNames\": \"List3,List4\",\n      \"links\": [\n        \n      ],\n      \"id\": \"2\"\n    },\n    {\n      \"name\": \"nice\\n\",\n      \"tag\": \"hellotag\",\n      \"format\": \"text\",\n      \"content\": \"this is the third one\",\n      \"listIds\": \"1,3\",\n      \"listNames\": \"List1,List3\",\n      \"links\": [\n        \n      ],\n      \"id\": \"3\"\n    },\n    {\n      \"name\": \"hahah\",\n      \"tag\": \"goodtag\",\n      \"format\": \"html\",\n      \"content\": \"fourth\",\n      \"listIds\": \"1,4\",\n      \"listNames\": \"List1,List4\",\n      \"links\": [\n        \n      ],\n      \"id\": \"4\"\n    },\n    {\n      \"name\": \"hello world\",\n      \"tag\": \"nicetag\",\n      \"format\": \"text\",\n      \"content\": \"fifth\",\n      \"listIds\": \"2,3,4\",\n      \"listNames\": \"List2,List3,List4\",\n      \"links\": [\n        \n      ],\n      \"id\": \"5\"\n    }\n  ],\n  \"meta\": {\n    \"total\": \"5\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "personalizations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "address"
                          },
                          "tag": {
                            "type": "string",
                            "example": "awesometag"
                          },
                          "format": {
                            "type": "string",
                            "example": "html"
                          },
                          "content": {
                            "type": "string",
                            "example": "this is the first content"
                          },
                          "listIds": {
                            "type": "string",
                            "example": "1,2,3"
                          },
                          "listNames": {
                            "type": "string",
                            "example": "List1,List2,List3"
                          },
                          "links": {
                            "type": "array"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "string",
                          "example": "5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a Variable",
        "description": "Create a personalization variable",
        "operationId": "create-variable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personalization": {
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "tag name"
                      },
                      "name": {
                        "type": "string",
                        "description": "Tag name"
                      },
                      "format": {
                        "type": "string",
                        "description": "\"html\" or \"text\""
                      },
                      "content": {
                        "type": "string",
                        "description": "Personalization/Variable contents"
                      },
                      "listids": {
                        "type": "string",
                        "description": "Comma-separated list of list ids (string), ie: \"2,3,4,5\""
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"personalization\": {\n        \"tag\": \"brand-new-tag\",\n        \"name\": \"brand new name\",\n        \"format\": \"text\",\n        \"content\": \"Hello World!\",\n        \"listids\": \"2,3,4,5\",\n        \"userid\": \"1\",\n        \"links\": [],\n        \"id\": \"8\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "personalization": {
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "example": "brand-new-tag"
                        },
                        "name": {
                          "type": "string",
                          "example": "brand new name"
                        },
                        "format": {
                          "type": "string",
                          "example": "text"
                        },
                        "content": {
                          "type": "string",
                          "example": "Hello World!"
                        },
                        "listids": {
                          "type": "string",
                          "example": "2,3,4,5"
                        },
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "8"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/personalizations/{variableID}": {
      "get": {
        "summary": "Retrieve a Variable",
        "description": "Retrieve an individual personalization variable",
        "operationId": "retrieve-variable",
        "parameters": [
          {
            "name": "variableID",
            "in": "path",
            "description": "ID (int) of variable",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"personalization\": {\n        \"name\": \"brand new name\",\n        \"tag\": \"brand-new-tag\",\n        \"format\": \"text\",\n        \"content\": \"Hello World!\",\n        \"listIds\": \"2,3,5,4\",\n        \"listNames\": \"Another List,League Players,real,Test Segmentation\",\n        \"listsCount\": \"4\",\n        \"links\": [],\n        \"id\": \"8\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "personalization": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "brand new name"
                        },
                        "tag": {
                          "type": "string",
                          "example": "brand-new-tag"
                        },
                        "format": {
                          "type": "string",
                          "example": "text"
                        },
                        "content": {
                          "type": "string",
                          "example": "Hello World!"
                        },
                        "listIds": {
                          "type": "string",
                          "example": "2,3,5,4"
                        },
                        "listNames": {
                          "type": "string",
                          "example": "Another List,League Players,real,Test Segmentation"
                        },
                        "listsCount": {
                          "type": "string",
                          "example": "4"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "8"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Personalization with id 22\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Personalization with id 22"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Edit a Variable",
        "description": "Edit a personalization variable",
        "operationId": "edit-variable",
        "parameters": [
          {
            "name": "variableID",
            "in": "path",
            "description": "ID (int) of personalization/variable",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personalization": {
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "tag name"
                      },
                      "name": {
                        "type": "string",
                        "description": "Tag name"
                      },
                      "format": {
                        "type": "string",
                        "description": "\"html\" or \"text\""
                      },
                      "content": {
                        "type": "string",
                        "description": "Personalization/Variable contents"
                      },
                      "listids": {
                        "type": "string",
                        "description": "Comma-separated list of list ids (string), ie: \"2,3,4,5\""
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"personalization\": {\n        \"userid\": \"1\",\n        \"tag\": \"brand-new-tag\",\n        \"name\": \"changed name\",\n        \"content\": \"Hello World!\",\n        \"format\": \"text\",\n        \"created_timestamp\": \"2024-08-14 12:31:35\",\n        \"updated_timestamp\": \"2024-08-14 12:31:35\",\n        \"created_by\": null,\n        \"updated_by\": null,\n        \"listids\": \"2,3,4,5\",\n        \"links\": [],\n        \"id\": \"8\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "personalization": {
                      "type": "object",
                      "properties": {
                        "userid": {
                          "type": "string",
                          "example": "1"
                        },
                        "tag": {
                          "type": "string",
                          "example": "brand-new-tag"
                        },
                        "name": {
                          "type": "string",
                          "example": "changed name"
                        },
                        "content": {
                          "type": "string",
                          "example": "Hello World!"
                        },
                        "format": {
                          "type": "string",
                          "example": "text"
                        },
                        "created_timestamp": {
                          "type": "string",
                          "example": "2024-08-14 12:31:35"
                        },
                        "updated_timestamp": {
                          "type": "string",
                          "example": "2024-08-14 12:31:35"
                        },
                        "created_by": {},
                        "updated_by": {},
                        "listids": {
                          "type": "string",
                          "example": "2,3,4,5"
                        },
                        "links": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "8"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for ActiveCampaign\\\\Hosted\\\\Personalization\\\\Personalization with id 22\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for ActiveCampaign\\Hosted\\Personalization\\Personalization with id 22"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a Variable",
        "description": "Delete a personalization variable",
        "operationId": "delete-variable",
        "parameters": [
          {
            "name": "variableID",
            "in": "path",
            "description": "ID (int) of personalization/variable",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"No Result found for Personalization with id 22\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Result found for Personalization with id 22"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/personalizations/bulkdelete": {
      "delete": {
        "summary": "Bulk Delete Variables",
        "description": "Bulk delete personalization variables",
        "operationId": "bulk-delete-variables",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "List of variables to be deleted, ie: 1,2,3",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "Delete successful"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/campaigns/{id}/edit": {
      "put": {
        "summary": "Edit campaign",
        "description": "",
        "operationId": "edit-campaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Campaign name"
                  },
                  "type": {
                    "type": "string",
                    "description": "Campaign type"
                  },
                  "segmentId": {
                    "type": "integer",
                    "description": "Id of selected segment",
                    "format": "int32"
                  },
                  "addressId": {
                    "type": "integer",
                    "description": "Id of selected address",
                    "format": "int32"
                  },
                  "listIds": {
                    "type": "array",
                    "description": "Array of selected lists ids",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "replyTrackingEnabled": {
                    "type": "boolean",
                    "description": "Turn on/off reply tracking"
                  },
                  "linkTrackingEnabled": {
                    "type": "boolean",
                    "description": "Turn on/off link tracking"
                  },
                  "googleAnalyticsLinkTrackingEnabled": {
                    "type": "boolean",
                    "description": "Turn on/off google analytics link tracking"
                  },
                  "googleAnalyticsCampaignName": {
                    "type": "string",
                    "description": "Name of campaign in google analytics"
                  },
                  "readTrackingEnabled": {
                    "type": "boolean",
                    "description": "Turn on/off read tracking"
                  },
                  "sendToExistingSubscribers": {
                    "type": "boolean",
                    "description": "Should send only to existing customers"
                  },
                  "canSplitContent": {
                    "type": "boolean",
                    "description": "Campaign can contains split content"
                  },
                  "recurring": {
                    "type": "boolean",
                    "description": "Is campaign recurring"
                  },
                  "responderDaysOffset": {
                    "type": "integer",
                    "description": "Determine value of responder offset in days",
                    "format": "int32"
                  },
                  "responderHoursOffset": {
                    "type": "integer",
                    "description": "Determine value of responder offset in hours",
                    "format": "int32"
                  },
                  "scheduledDate": {
                    "type": "string",
                    "description": "Date of sending"
                  },
                  "reminderField": {
                    "type": "string",
                    "description": "Field basic on witch reminder will be triggered"
                  },
                  "reminderOffset": {
                    "type": "integer",
                    "description": "Value of reminder offset",
                    "format": "int32"
                  },
                  "reminderOffsetType": {
                    "type": "string",
                    "description": "Type of reminder offset"
                  },
                  "reminderType": {
                    "type": "string",
                    "description": "Format of reminder date"
                  },
                  "rssInterval": {
                    "type": "integer",
                    "description": "Interval for RSS",
                    "format": "int32"
                  },
                  "splitType": {
                    "type": "string",
                    "description": "Type of split campaign"
                  },
                  "splitWinnerWaitPeriod": {
                    "type": "integer",
                    "description": "Period wait time",
                    "format": "int32"
                  },
                  "splitWinnerWaitPeriodType": {
                    "type": "string",
                    "description": "Determine period type"
                  },
                  "publicCampaignArchive": {
                    "type": "boolean",
                    "description": "Is campaign public"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/campaign": {
      "post": {
        "summary": "Create Campaign",
        "description": "",
        "operationId": "create-campaign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "canSplitContent": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "name": "New campaign",
                    "type": "single"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": 149,\n    \"name\": \"New campaign\",\n    \"type\": \"single\",\n    \"canSplitContent\": false\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 149,
                      "default": 0
                    },
                    "name": {
                      "type": "string",
                      "example": "New campaign"
                    },
                    "type": {
                      "type": "string",
                      "example": "single"
                    },
                    "canSplitContent": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": [\n        \"Field name is required\",\n        \"Field type must be of type string\"\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Field name is required"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/campaigns/{id}/copy": {
      "post": {
        "summary": "Duplicate Campaign",
        "description": "",
        "operationId": "duplicate-campaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the source campaign",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"succeeded\":1,\n  \"message\":\"Campaign draft copied.\",\n  \"newCampaignId\":217\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "succeeded": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Campaign draft copied."
                    },
                    "newCampaignId": {
                      "type": "integer",
                      "example": 217,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "'Bad request. You are not allowed to copy this campaign.'"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "x-readme": {
    "headers": []
  },
  "x-readme-fauxas": true
}